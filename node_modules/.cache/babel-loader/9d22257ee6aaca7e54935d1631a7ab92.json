{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/pages/UserProfile.js\";\nimport React, { Component } from 'react';\nimport queryString from 'query-string';\nimport '../style/App.css';\nimport { loadPosts, loadLikes, loadUserFollowing, followUser, unFollowUser } from '../backendCalls';\nimport { getLoggedInUser, getUser } from '../spotifyCalls';\nimport Post from '../components/Post';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\n\nclass UserProfile extends Component {\n  constructor() {\n    super();\n\n    this.handlePlayerStatus = async device_id => {\n      this.setState({\n        deviceId: device_id\n      });\n    };\n\n    this.initializePlayer = () => {\n      const name = this.state.serverData.user.name + ' vibes';\n      this.player = new window.Spotify.Player({\n        getOAuthToken: cb => {\n          cb(this.state.accessToken);\n        },\n        name\n      });\n      this.player.addListener('initialization_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('authentication_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('account_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('playback_error', ({\n        message\n      }) => {\n        console.error(message);\n      }); // Playback status updates\n\n      this.player.addListener('player_state_changed', state => {\n        console.log(state);\n      }); // Ready\n\n      this.player.addListener('ready', ({\n        device_id\n      }) => {\n        this.handlePlayerStatus(device_id);\n        console.log('Ready with Device ID', device_id);\n      }); // Not Ready\n\n      this.player.addListener('not_ready', ({\n        device_id\n      }) => {\n        console.log('Device ID has gone offline', device_id);\n      });\n      this.player.connect();\n    };\n\n    this.state = {\n      deviceId: '',\n      accessToken: '',\n      profilePageUsername: '',\n      serverData: {},\n      muted: true,\n      followers: [],\n      following: [],\n      loggedInUserFollowingProfileUser: false\n    };\n    this.clickFollowButton = this.clickFollowButton.bind(this);\n    this.followUser = this.followUser.bind(this);\n    this.unfollowUser = this.unfollowUser.bind(this);\n    this.redirectToHomePage = this.redirectToHomePage.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = queryString.parse(window.location.search);\n    let profilePageUsernameFromUrl = parsed.username;\n    let profilePageIDFromUrl = parsed.userId;\n    let postsForProfile = [];\n\n    if (parsed.access_token) {\n      let accessToken = parsed.access_token;\n      getUser(accessToken, profilePageIDFromUrl).then(user => {\n        let imgUrl = user.images && user.images.length > 0 ? user.images[0].url : '';\n        this.setState({\n          imgUrl: imgUrl\n        });\n      });\n      getLoggedInUser(accessToken).then(user => {\n        loadUserFollowing(profilePageIDFromUrl).then(profilePageuser => {\n          let loggedInUserFollowingProfileUser = profilePageuser.followers && profilePageuser.followers.includes({\n            username: user.display_name,\n            userId: user.id\n          });\n          console.log(user.id);\n          console.log(user.name);\n          console.log(profilePageuser.followers.includes({\n            userId: user.id,\n            username: user.name\n          }));\n          this.setState({\n            followers: profilePageuser.followers,\n            following: profilePageuser.following,\n            loggedInUserFollowingProfileUser: loggedInUserFollowingProfileUser\n          });\n        });\n        loadPosts().then(posts => {\n          loadLikes().then(likes => {\n            posts.forEach(post => {\n              let likedByProfilePageUser = false;\n              let likeCount = 0;\n\n              if (post.username === profilePageUsernameFromUrl) {\n                likes.forEach(like => {\n                  if (post._id === like.postId) {\n                    likeCount++;\n                  }\n                });\n                post = { ...post,\n                  likedByProfilePageUser: likedByProfilePageUser,\n                  likeCount: likeCount\n                };\n                postsForProfile.push(post);\n              } else {\n                likes.forEach(like => {\n                  if (post._id === like.postId) {\n                    likeCount++;\n\n                    if (like.username === profilePageUsernameFromUrl) {\n                      post = { ...post,\n                        likedByProfilePageUser: true,\n                        likeCount: likeCount\n                      };\n                      postsForProfile.push(post);\n                    }\n                  }\n                });\n              }\n            });\n            this.setState({\n              accessToken: accessToken,\n              serverData: {\n                posts: postsForProfile,\n                user: {\n                  name: user.display_name,\n                  id: user.id\n                }\n              },\n              profilePageUsername: profilePageUsernameFromUrl,\n              profilePageId: profilePageIDFromUrl\n            });\n          }).then(window.onSpotifyWebPlaybackSDKReady = this.initializePlayer);\n        });\n      });\n    } else {\n      loadUserFollowing(profilePageIDFromUrl).then(user => {\n        console.log(profilePageIDFromUrl);\n        console.log(user);\n        this.setState({\n          followers: user.followers,\n          following: user.following\n        });\n      });\n      loadPosts().then(posts => {\n        loadLikes().then(likes => {\n          posts.forEach(post => {\n            let likeCount = 0;\n\n            if (post.username === profilePageUsernameFromUrl) {\n              likes.forEach(like => {\n                if (post._id === like.postId) {\n                  likeCount++;\n                }\n              });\n              post = { ...post,\n                likedByProfilePageUser: false,\n                likeCount: likeCount\n              };\n              postsForProfile.push(post);\n            } else {\n              likes.forEach(like => {\n                if (post._id === like.postId) {\n                  likeCount++;\n\n                  if (like.username === profilePageUsernameFromUrl) {\n                    post = { ...post,\n                      likedByProfilePageUser: true,\n                      likeCount: likeCount\n                    };\n                    postsForProfile.push(post);\n                  }\n                }\n              });\n            }\n          });\n          this.setState({\n            serverData: {\n              posts: postsForProfile\n            },\n            profilePageUsername: profilePageUsernameFromUrl\n          });\n        });\n      });\n    }\n  }\n\n  unfollowUser() {\n    unFollowUser(this.state.serverData.user.id, this.state.profilePageId);\n    const updatedFollowerList = this.state.followers;\n    const deleteIndex = updatedFollowerList.findIndex(x => x === this.state.serverData.user.id);\n    updatedFollowerList.splice(deleteIndex, 1);\n    this.setState({\n      followers: updatedFollowerList,\n      loggedInUserFollowingProfileUser: false\n    });\n  }\n\n  followUser() {\n    followUser(this.state.serverData.user.name, this.state.serverData.user.id, this.state.profilePageUsername, this.state.profilePageId);\n    const updatedFollowerList = this.state.followers;\n    updatedFollowerList.push({\n      userId: this.state.serverData.user.id,\n      username: this.state.serverData.user.name\n    });\n    this.setState({\n      followers: updatedFollowerList,\n      loggedInUserFollowingProfileUser: true\n    });\n  }\n\n  clickFollowButton() {\n    this.state.followers.includes({\n      username: this.state.serverData.user.name,\n      userId: this.state.serverData.user.id\n    }) ? this.unfollowUser() : this.followUser();\n  }\n\n  redirectToHomePage() {\n    window.location.href = window.location.origin + (this.state.accessToken ? '?access_token=' + this.state.accessToken : '');\n  }\n\n  render() {\n    let allPosts = this.state.serverData.posts ? this.state.serverData.posts : [];\n    let followers = this.state.followers ? this.state.followers : [];\n    let following = this.state.following ? this.state.following : [];\n    let name = this.state.serverData.user ? this.state.serverData.user.name : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        'margin': '.5em'\n      },\n      onClick: this.redirectToHomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, \"Vibe Share\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttonContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"myButtonWhite\",\n      onClick: this.handleLogInButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, this.state.accessToken ? 'Log Out' : 'Log In'))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profilePageContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profilePageUser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profilePageImg\",\n      src: this.state.imgUrl ? this.state.imgUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"profilePageUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, this.state.profilePageUsername), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"followContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, this.state.serverData.user && this.state.serverData.user.name !== this.state.profilePageUsername && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"myButtonBlue\",\n      onClick: this.clickFollowButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }, this.state.loggedInUserFollowingProfileUser ? 'Unfollow' : 'Follow'), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 25\n      }\n    }, \"Followers: \", followers.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scrollFollowers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    }, followers.map(follower => /*#__PURE__*/React.createElement(FollowerLink, {\n      follow: follower,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 25\n      }\n    }, \"Following: \", following.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scrollFollowing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    }, following.map(following => /*#__PURE__*/React.createElement(FollowerLink, {\n      follow: following,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profilePagePosts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, allPosts.map(currentPost => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, currentPost.likedByProfilePageUser && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"userProfileLikes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 68\n      }\n    }, this.state.profilePageUsername, \" liked:\"), /*#__PURE__*/React.createElement(Post, {\n      post: currentPost,\n      deviceId: this.state.deviceId,\n      accessToken: this.state.accessToken,\n      muted: this.state.muted,\n      username: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 29\n      }\n    }))))));\n  }\n\n}\n\nexport default UserProfile;\n\nclass FollowerLink extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgUrl: '',\n      name: ''\n    };\n    this.redirectToUserProfile = this.redirectToUserProfile.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = '';\n\n    if (parsed.access_token) {\n      accessToken = parsed.access_token;\n      getUser(accessToken, this.props.follow.userId).then(user => {\n        let imgUrl = user.images ? user.images[0].url : '';\n        this.setState({\n          imgUrl: imgUrl\n        });\n      });\n    }\n  }\n\n  redirectToUserProfile() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = '';\n    if (parsed.access_token) accessToken = parsed.access_token;\n    window.location.href = window.location.origin + '/user/?username=' + this.props.follow.username + '&userId=' + this.props.follow.userId + (accessToken ? '&access_token=' + accessToken : '');\n  }\n\n  render() {\n    let name = this.props.follow.username;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"followerLink\",\n      onClick: this.redirectToUserProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imgUrl ? this.state.imgUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }\n    }, name));\n  }\n\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/pages/UserProfile.js"],"names":["React","Component","queryString","loadPosts","loadLikes","loadUserFollowing","followUser","unFollowUser","getLoggedInUser","getUser","Post","profilePicturePlaceholder","UserProfile","constructor","handlePlayerStatus","device_id","setState","deviceId","initializePlayer","name","state","serverData","user","player","window","Spotify","Player","getOAuthToken","cb","accessToken","addListener","message","console","error","log","connect","profilePageUsername","muted","followers","following","loggedInUserFollowingProfileUser","clickFollowButton","bind","unfollowUser","redirectToHomePage","componentDidMount","parsed","parse","location","search","profilePageUsernameFromUrl","username","profilePageIDFromUrl","userId","postsForProfile","access_token","then","imgUrl","images","length","url","profilePageuser","includes","display_name","id","posts","likes","forEach","post","likedByProfilePageUser","likeCount","like","_id","postId","push","profilePageId","onSpotifyWebPlaybackSDKReady","updatedFollowerList","deleteIndex","findIndex","x","splice","href","origin","render","allPosts","handleLogInButton","map","follower","currentPost","FollowerLink","props","redirectToUserProfile","follow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport '../style/App.css';\nimport { loadPosts, loadLikes, loadUserFollowing, followUser, unFollowUser } from '../backendCalls'\nimport { getLoggedInUser, getUser } from '../spotifyCalls';\nimport Post from '../components/Post';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\n\nclass UserProfile extends Component {\n    constructor() {\n        super();\n        this.state = {\n            deviceId: '',\n            accessToken: '',\n            profilePageUsername: '',\n            serverData: {},\n            muted: true,\n            followers: [],\n            following: [],\n            loggedInUserFollowingProfileUser: false\n        };\n        this.clickFollowButton = this.clickFollowButton.bind(this);\n        this.followUser = this.followUser.bind(this);\n        this.unfollowUser = this.unfollowUser.bind(this);\n        this.redirectToHomePage = this.redirectToHomePage.bind(this);\n    }\n    handlePlayerStatus = async (device_id) => {\n        this.setState({\n            deviceId: device_id,\n        });\n    };\n    initializePlayer = () => {\n        const name = this.state.serverData.user.name + ' vibes';\n\n        this.player = new window.Spotify.Player({\n            getOAuthToken: cb => {\n                cb(this.state.accessToken);\n            },\n            name\n        });\n\n        this.player.addListener('initialization_error', ({ message }) => { console.error(message); });\n        this.player.addListener('authentication_error', ({ message }) => { console.error(message); });\n        this.player.addListener('account_error', ({ message }) => { console.error(message); });\n        this.player.addListener('playback_error', ({ message }) => { console.error(message); });\n\n        // Playback status updates\n        this.player.addListener('player_state_changed', state => { console.log(state); });\n\n        // Ready\n        this.player.addListener('ready', ({ device_id }) => {\n            this.handlePlayerStatus(device_id);\n            console.log('Ready with Device ID', device_id);\n        });\n\n        // Not Ready\n        this.player.addListener('not_ready', ({ device_id }) => {\n            console.log('Device ID has gone offline', device_id);\n        });\n\n        this.player.connect();\n    };\n    componentDidMount() {\n        let parsed = queryString.parse(window.location.search);\n        let profilePageUsernameFromUrl = parsed.username;\n        let profilePageIDFromUrl = parsed.userId;\n        let postsForProfile = [];\n        if (parsed.access_token) {\n            let accessToken = parsed.access_token;\n            getUser(accessToken, profilePageIDFromUrl).then(user => {\n                let imgUrl = user.images && user.images.length > 0 ?\n                    user.images[0].url : '';\n                this.setState({\n                    imgUrl: imgUrl\n                });\n            });\n\n            getLoggedInUser(accessToken).then(user => {\n                loadUserFollowing(profilePageIDFromUrl).then(profilePageuser => {\n                    let loggedInUserFollowingProfileUser = profilePageuser.followers &&\n                        profilePageuser.followers.includes({\n                            username: user.display_name,\n                            userId: user.id\n                        });\n                        console.log(user.id)\n                        console.log(user.name);\n                    console.log(profilePageuser.followers.includes({\n                        userId: user.id,\n                        username: user.name\n                    }));\n                this.setState({\n                    followers: profilePageuser.followers,\n                    following: profilePageuser.following,\n                    loggedInUserFollowingProfileUser: loggedInUserFollowingProfileUser\n                });\n            });\n\n            loadPosts().then(posts => {\n                loadLikes().then(likes => {\n                    posts.forEach(post => {\n                        let likedByProfilePageUser = false;\n                        let likeCount = 0\n                        if (post.username === profilePageUsernameFromUrl) {\n                            likes.forEach(like => {\n                                if (post._id === like.postId) {\n                                    likeCount++;\n                                }\n                            });\n                            post = {\n                                ...post,\n                                likedByProfilePageUser: likedByProfilePageUser,\n                                likeCount: likeCount\n                            }\n                            postsForProfile.push(post);\n                        } else {\n                            likes.forEach(like => {\n                                if (post._id === like.postId) {\n                                    likeCount++;\n                                    if (like.username === profilePageUsernameFromUrl) {\n                                        post = {\n                                            ...post,\n                                            likedByProfilePageUser: true,\n                                            likeCount: likeCount\n                                        }\n                                        postsForProfile.push(post);\n                                    }\n                                }\n                            });\n                        }\n                    });\n\n                    this.setState({\n                        accessToken: accessToken,\n                        serverData: {\n                            posts: postsForProfile,\n                            user: {\n                                name: user.display_name,\n                                id: user.id\n                            }\n                        },\n                        profilePageUsername: profilePageUsernameFromUrl,\n                        profilePageId: profilePageIDFromUrl,\n                    });\n                }).then(window.onSpotifyWebPlaybackSDKReady = this.initializePlayer);\n            });\n        });\n    } else {\n    loadUserFollowing(profilePageIDFromUrl).then(user => {\n        console.log(profilePageIDFromUrl);\n        console.log(user);\n        this.setState({\n            followers: user.followers,\n            following: user.following,\n        })\n    })\n\n    loadPosts().then(posts => {\n        loadLikes().then(likes => {\n            posts.forEach(post => {\n                let likeCount = 0\n                if (post.username === profilePageUsernameFromUrl) {\n                    likes.forEach(like => {\n                        if (post._id === like.postId) {\n                            likeCount++;\n                        }\n                    });\n                    post = {\n                        ...post,\n                        likedByProfilePageUser: false,\n                        likeCount: likeCount\n                    }\n                    postsForProfile.push(post);\n                } else {\n                    likes.forEach(like => {\n                        if (post._id === like.postId) {\n                            likeCount++;\n                            if (like.username === profilePageUsernameFromUrl) {\n                                post = {\n                                    ...post,\n                                    likedByProfilePageUser: true,\n                                    likeCount: likeCount\n                                }\n                                postsForProfile.push(post);\n                            }\n                        }\n                    });\n                }\n            });\n            this.setState({\n                serverData: {\n                    posts: postsForProfile,\n                },\n                profilePageUsername: profilePageUsernameFromUrl\n            });\n        });\n    });\n}\n    }\nunfollowUser() {\n    unFollowUser(this.state.serverData.user.id, this.state.profilePageId);\n    const updatedFollowerList = this.state.followers;\n    const deleteIndex = updatedFollowerList.findIndex(x => x === this.state.serverData.user.id);\n    updatedFollowerList.splice(deleteIndex, 1);\n    this.setState({\n        followers: updatedFollowerList,\n        loggedInUserFollowingProfileUser: false\n    });\n}\nfollowUser() {\n    followUser(this.state.serverData.user.name, this.state.serverData.user.id,\n        this.state.profilePageUsername, this.state.profilePageId);\n    const updatedFollowerList = this.state.followers;\n    updatedFollowerList.push({\n        userId: this.state.serverData.user.id,\n        username: this.state.serverData.user.name\n    });\n    this.setState({\n        followers: updatedFollowerList,\n        loggedInUserFollowingProfileUser: true\n    });\n}\nclickFollowButton() {\n    this.state.followers.includes({\n        username: this.state.serverData.user.name,\n        userId: this.state.serverData.user.id\n    }) ? this.unfollowUser() : this.followUser();\n}\nredirectToHomePage() {\n    window.location.href = window.location.origin + (this.state.accessToken ? ('?access_token=' + this.state.accessToken) : '');\n}\nrender() {\n    let allPosts = this.state.serverData.posts ? this.state.serverData.posts : [];\n    let followers = this.state.followers ? this.state.followers : [];\n    let following = this.state.following ? this.state.following : [];\n    let name = this.state.serverData.user ? this.state.serverData.user.name : '';\n    return (\n        <div className='App'>\n            <div className='header'>\n                <h1 style={{ 'margin': '.5em' }} onClick={this.redirectToHomePage}>Vibe Share</h1>\n                <div className='buttonContainer'>\n                    <button className='myButtonWhite' onClick={this.handleLogInButton}>{this.state.accessToken ? 'Log Out' : 'Log In'}</button>\n                </div>\n            </div>\n            <div className='profilePageContent'>\n                <div className='profilePageUser'>\n                    <img className='profilePageImg' src={this.state.imgUrl ? this.state.imgUrl : profilePicturePlaceholder} />\n                    <h2 className='profilePageUsername'>{this.state.profilePageUsername}</h2>\n                    <div className='followContainer'>\n                        {this.state.serverData.user && (this.state.serverData.user.name !== this.state.profilePageUsername) &&\n                            <button className='myButtonBlue' onClick={this.clickFollowButton}>{this.state.loggedInUserFollowingProfileUser ? 'Unfollow' : 'Follow'}</button>\n                        }\n                        <h3>Followers: {followers.length}</h3>\n                        <div className='scrollFollowers'>\n                            {followers.map(follower =>\n                                <FollowerLink follow={follower} ></FollowerLink>\n                            )}\n                        </div>\n                        <h3>Following: {following.length}</h3>\n                        <div className='scrollFollowing'>\n                            {following.map(following =>\n                                <FollowerLink follow={following} ></FollowerLink>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className='profilePagePosts'>\n                    {allPosts.map(currentPost =>\n                        <div className='postContainer'>\n                            {currentPost.likedByProfilePageUser && <p className=\"userProfileLikes\">{this.state.profilePageUsername} liked:</p>}\n                            <Post\n                                post={currentPost}\n                                deviceId={this.state.deviceId}\n                                accessToken={this.state.accessToken}\n                                muted={this.state.muted}\n                                username={name}\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div >\n    )\n}\n}\n\nexport default UserProfile;\n\nclass FollowerLink extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imgUrl: '',\n            name: '',\n        };\n        this.redirectToUserProfile = this.redirectToUserProfile.bind(this);\n    }\n    componentDidMount() {\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = ''\n        if (parsed.access_token) {\n            accessToken = parsed.access_token;\n            getUser(accessToken, this.props.follow.userId).then(user => {\n                let imgUrl = user.images ?\n                    user.images[0].url : '';\n                this.setState({\n                    imgUrl: imgUrl,\n                });\n            });\n        }\n    }\n    redirectToUserProfile() {\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = ''\n        if (parsed.access_token)\n            accessToken = parsed.access_token;\n\n        window.location.href = window.location.origin +\n            '/user/?username=' + this.props.follow.username +\n            '&userId=' + this.props.follow.userId +\n            (accessToken ? ('&access_token=' + accessToken) : '');\n    }\n    render() {\n        let name = this.props.follow.username;\n        return (\n            <div className=\"followerLink\" onClick={this.redirectToUserProfile}>\n                <img src={this.state.imgUrl ? this.state.imgUrl : profilePicturePlaceholder}></img>\n                <h3>{name}</h3>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}