{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/components/Post.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause } from '../spotifyCalls';\nimport { useHistory, Link } from 'react-router-dom';\n\nclass PostInfo extends Component {\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profilePic\",\n      src: profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"postText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }, text)));\n  }\n\n}\n\nclass PostMusic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.routeToSpotify = () => {\n      const history = useHistory();\n      history.push('https://open.spotify.com/track/' + this.props.songId);\n    };\n\n    this.loadTrack = async () => {\n      const trackData = await getTrack(this.props.accessToken, this.props.songId);\n      const albumCover = trackData.album.images[0].url;\n      this.setState({\n        picLoaded: true,\n        albumUrl: albumCover,\n        songName: this.props.songName\n      });\n    };\n\n    this.state = {\n      picLoaded: false,\n      albumUrl: '',\n      songName: ''\n    };\n    this.routeToSpotify = this.routeToSpotify.bind(this);\n  }\n\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n\n    if (this.props.loggedIn && this.state.songName != this.props.songName || this.props.loggedIn && !this.state.picLoaded) {\n      this.loadTrack();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postMusic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"albumImg\",\n      onClick: event => window.location.href = 'https://open.spotify.com/track/' + this.props.songId,\n      src: this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songCredit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"songName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, songName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, songArtist)));\n  }\n\n}\n\nexport default class Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pauseSong = async startTime => {\n      pause(this.props.accessToken);\n      this.stopTimer(startTime);\n    };\n\n    this.playSong = async (songId, startTime, endTime) => {\n      playAt(this.props.deviceId, this.props.accessToken, songId, startTime);\n      clearInterval(this.timer);\n      this.timer = '';\n      this.startTimer(startTime, endTime);\n    };\n\n    this.startTimer = async (startTime, endTime) => {\n      this.setState({\n        time: startTime,\n        start: Date.now() - startTime\n      });\n\n      if (!this.timer) {\n        this.timer = setInterval(() => {\n          this.setState({\n            time: Math.floor(Date.now() - this.state.start)\n          });\n\n          if (this.state.time > endTime) {\n            this.pauseSong(startTime);\n          }\n        }, 1000);\n      }\n    };\n\n    this.stopTimer = async startTime => {\n      console.log('Stop timer');\n      this.setState({\n        time: startTime\n      });\n      clearInterval(this.timer);\n      this.timer = '';\n    };\n\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.state = {\n      playing: false,\n      time: 0,\n      start: 0,\n      accessToken: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      accessToken: this.props.accessToken\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.accessToken != prevProps.accessToken) this.setState({\n      accessToken: this.props.accessToken\n    });\n  }\n\n  handleMouseHover() {// this.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n  }\n\n  handleMouseLeave() {// setTimeout((() => {\n    //     this.pauseSong(this.props.post.startTime);\n    // }), 300);\n  }\n\n  render() {\n    let post = this.props.post;\n    console.log(this.state.accessToken);\n\n    if (this.state.accessToken) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post\",\n        onMouseEnter: this.handleMouseHover,\n        onMouseLeave: this.handleMouseLeave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"postInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PostInfo, {\n        name: post.name,\n        text: post.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(PostMusic, {\n        songName: post.songName,\n        songArtist: post.songArtist,\n        songId: post.songId,\n        loggedIn: true,\n        accessToken: this.props.accessToken,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"likeButtonContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"likeButton myButtonBlue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }, post.likeCount)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"postInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PostInfo, {\n        name: post.name,\n        text: post.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(PostMusic, {\n        songName: post.songName,\n        songArtist: post.songArtist,\n        songId: post.songId,\n        loggedIn: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"likeButtonContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"likeButton myButtonBlue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, post.likeCount)));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/components/Post.js"],"names":["React","Component","profilePicturePlaceholder","queryString","getTrack","playAt","pause","useHistory","Link","PostInfo","render","name","props","text","PostMusic","constructor","routeToSpotify","history","push","songId","loadTrack","trackData","accessToken","albumCover","album","images","url","setState","picLoaded","albumUrl","songName","state","bind","songArtist","loggedIn","event","window","location","href","Post","pauseSong","startTime","stopTimer","playSong","endTime","deviceId","clearInterval","timer","startTimer","time","start","Date","now","setInterval","Math","floor","console","log","handleMouseHover","handleMouseLeave","playing","componentDidMount","componentDidUpdate","prevProps","post","likeCount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause } from '../spotifyCalls';\nimport { useHistory, Link } from 'react-router-dom';\n\nclass PostInfo extends Component {\n    render() {\n        let name = this.props.name;\n        let text = this.props.text;\n        return (\n            <div className=\"postInfo\">\n                <img className=\"profilePic\" src={profilePicturePlaceholder}></img>\n                <div>\n                    <h3 className=\"username\">{name}</h3>\n                    <p className=\"postText\">{text}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass PostMusic extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            picLoaded: false,\n            albumUrl: '',\n            songName: ''\n        };\n        this.routeToSpotify = this.routeToSpotify.bind(this);\n    }\n    routeToSpotify = () => {\n        const history = useHistory();\n        history.push('https://open.spotify.com/track/' + this.props.songId);\n    }\n    loadTrack = async () => {\n        const trackData = await getTrack(this.props.accessToken, this.props.songId);\n        const albumCover = trackData.album.images[0].url;\n        this.setState({\n            picLoaded: true,\n            albumUrl: albumCover,\n            songName: this.props.songName\n        });\n    }\n    render() {\n        let songName = this.props.songName;\n        let songArtist = this.props.songArtist;\n        if ((this.props.loggedIn && (this.state.songName != this.props.songName)) || (this.props.loggedIn && !this.state.picLoaded)) {\n            this.loadTrack();\n        }\n        return (\n            <div className=\"postMusic\">\n                <img className=\"albumImg\"\n                    onClick={event => window.location.href = 'https://open.spotify.com/track/' + this.props.songId}\n                    src={this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder}>\n                </img>\n                <div className=\"songCredit\">\n                    <h4 className=\"songName\">{songName}</h4>\n                    <p className=\"artists\">{songArtist}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class Post extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.state = {\n            playing: false,\n            time: 0,\n            start: 0,\n            accessToken: ''\n        };\n    }\n    componentDidMount() {\n        this.setState({accessToken: this.props.accessToken});\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.accessToken != prevProps.accessToken)\n            this.setState({accessToken: this.props.accessToken});\n    }\n    pauseSong = async (startTime) => {\n        pause(this.props.accessToken)\n        this.stopTimer(startTime);\n    }\n    playSong = async (songId, startTime, endTime) => {\n        playAt(this.props.deviceId, this.props.accessToken, songId, startTime);\n        clearInterval(this.timer);\n        this.timer = '';\n        this.startTimer(startTime, endTime);\n    }\n    startTimer = async (startTime, endTime) => {\n        this.setState({\n            time: startTime,\n            start: Date.now() - startTime\n        });\n        if (!this.timer) {\n            this.timer = setInterval(() => {\n                this.setState({\n                    time: Math.floor(Date.now() - this.state.start),\n                });\n                if (this.state.time > endTime) {\n                    this.pauseSong(startTime);\n                }\n            }, 1000);\n        }\n    }\n    stopTimer = async (startTime) => {\n        console.log('Stop timer');\n        this.setState({\n            time: startTime,\n        });\n        clearInterval(this.timer);\n        this.timer = '';\n    }\n    handleMouseHover() {\n        // this.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n    }\n    handleMouseLeave() {\n        // setTimeout((() => {\n        //     this.pauseSong(this.props.post.startTime);\n        // }), 300);\n    }\n    render() {\n        let post = this.props.post;\n        console.log(this.state.accessToken);\n        if (this.state.accessToken) {\n            return (\n                <div className=\"post\" onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseLeave}>\n                    <div className=\"postInner\">\n                        <PostInfo name={post.name} text={post.text} />\n                        <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} loggedIn={true} accessToken={this.props.accessToken} />\n                    </div>\n                    <div className='likeButtonContainer'>\n                        <button className='likeButton myButtonBlue'>Like</button>\n                        <p>{post.likeCount}</p>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"post\">\n                    <div className='postInner'>\n                        <PostInfo name={post.name} text={post.text} />\n                        <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} loggedIn={false} />\n                    </div>\n                    <div className='likeButtonContainer'>\n                        <button className='likeButton myButtonBlue'>Like</button>\n                        <p>{post.likeCount}</p>\n                    </div>\n                </div>\n            );\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}