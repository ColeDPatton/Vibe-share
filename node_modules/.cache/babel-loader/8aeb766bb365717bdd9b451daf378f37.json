{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/components/Post.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause } from '../spotifyCalls';\nimport { useHistory, Link } from 'react-router-dom';\n\nclass PostInfo extends Component {\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profilePic\",\n      src: profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"postText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }, text)));\n  }\n\n}\n\nclass PostMusic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.routeToSpotify = () => {\n      const history = useHistory();\n      history.push('https://open.spotify.com/track/' + this.props.songId);\n    };\n\n    this.loadTrack = async () => {\n      console.log('loading ' + this.props.songName);\n      let parsed = queryString.parse(window.location.search);\n      let accessToken = parsed.access_token;\n      const trackData = await getTrack(accessToken, this.props.songId);\n      const albumCover = trackData.album.images[0].url;\n      this.setState({\n        picLoaded: true,\n        albumUrl: albumCover,\n        songName: this.props.songName\n      });\n    };\n\n    this.state = {\n      picLoaded: false,\n      albumUrl: '',\n      songName: ''\n    };\n    this.routeToSpotify = this.routeToSpotify.bind(this);\n  }\n\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n\n    if (this.state.songName != this.props.songName) {\n      this.loadTrack();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postMusic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"albumImg\",\n      onClick: event => window.location.href = 'https://open.spotify.com/track/' + this.props.songId,\n      src: this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songCredit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"songName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, songName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, songArtist)));\n  }\n\n}\n\nexport default class Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pauseSong = async startTime => {\n      pause(this.props.accessToken);\n      this.stopTimer(startTime);\n    };\n\n    this.playSong = async (songId, startTime, endTime) => {\n      playAt(this.props.deviceId, this.props.accessToken, songId, startTime);\n      clearInterval(this.timer);\n      this.timer = '';\n      this.startTimer(startTime, endTime);\n    };\n\n    this.startTimer = async (startTime, endTime) => {\n      this.setState({\n        time: startTime,\n        start: Date.now() - startTime\n      });\n\n      if (!this.timer) {\n        this.timer = setInterval(() => {\n          this.setState({\n            time: Math.floor(Date.now() - this.state.start)\n          });\n\n          if (this.state.time > endTime) {\n            this.pauseSong(startTime);\n          }\n        }, 1000);\n      }\n    };\n\n    this.stopTimer = async startTime => {\n      console.log('Stop timer');\n      this.setState({\n        time: startTime\n      });\n      clearInterval(this.timer);\n      this.timer = '';\n    };\n\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.state = {\n      playing: false,\n      time: 0,\n      start: 0\n    };\n  }\n\n  handleMouseHover() {\n    this.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n  }\n\n  handleMouseLeave() {\n    setTimeout(() => {\n      this.pauseSong(this.props.post.startTime);\n    }, 300);\n  }\n\n  render() {\n    let post = this.props.post;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PostInfo, {\n      name: post.name,\n      text: post.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PostMusic, {\n      songName: post.songName,\n      songArtist: post.songArtist,\n      songId: post.songId,\n      href: \"https://open.spotify.com/track/6ZzYETKetIfNUsZUb23jgG\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/components/Post.js"],"names":["React","Component","profilePicturePlaceholder","queryString","getTrack","playAt","pause","useHistory","Link","PostInfo","render","name","props","text","PostMusic","constructor","routeToSpotify","history","push","songId","loadTrack","console","log","songName","parsed","parse","window","location","search","accessToken","access_token","trackData","albumCover","album","images","url","setState","picLoaded","albumUrl","state","bind","songArtist","event","href","Post","pauseSong","startTime","stopTimer","playSong","endTime","deviceId","clearInterval","timer","startTimer","time","start","Date","now","setInterval","Math","floor","handleMouseHover","handleMouseLeave","playing","post","stopTime","setTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause } from '../spotifyCalls';\nimport { useHistory, Link } from 'react-router-dom';\n\nclass PostInfo extends Component {\n    render() {\n        let name = this.props.name;\n        let text = this.props.text;\n        return (\n            <div className=\"postInfo\">\n                <img className=\"profilePic\" src={profilePicturePlaceholder}></img>\n                <div>\n                    <h3 className=\"username\">{name}</h3>\n                    <p className=\"postText\">{text}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass PostMusic extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            picLoaded: false,\n            albumUrl: '',\n            songName: ''\n        };\n        this.routeToSpotify = this.routeToSpotify.bind(this);\n    }\n    routeToSpotify = () => {\n        const history = useHistory();\n        history.push('https://open.spotify.com/track/' + this.props.songId);\n    }\n    loadTrack = async () => {\n        console.log('loading ' + this.props.songName);\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = parsed.access_token;\n        const trackData = await getTrack(accessToken, this.props.songId);\n        const albumCover = trackData.album.images[0].url;\n        this.setState({\n            picLoaded: true,\n            albumUrl: albumCover,\n            songName: this.props.songName\n        });\n    }\n    render() {\n        let songName = this.props.songName;\n        let songArtist = this.props.songArtist;\n        if (this.state.songName != this.props.songName) {\n            this.loadTrack();\n        }\n        return (\n            <div className=\"postMusic\">\n                {/* <Link to={'https://open.spotify.com/track/' + this.props.songId}>LINK</Link> */}\n                <img className=\"albumImg\"\n                    onClick={event => window.location.href = 'https://open.spotify.com/track/' + this.props.songId}\n                    src={this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder}>\n                </img>\n                <div className=\"songCredit\">\n                    <h4 className=\"songName\">{songName}</h4>\n                    <p className=\"artists\">{songArtist}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class Post extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.state = {\n            playing: false,\n            time: 0,\n            start: 0\n        };\n    }\n    pauseSong = async (startTime) => {\n        pause(this.props.accessToken)\n        this.stopTimer(startTime);\n    }\n    playSong = async (songId, startTime, endTime) => {\n        playAt(this.props.deviceId, this.props.accessToken, songId, startTime);\n        clearInterval(this.timer);\n        this.timer = '';\n        this.startTimer(startTime, endTime);\n    }\n    startTimer = async (startTime, endTime) => {\n        this.setState({\n            time: startTime,\n            start: Date.now() - startTime\n        });\n        if (!this.timer) {\n            this.timer = setInterval(() => {\n                this.setState({\n                    time: Math.floor(Date.now() - this.state.start),\n                });\n                if (this.state.time > endTime) {\n                    this.pauseSong(startTime);\n                }\n            }, 1000);\n        }\n    }\n    stopTimer = async (startTime) => {\n        console.log('Stop timer');\n        this.setState({\n            time: startTime,\n        });\n        clearInterval(this.timer);\n        this.timer = '';\n    }\n    handleMouseHover() {\n        this.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n    }\n    handleMouseLeave() {\n        setTimeout((() => {\n            this.pauseSong(this.props.post.startTime);\n        }), 300);\n    }\n    render() {\n        let post = this.props.post;\n\n        return (\n            <div className=\"post\" onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseLeave}>\n                <PostInfo name={post.name} text={post.text} />\n                <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} href=\"https://open.spotify.com/track/6ZzYETKetIfNUsZUb23jgG\" />\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}