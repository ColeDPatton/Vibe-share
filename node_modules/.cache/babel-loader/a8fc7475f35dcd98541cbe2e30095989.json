{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/App.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from './img/profilePicturePlaceholder.jpg';\nimport './App.css';\nimport queryString from 'query-string';\nimport $ from 'jquery';\nlet fakeServerData = {\n  user: {\n    device_id: '',\n    name: 'Cole'\n  },\n  posts: [{\n    name: 'Bob',\n    text: 'John spelled feeling wrong lol',\n    songId: '0d28khcov6AiegSCpG5TuT',\n    songName: 'Feel Good Inc.',\n    songArtist: 'Gorrilaz'\n  }, {\n    name: 'John',\n    text: 'Felling Good!',\n    songId: '0d28khcov6AiegSCpG5TuT',\n    songName: 'Feel Good Inc.',\n    songArtist: 'Gorrilaz'\n  }, {\n    name: 'Alex',\n    text: 'I\\'m Alex',\n    songId: '0yBylQ4liLmENeK82vnHOb',\n    songName: 'Dont Ask Cuz I Dont Know',\n    songArtist: 'Jon Bellion'\n  }, {\n    name: 'Emily',\n    text: 'HI!',\n    songId: '6ZzYETKetIfNUsZUb23jgG',\n    songName: 'Day 1',\n    songArtist: 'Honne'\n  }]\n}; // function Header() {\n//   return (\n//     <div className=\"header\">\n//       <h1>{this.state.serverData.user && this.state.serverData.user.name}</h1>\n//     </div>\n//   );\n// }\n\nclass PostInfo extends Component {\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profilePic\",\n      src: profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"postText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, text)));\n  }\n\n}\n\nclass PostMusic extends Component {\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n    let songId = this.props.songId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postMusic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"albumImg\",\n      src: profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"songName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, songName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, songArtist));\n  }\n\n}\n\nclass Post extends Component {\n  render() {\n    let post = this.props.post;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PostInfo, {\n      name: post.name,\n      text: post.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PostMusic, {\n      songName: post.songName,\n      songArtist: post.songArtist,\n      songId: post.songId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nasync function playAt(device_id, token) {\n  $.ajax({\n    url: \"https://api.spotify.com/v1/me/player/play?device_id=\" + device_id,\n    type: \"PUT\",\n    data: '{\"uris\": [\"' + 'spotify:track:0d28khcov6AiegSCpG5TuT' + '\"], \"position_ms\": ' + '100000' + '}',\n    beforeSend: function (xhr) {\n      xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n    },\n    success: function (data) {\n      console.log(data);\n    }\n  });\n} // render() {\n//   this.playAt(100000);\n//   return (\n//       <div>\n//           <h3 id=\"username\">Test User</h3>\n//           <p id=\"post\">Wow! something something somethnig</p>\n//       </div>\n//   );\n// }\n\n\nasync function getDevices(token) {\n  return fetch('https://api.spotify.com/v1/me/player/devices', {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(d => d.json());\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handlePlayerStatus = async ({\n      device_id\n    }) => {\n      this.setState({\n        deviceId: device_id\n      });\n    };\n\n    this.play = async accessToken => {\n      const devices = await getDevices(accessToken);\n\n      if (devices.devices.length > 0) {\n        let device_id = devices.devices[0].id;\n        await playAt(device_id, accessToken);\n      }\n    };\n\n    this.initializePlayer = () => {\n      let parsed = queryString.parse(window.location.search);\n      let accessToken = parsed.access_token;\n      const name = 'cole'; // this.updateState({ isInitializing: true });\n\n      this.player = new window.Spotify.Player({\n        getOAuthToken: cb => {\n          cb(accessToken);\n        },\n        name\n      });\n      this.player.addListener('initialization_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('authentication_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('account_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('playback_error', ({\n        message\n      }) => {\n        console.error(message);\n      }); // Playback status updates\n\n      this.player.addListener('player_state_changed', state => {\n        console.log(state);\n      }); // Ready\n\n      this.player.addListener('ready', ({\n        device_id\n      }) => {\n        this.handlePlayerStatus(device_id);\n        console.log('Ready with Device ID', device_id);\n      }); // Not Ready\n\n      this.player.addListener('not_ready', ({\n        device_id\n      }) => {\n        console.log('Device ID has gone offline', device_id);\n      });\n      this.player.connect();\n    };\n\n    this.state = {\n      serverData: {},\n      deviceId: ''\n    };\n  }\n\n  componentDidMount() {\n    window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    this.setState({\n      serverData: fakeServerData\n    });\n  }\n\n  render() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    let allPosts = this.state.serverData.user && this.state.serverData.posts ? this.state.serverData.posts : [];\n    this.play(accessToken);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }, this.state.serverData.user && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, this.state.serverData.user.name), allPosts.map(currentPost => /*#__PURE__*/React.createElement(Post, {\n      post: currentPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 42\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/colepatton/vibin/src/App.js"],"names":["React","Component","profilePicturePlaceholder","queryString","$","fakeServerData","user","device_id","name","posts","text","songId","songName","songArtist","PostInfo","render","props","PostMusic","Post","post","playAt","token","ajax","url","type","data","beforeSend","xhr","setRequestHeader","success","console","log","getDevices","fetch","headers","method","then","d","json","App","constructor","handlePlayerStatus","setState","deviceId","play","accessToken","devices","length","id","initializePlayer","parsed","parse","window","location","search","access_token","player","Spotify","Player","getOAuthToken","cb","addListener","message","error","state","connect","serverData","componentDidMount","onSpotifyWebPlaybackSDKReady","allPosts","map","currentPost"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from './img/profilePicturePlaceholder.jpg';\nimport './App.css';\nimport queryString from 'query-string';\nimport $ from 'jquery';\n\nlet fakeServerData = {\n  user: {\n    device_id: '',\n    name: 'Cole'\n  },\n  posts:\n    [{\n      name: 'Bob',\n      text: 'John spelled feeling wrong lol',\n      songId: '0d28khcov6AiegSCpG5TuT',\n      songName: 'Feel Good Inc.',\n      songArtist: 'Gorrilaz'\n    },\n    {\n      name: 'John',\n      text: 'Felling Good!',\n      songId: '0d28khcov6AiegSCpG5TuT',\n      songName: 'Feel Good Inc.',\n      songArtist: 'Gorrilaz'\n    },\n    {\n      name: 'Alex',\n      text: 'I\\'m Alex',\n      songId: '0yBylQ4liLmENeK82vnHOb',\n      songName: 'Dont Ask Cuz I Dont Know',\n      songArtist: 'Jon Bellion'\n    },\n    {\n      name: 'Emily',\n      text: 'HI!',\n      songId: '6ZzYETKetIfNUsZUb23jgG',\n      songName: 'Day 1',\n      songArtist: 'Honne'\n    }]\n}\n\n// function Header() {\n//   return (\n//     <div className=\"header\">\n//       <h1>{this.state.serverData.user && this.state.serverData.user.name}</h1>\n//     </div>\n//   );\n// }\n\nclass PostInfo extends Component {\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    return (\n      <div className=\"postInfo\">\n        <img className=\"profilePic\" src={profilePicturePlaceholder}></img>\n        <div>\n          <h3 className=\"username\">{name}</h3>\n          <p className=\"postText\">{text}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass PostMusic extends Component {\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n    let songId = this.props.songId;\n    return (\n      <div className=\"postMusic\">\n        <img className=\"albumImg\" src={profilePicturePlaceholder}></img>\n        <h4 className=\"songName\">{songName}</h4>\n        <p className=\"artists\">{songArtist}</p>\n      </div>\n    );\n  }\n}\n\nclass Post extends Component {\n  render() {\n    let post = this.props.post;\n    return (\n      <div className=\"post\">\n        <PostInfo name={post.name} text={post.text} />\n        <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} />\n      </div>\n    );\n  }\n}\nasync function playAt(device_id, token) {\n  $.ajax({\n    url: \"https://api.spotify.com/v1/me/player/play?device_id=\" + device_id,\n    type: \"PUT\",\n    data: '{\"uris\": [\"' + 'spotify:track:0d28khcov6AiegSCpG5TuT' + '\"], \"position_ms\": ' + '100000' + '}',\n    beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer ' + token); },\n    success: function (data) {\n      console.log(data);\n    }\n  });\n}\n// render() {\n//   this.playAt(100000);\n//   return (\n//       <div>\n//           <h3 id=\"username\">Test User</h3>\n//           <p id=\"post\">Wow! something something somethnig</p>\n//       </div>\n//   );\n// }\n\nasync function getDevices(token) {\n  return fetch('https://api.spotify.com/v1/me/player/devices', {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json',\n    },\n    method: 'GET',\n  }).then(d => d.json());\n}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverData: {},\n      deviceId: ''\n    };\n  }\n  handlePlayerStatus = async ({ device_id }) => {\n    this.setState({\n      deviceId: device_id,\n    });\n  };\n\n  play = async (accessToken) => {\n    const devices = await getDevices(accessToken);\n    if (devices.devices.length > 0) {\n      let device_id = devices.devices[0].id;\n      await playAt(device_id, accessToken);\n    }\n  }\n\n  initializePlayer = () => {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    const name = 'cole';\n\n    // this.updateState({ isInitializing: true });\n\n    this.player = new window.Spotify.Player({\n      getOAuthToken: cb => {\n        cb(accessToken);\n      },\n      name\n    });\n\n    this.player.addListener('initialization_error', ({ message }) => { console.error(message); });\n    this.player.addListener('authentication_error', ({ message }) => { console.error(message); });\n    this.player.addListener('account_error', ({ message }) => { console.error(message); });\n    this.player.addListener('playback_error', ({ message }) => { console.error(message); });\n\n    // Playback status updates\n    this.player.addListener('player_state_changed', state => { console.log(state); });\n\n    // Ready\n    this.player.addListener('ready', ({ device_id }) => {\n      this.handlePlayerStatus(device_id);\n      console.log('Ready with Device ID', device_id);\n    });\n\n    // Not Ready\n    this.player.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    this.player.connect();\n  };\n\n  componentDidMount() {\n    window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    this.setState({\n      serverData: fakeServerData\n    });\n  }\n  render() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    let allPosts =\n      (this.state.serverData.user && this.state.serverData.posts) ?\n        this.state.serverData.posts : [];\n    this.play(accessToken)\n\n    return (\n      <div className=\"App\">\n        {\n          this.state.serverData.user &&\n          <div>\n            <h1>{this.state.serverData.user.name}</h1>\n            {allPosts.map(currentPost => <Post post={currentPost} />)}\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}