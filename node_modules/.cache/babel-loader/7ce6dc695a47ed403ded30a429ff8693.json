{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/components/NewPost.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause, search } from '../spotifyCalls';\nimport { withStyles, makeStyles, duration } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nexport default class NewPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateResults = async filterString => {\n      const results = await search(this.props.accessToken, filterString);\n      this.setState({\n        searching: false,\n        searchResults: results.tracks.items\n      });\n    };\n\n    this.switchForm = () => {\n      const nextPage = this.state.formPage === 1 ? 2 : 1;\n      this.setState({\n        formPage: nextPage\n      });\n    };\n\n    this.pauseSong = async accessToken => {\n      await pause(accessToken);\n      this.stopTimer(); // console.log(\"pause\");\n    };\n\n    this.playSong = async (deviceId, accessToken, songId) => {\n      await playAt(deviceId, accessToken, songId, this.state.startTime);\n      this.startTimer();\n      console.log(\"play: \" + this.state.startTime);\n      console.log(\"play: \" + this.state.endTime);\n    };\n\n    this.handleSliderChange = (event, value) => {\n      this.setState({\n        startTime: value[0] * 1000,\n        endTime: value[1] * 1000,\n        time: value[0] * 1000\n      });\n    };\n\n    this.state = {\n      text: '',\n      startTime: 23,\n      endTime: 64,\n      time: 23,\n      start: 0,\n      playing: false,\n      searching: false,\n      filterString: '',\n      searchResults: [],\n      formPage: 1,\n      selectedSong: {}\n    };\n    this.selectSong = this.selectSong.bind(this);\n    this.handleSliderChange = this.handleSliderChange.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n\n  selectSong(song) {\n    console.log(song);\n    this.setState({\n      searching: false,\n      searchResults: [],\n      filterString: \"\",\n      selectedSong: {\n        name: song.name,\n        artist: song.album.artists[0].name,\n        art: song.album.images[0].url,\n        id: song.id,\n        duration: song.duration_ms\n      }\n    });\n  }\n\n  startTimer() {\n    this.setState({\n      playing: true,\n      time: this.state.time,\n      start: Date.now() - this.state.time\n    });\n    this.timer = setInterval(() => this.setState({\n      time: Date.now() - this.state.start\n    }), 1000);\n  }\n\n  stopTimer() {\n    this.setState({\n      playing: false\n    });\n    clearInterval(this.timer);\n  }\n\n  resetTimer() {\n    this.setState({\n      time: 0,\n      playing: false\n    });\n  }\n\n  render() {\n    if (this.state.filterString === \"\" && this.state.searching) {\n      this.setState({\n        searching: false,\n        searchResults: []\n      });\n    } else if (this.state.searching) {\n      this.updateResults(this.state.filterString);\n    }\n\n    if (this.state.formPage === 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newPost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newPostTop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, \"Cole\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cancelX\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"newPostText\",\n        type: \"text\",\n        placeholder: \"Share your feelings with the world...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newPostBottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.switchForm();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, \"Add Song\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newPost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newPostTop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, \"Cole\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cancelX\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }\n      }, \"Search for a song: \"), /*#__PURE__*/React.createElement(Filter, {\n        onTextChange: text => {\n          this.setState({\n            searching: true,\n            filterString: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      })), this.state.searchResults.length > 0 ? this.state.searchResults.map(currentSong => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchResult\",\n        onClick: () => this.selectSong(currentSong),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"searchResultImg\",\n        src: currentSong.album.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"searchResultSong\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 41\n        }\n      }, currentSong.name), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"searchResultArtist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 41\n        }\n      }, currentSong.album.artists[0].name)))) : this.state.selectedSong.name && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"selectedSong\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"searchResultImg\",\n        src: this.state.selectedSong.art,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"searchResultSong\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 37\n        }\n      }, this.state.selectedSong.name), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"searchResultArtist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 37\n        }\n      }, this.state.selectedSong.artist)), /*#__PURE__*/React.createElement(AirbnbSlider, {\n        max: Math.ceil(this.state.selectedSong.duration / 1000),\n        defaultValue: [23, 64],\n        valueLabelDisplay: \"auto\",\n        \"aria-labelledby\": \"range-slider\",\n        valueLabelFormat: (value, index) => {\n          let minutes = Math.floor(value / 60);\n          let seconds = value - minutes * 60;\n          return minutes + (seconds <= 9 ? \":0\" : \":\") + seconds;\n        },\n        onChange: this.handleSliderChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"songTime\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 33\n        }\n      }, this.state.time), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.playSong(this.props.deviceId, this.props.accessToken, this.state.selectedSong.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 33\n        }\n      }, \"Play Clip\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.pauseSong(this.props.accessToken);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }\n      }, \"Pause\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newPostBottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.switchForm();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }\n      }, \"Go back\"), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }, \"Post\")));\n    }\n  }\n\n}\nconst AirbnbSlider = withStyles({\n  root: {\n    color: '#3a8589',\n    height: 3,\n    padding: '13px 0',\n    width: '80%'\n  },\n  thumb: {\n    height: 27,\n    width: 27,\n    backgroundColor: '#fff',\n    border: '1px solid currentColor',\n    marginTop: -12,\n    marginLeft: -13,\n    boxShadow: '#ebebeb 0 2px 2px',\n    '&:focus, &:hover, &$active': {\n      boxShadow: '#ccc 0 2px 3px 1px'\n    },\n    '& .bar': {\n      // display: inline-block !important;\n      height: 9,\n      width: 1,\n      backgroundColor: 'currentColor',\n      marginLeft: 1,\n      marginRight: 1\n    }\n  },\n  active: {},\n  track: {\n    height: 3\n  },\n  rail: {\n    color: '#d8d8d8',\n    opacity: 1,\n    height: 3\n  }\n})(Slider);\n\nclass Filter extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onKeyUp: event => this.props.onTextChange(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/components/NewPost.js"],"names":["React","Component","profilePicturePlaceholder","queryString","getTrack","playAt","pause","search","withStyles","makeStyles","duration","Slider","NewPost","constructor","props","updateResults","filterString","results","accessToken","setState","searching","searchResults","tracks","items","switchForm","nextPage","state","formPage","pauseSong","stopTimer","playSong","deviceId","songId","startTime","startTimer","console","log","endTime","handleSliderChange","event","value","time","text","start","playing","selectedSong","selectSong","bind","resetTimer","song","name","artist","album","artists","art","images","url","id","duration_ms","Date","now","timer","setInterval","clearInterval","render","length","map","currentSong","Math","ceil","index","minutes","floor","seconds","AirbnbSlider","root","color","height","padding","width","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","marginRight","active","track","rail","opacity","Filter","onTextChange","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause, search } from '../spotifyCalls';\nimport { withStyles, makeStyles, duration } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nexport default class NewPost extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: '',\n            startTime: 23,\n            endTime: 64,\n            time: 23,\n            start: 0,\n            playing: false,\n            searching: false,\n            filterString: '',\n            searchResults: [],\n            formPage: 1,\n            selectedSong: {}\n        };\n        this.selectSong = this.selectSong.bind(this);\n        this.handleSliderChange = this.handleSliderChange.bind(this);\n        this.startTimer = this.startTimer.bind(this);\n        this.stopTimer = this.stopTimer.bind(this);\n        this.resetTimer = this.resetTimer.bind(this);\n    }\n\n    updateResults = async (filterString) => {\n        const results = await search(this.props.accessToken, filterString);\n        this.setState({ searching: false, searchResults: results.tracks.items });\n    }\n    switchForm = () => {\n        const nextPage = this.state.formPage === 1 ? 2 : 1;\n        this.setState({\n            formPage: nextPage\n        });\n    }\n    selectSong(song) {\n        console.log(song);\n        this.setState({\n            searching: false,\n            searchResults: [],\n            filterString: \"\",\n            selectedSong: {\n                name: song.name,\n                artist: song.album.artists[0].name,\n                art: song.album.images[0].url,\n                id: song.id,\n                duration: song.duration_ms\n            }\n        });\n    }\n    pauseSong = async (accessToken) => {\n        await pause(accessToken);\n        this.stopTimer();\n        // console.log(\"pause\");\n    }\n    playSong = async (deviceId, accessToken, songId) => {\n        await playAt(deviceId, accessToken, songId, this.state.startTime);\n        this.startTimer();\n        console.log(\"play: \" + this.state.startTime);\n        console.log(\"play: \" + this.state.endTime);\n    }\n    handleSliderChange = (event, value) => {\n        this.setState({\n            startTime: (value[0] * 1000),\n            endTime: (value[1] * 1000),\n            time: (value[0] * 1000)\n        });\n    }\n    startTimer() {\n        this.setState({\n            playing: true,\n            time: this.state.time,\n            start: Date.now() - this.state.time\n        })\n        this.timer = setInterval(() => this.setState({\n            time: Date.now() - this.state.start\n        }), 1000);\n    }\n    stopTimer() {\n        this.setState({ playing: false })\n        clearInterval(this.timer)\n    }\n    resetTimer() {\n        this.setState({ time: 0, playing: false })\n    }\n    render() {\n        if (this.state.filterString === \"\" && this.state.searching) {\n            this.setState({ searching: false, searchResults: [] });\n        } else if (this.state.searching) {\n            this.updateResults(this.state.filterString);\n        }\n\n        if (this.state.formPage === 1) {\n            return (\n                <div className=\"newPost\">\n                    <div className=\"newPostTop\">\n                        <h1 className=\"username\">Cole</h1>\n                        <div className=\"cancelX\">\n                            <div className=\"line1\"></div>\n                            <div className=\"line2\"></div>\n                        </div>\n                    </div>\n                    <textarea className=\"newPostText\" type=\"text\" placeholder=\"Share your feelings with the world...\"></textarea>\n                    <div className=\"newPostBottom\">\n                        <button onClick={() => {\n                            this.switchForm();\n                        }}>Add Song</button>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"newPost\">\n                    <div className=\"newPostTop\">\n                        <h1 className=\"username\">Cole</h1>\n                        <div className=\"cancelX\">\n                            <div className=\"line1\"></div>\n                            <div className=\"line2\"></div>\n                        </div>\n                    </div>\n                    <div className=\"searchBar\">\n                        <h4>Search for a song: </h4>\n                        <Filter onTextChange={text => {\n                            this.setState({ searching: true, filterString: text });\n                        }} />\n                    </div>\n                    {\n                        this.state.searchResults.length > 0 ?\n                            this.state.searchResults.map(currentSong =>\n                                <div className=\"searchResult\" onClick={() => this.selectSong(currentSong)}>\n                                    <img className=\"searchResultImg\" src={currentSong.album.images[0].url} />\n                                    <div>\n                                        <h3 className=\"searchResultSong\">{currentSong.name}</h3>\n                                        <h5 className=\"searchResultArtist\">{currentSong.album.artists[0].name}</h5>\n                                    </div>\n                                </div>\n                            ) :\n                            this.state.selectedSong.name &&\n                            <div className=\"selectedSong\">\n                                <img className=\"searchResultImg\" src={this.state.selectedSong.art} />\n                                <div>\n                                    <h3 className=\"searchResultSong\">{this.state.selectedSong.name}</h3>\n                                    <h5 className=\"searchResultArtist\">{this.state.selectedSong.artist}</h5>\n                                </div>\n                                <AirbnbSlider\n                                    max={Math.ceil(this.state.selectedSong.duration / 1000)}\n                                    defaultValue={[23, 64]}\n                                    valueLabelDisplay=\"auto\"\n                                    aria-labelledby=\"range-slider\"\n                                    valueLabelFormat={(value, index) => {\n                                        let minutes = Math.floor(value / 60);\n                                        let seconds = value - (minutes * 60);\n                                        return minutes + (seconds <= 9 ? \":0\" : \":\") + seconds;\n                                    }}\n                                    onChange={this.handleSliderChange}\n                                />\n                                <h5 className=\"songTime\">{this.state.time}</h5>\n                                <button onClick={() => {\n                                    this.playSong(this.props.deviceId, this.props.accessToken, this.state.selectedSong.id);\n                                }}>Play Clip</button>\n                                <button onClick={() => {\n                                    this.pauseSong(this.props.accessToken);\n                                }}>Pause</button>\n                            </div>\n                    }\n                    <div className=\"newPostBottom\">\n                        <button onClick={() => {\n                            this.switchForm();\n                        }}>Go back</button>\n                        <button>Post</button>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nconst AirbnbSlider = withStyles({\n    root: {\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n        width: '80%'\n    },\n    thumb: {\n        height: 27,\n        width: 27,\n        backgroundColor: '#fff',\n        border: '1px solid currentColor',\n        marginTop: -12,\n        marginLeft: -13,\n        boxShadow: '#ebebeb 0 2px 2px',\n        '&:focus, &:hover, &$active': {\n            boxShadow: '#ccc 0 2px 3px 1px',\n        },\n        '& .bar': {\n            // display: inline-block !important;\n            height: 9,\n            width: 1,\n            backgroundColor: 'currentColor',\n            marginLeft: 1,\n            marginRight: 1,\n        },\n    },\n    active: {},\n    track: {\n        height: 3,\n    },\n    rail: {\n        color: '#d8d8d8',\n        opacity: 1,\n        height: 3,\n    },\n})(Slider);\n\n\nclass Filter extends Component {\n    render() {\n        return (\n            <div className=\"filter\">\n                <input type=\"text\" onKeyUp={event => this.props.onTextChange(event.target.value)} />\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}