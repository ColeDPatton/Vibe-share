{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/components/Post.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause, getUser } from '../spotifyCalls';\nimport { useHistory, Link } from 'react-router-dom';\nimport { loadLikes, likePost, deleteLike } from '../backendCalls';\n\nclass PostInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgUrl: ''\n    };\n    this.redirectToUserProfile = this.redirectToUserProfile.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = '';\n\n    if (parsed.access_token) {\n      accessToken = parsed.access_token;\n      getUser(accessToken, this.props.name).then(user => {\n        let imgUrl = user.images.length > 0 ? user.images[0].url : '';\n        this.setState({\n          imgUrl: imgUrl\n        });\n      });\n    }\n  }\n\n  redirectToUserProfile() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = '';\n    if (parsed.access_token) accessToken = parsed.access_token;\n    window.location.href = window.location.origin + '/user/?username=' + this.props.name + (accessToken ? '&access_token=' + accessToken : '');\n  }\n\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profilePic\",\n      src: this.state.imgUrl ? this.state.imgUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"username\",\n      onClick: this.redirectToUserProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"postText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, text)));\n  }\n\n}\n\nclass PostMusic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.routeToSpotify = () => {\n      const history = useHistory();\n      history.push('https://open.spotify.com/track/' + this.props.songId);\n    };\n\n    this.loadTrack = async () => {\n      const trackData = await getTrack(this.props.accessToken, this.props.songId);\n      const albumCover = trackData.album.images[0].url;\n      this.setState({\n        picLoaded: true,\n        albumUrl: albumCover,\n        songName: this.props.songName\n      });\n    };\n\n    this.state = {\n      picLoaded: false,\n      albumUrl: '',\n      songName: ''\n    };\n    this.routeToSpotify = this.routeToSpotify.bind(this);\n  }\n\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n\n    if (this.props.loggedIn && this.state.songName != this.props.songName || this.props.loggedIn && !this.state.picLoaded) {\n      this.loadTrack();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postMusic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"albumImg\",\n      onClick: event => window.location.href = 'https://open.spotify.com/track/' + this.props.songId,\n      src: this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songCredit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"songName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, songName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, songArtist)));\n  }\n\n}\n\nexport default class Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pauseSong = async startTime => {\n      pause(this.props.accessToken);\n      this.stopTimer(startTime);\n    };\n\n    this.playSong = async (songId, startTime, endTime) => {\n      playAt(this.props.deviceId, this.props.accessToken, songId, startTime);\n      clearInterval(this.timer);\n      this.timer = '';\n      this.startTimer(startTime, endTime);\n    };\n\n    this.startTimer = async (startTime, endTime) => {\n      this.setState({\n        time: startTime,\n        start: Date.now() - startTime\n      });\n\n      if (!this.timer) {\n        this.timer = setInterval(() => {\n          this.setState({\n            time: Math.floor(Date.now() - this.state.start)\n          });\n\n          if (this.state.time > endTime) {\n            this.pauseSong(startTime);\n          }\n        }, 1000);\n      }\n    };\n\n    this.stopTimer = async startTime => {\n      this.setState({\n        time: startTime\n      });\n      clearInterval(this.timer);\n      this.timer = '';\n    };\n\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.clickedLikePost = this.clickedLikePost.bind(this);\n    this.state = {\n      playing: false,\n      time: 0,\n      start: 0,\n      accessToken: '',\n      likeCount: '',\n      liked: false,\n      muted: false\n    };\n  }\n\n  componentDidMount() {\n    let liked = false;\n    loadLikes().then(likes => {\n      likes.forEach(like => {\n        if (like.postId === this.props.post._id && like.username === this.props.username) {\n          liked = true;\n        }\n      });\n    }).then(() => {\n      this.setState({\n        accessToken: this.props.accessToken,\n        likeCount: this.props.post.likeCount,\n        liked: liked,\n        muted: this.props.muted\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.accessToken != prevProps.accessToken) this.setState({\n      accessToken: this.props.accessToken\n    });\n    if (this.props.muted != prevProps.muted) this.setState({\n      muted: this.props.muted\n    });\n  }\n\n  handleMouseHover() {\n    this.setState({\n      song: new Audio('https://p.scdn.co/mp3-preview/5d1d62b38720459927a1ceb2f59d4e5c7b172170?cid=67e67591896d470c87c4cd148661ce8d')\n    }).then(() => {\n      this.state.song.play();\n    }); // song.pause();\n    // if (!this.state.muted)\n    //     this.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n  }\n\n  handleMouseLeave() {\n    pause(this.props.accessToken); // if (!this.state.muted)\n    //     setTimeout((() => {\n    //         this.pauseSong(this.props.post.startTime);\n    //     }), 100);\n  }\n\n  clickedLikePost() {// https://p.scdn.co/mp3-preview/5d1d62b38720459927a1ceb2f59d4e5c7b172170?cid=67e67591896d470c87c4cd148661ce8d\n    // if (!this.state.liked) {\n    //     likePost(this.props.username, this.props.post._id);\n    //     this.setState({ likeCount: (this.state.likeCount + 1), liked: true });\n    // } else {\n    //     deleteLike(this.props.username, this.props.post._id);\n    //     this.setState({ likeCount: (this.state.likeCount - 1), liked: false });\n    // }\n  }\n\n  render() {\n    let post = this.props.post;\n\n    if (this.state.accessToken) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post\",\n        onMouseEnter: this.handleMouseHover,\n        onMouseLeave: this.handleMouseLeave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"postInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PostInfo, {\n        access_tokenn: this.state.accessToken,\n        name: post.name,\n        text: post.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(PostMusic, {\n        songName: post.songName,\n        songArtist: post.songArtist,\n        songId: post.songId,\n        loggedIn: true,\n        accessToken: this.props.accessToken,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"likeButtonContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"likeButton myButtonBlue\",\n        onClick: this.clickedLikePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }\n      }, this.state.liked ? 'Liked' : 'Like'), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }\n      }, this.state.likeCount)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"postInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PostInfo, {\n        name: post.name,\n        text: post.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(PostMusic, {\n        songName: post.songName,\n        songArtist: post.songArtist,\n        songId: post.songId,\n        loggedIn: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"likeButtonContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"likeButton myButtonBlue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }\n      }, this.state.likeCount)));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/components/Post.js"],"names":["React","Component","profilePicturePlaceholder","queryString","getTrack","playAt","pause","getUser","useHistory","Link","loadLikes","likePost","deleteLike","PostInfo","constructor","props","state","imgUrl","redirectToUserProfile","bind","componentDidMount","parsed","parse","window","location","search","accessToken","access_token","name","then","user","images","length","url","setState","href","origin","render","text","PostMusic","routeToSpotify","history","push","songId","loadTrack","trackData","albumCover","album","picLoaded","albumUrl","songName","songArtist","loggedIn","event","Post","pauseSong","startTime","stopTimer","playSong","endTime","deviceId","clearInterval","timer","startTimer","time","start","Date","now","setInterval","Math","floor","handleMouseHover","handleMouseLeave","clickedLikePost","playing","likeCount","liked","muted","likes","forEach","like","postId","post","_id","username","componentDidUpdate","prevProps","song","Audio","play"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause, getUser } from '../spotifyCalls';\nimport { useHistory, Link } from 'react-router-dom';\nimport { loadLikes, likePost, deleteLike } from '../backendCalls';\n\nclass PostInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imgUrl: ''\n        };\n        this.redirectToUserProfile = this.redirectToUserProfile.bind(this);\n    }\n    componentDidMount() {\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = ''\n        if (parsed.access_token) {\n            accessToken = parsed.access_token;\n            getUser(accessToken, this.props.name).then(user => {\n                let imgUrl = user.images.length > 0 ?\n                    user.images[0].url : '';\n                this.setState({\n                    imgUrl: imgUrl\n                })\n            })\n        }\n    }\n    redirectToUserProfile() {\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = ''\n        if (parsed.access_token)\n            accessToken = parsed.access_token;\n\n        window.location.href = window.location.origin + '/user/?username=' + this.props.name + (accessToken ? ('&access_token=' + accessToken) : '');\n    }\n    render() {\n        let name = this.props.name;\n        let text = this.props.text;\n        return (\n            <div className=\"postInfo\">\n                <img className=\"profilePic\" src={this.state.imgUrl ? this.state.imgUrl : profilePicturePlaceholder}></img>\n                <div>\n                    <h3 className=\"username\" onClick={this.redirectToUserProfile}>{name}</h3>\n                    <p className=\"postText\">{text}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass PostMusic extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            picLoaded: false,\n            albumUrl: '',\n            songName: ''\n        };\n        this.routeToSpotify = this.routeToSpotify.bind(this);\n    }\n    routeToSpotify = () => {\n        const history = useHistory();\n        history.push('https://open.spotify.com/track/' + this.props.songId);\n    }\n    loadTrack = async () => {\n        const trackData = await getTrack(this.props.accessToken, this.props.songId);\n        const albumCover = trackData.album.images[0].url;\n        this.setState({\n            picLoaded: true,\n            albumUrl: albumCover,\n            songName: this.props.songName\n        });\n    }\n    render() {\n        let songName = this.props.songName;\n        let songArtist = this.props.songArtist;\n        if ((this.props.loggedIn && (this.state.songName != this.props.songName)) || (this.props.loggedIn && !this.state.picLoaded)) {\n            this.loadTrack();\n        }\n        return (\n            <div className=\"postMusic\">\n                <img className=\"albumImg\"\n                    onClick={event => window.location.href = 'https://open.spotify.com/track/' + this.props.songId}\n                    src={this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder}>\n                </img>\n                <div className=\"songCredit\">\n                    <h4 className=\"songName\">{songName}</h4>\n                    <p className=\"artists\">{songArtist}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class Post extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.clickedLikePost = this.clickedLikePost.bind(this);\n        this.state = {\n            playing: false,\n            time: 0,\n            start: 0,\n            accessToken: '',\n            likeCount: '',\n            liked: false,\n            muted: false\n        };\n    }\n    componentDidMount() {\n        let liked = false;\n        loadLikes().then(likes => {\n            likes.forEach(like => {\n                if (like.postId === this.props.post._id && like.username === this.props.username) {\n                    liked = true;\n                }\n            });\n        }).then(() => {\n            this.setState({\n                accessToken: this.props.accessToken,\n                likeCount: this.props.post.likeCount,\n                liked: liked,\n                muted: this.props.muted\n            });\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.accessToken != prevProps.accessToken)\n            this.setState({ accessToken: this.props.accessToken });\n        if (this.props.muted != prevProps.muted)\n            this.setState({ muted: this.props.muted });\n    }\n    pauseSong = async (startTime) => {\n        pause(this.props.accessToken)\n        this.stopTimer(startTime);\n    }\n    playSong = async (songId, startTime, endTime) => {\n        playAt(this.props.deviceId, this.props.accessToken, songId, startTime);\n        clearInterval(this.timer);\n        this.timer = '';\n        this.startTimer(startTime, endTime);\n    }\n    startTimer = async (startTime, endTime) => {\n        this.setState({\n            time: startTime,\n            start: Date.now() - startTime\n        });\n        if (!this.timer) {\n            this.timer = setInterval(() => {\n                this.setState({\n                    time: Math.floor(Date.now() - this.state.start),\n                });\n                if (this.state.time > endTime) {\n                    this.pauseSong(startTime);\n                }\n            }, 1000);\n        }\n    }\n    stopTimer = async (startTime) => {\n        this.setState({\n            time: startTime,\n        });\n        clearInterval(this.timer);\n        this.timer = '';\n    }\n    handleMouseHover() {\n        this.setState({\n            song: new Audio('https://p.scdn.co/mp3-preview/5d1d62b38720459927a1ceb2f59d4e5c7b172170?cid=67e67591896d470c87c4cd148661ce8d')\n        }).then(() => {\n            this.state.song.play();\n        })\n        // song.pause();\n        // if (!this.state.muted)\n        //     this.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n    }\n    handleMouseLeave() {\n        pause(this.props.accessToken)\n\n        // if (!this.state.muted)\n        //     setTimeout((() => {\n        //         this.pauseSong(this.props.post.startTime);\n        //     }), 100);\n    }\n    clickedLikePost() {\n        // https://p.scdn.co/mp3-preview/5d1d62b38720459927a1ceb2f59d4e5c7b172170?cid=67e67591896d470c87c4cd148661ce8d\n        // if (!this.state.liked) {\n        //     likePost(this.props.username, this.props.post._id);\n        //     this.setState({ likeCount: (this.state.likeCount + 1), liked: true });\n        // } else {\n        //     deleteLike(this.props.username, this.props.post._id);\n        //     this.setState({ likeCount: (this.state.likeCount - 1), liked: false });\n        // }\n    }\n    render() {\n        let post = this.props.post;\n\n        if (this.state.accessToken) {\n            return (\n                <div className=\"post\" onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseLeave}>\n                    <div className=\"postInner\">\n                        <PostInfo access_tokenn={this.state.accessToken} name={post.name} text={post.text} />\n                        <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} loggedIn={true} accessToken={this.props.accessToken} />\n                    </div>\n                    {/* <audio src='https://p.scdn.co/mp3-preview/5d1d62b38720459927a1ceb2f59d4e5c7b172170?cid=67e67591896d470c87c4cd148661ce8d'></audio> */}\n                    <div className='likeButtonContainer'>\n                        <button className='likeButton myButtonBlue' onClick={this.clickedLikePost}>\n                            {this.state.liked ? 'Liked' : 'Like'}\n                        </button>\n                        <p>{this.state.likeCount}</p>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"post\">\n                    <div className='postInner'>\n                        <PostInfo name={post.name} text={post.text} />\n                        <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} loggedIn={false} />\n                    </div>\n                    <div className='likeButtonContainer'>\n                        <button className='likeButton myButtonBlue'>Like</button>\n                        <p>{this.state.likeCount}</p>\n                    </div>\n                </div>\n            );\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}