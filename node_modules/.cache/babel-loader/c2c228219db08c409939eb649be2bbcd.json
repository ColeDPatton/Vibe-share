{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/pages/UserProfile.js\";\nimport React, { Component } from 'react';\nimport queryString from 'query-string';\nimport '../style/App.css';\nimport { loadPosts, loadLikes, loadUserFollowing, followUser, unFollowUser } from '../backendCalls';\nimport { getLoggedInUser, getUser } from '../spotifyCalls';\nimport Post from '../components/Post';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\n\nclass UserProfile extends Component {\n  constructor() {\n    super();\n\n    this.handlePlayerStatus = async device_id => {\n      this.setState({\n        deviceId: device_id\n      });\n    };\n\n    this.initializePlayer = () => {\n      const name = this.state.serverData.user.name + ' vibes';\n      this.player = new window.Spotify.Player({\n        getOAuthToken: cb => {\n          cb(this.state.accessToken);\n        },\n        name\n      });\n      this.player.addListener('initialization_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('authentication_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('account_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('playback_error', ({\n        message\n      }) => {\n        console.error(message);\n      }); // Playback status updates\n\n      this.player.addListener('player_state_changed', state => {\n        console.log(state);\n      }); // Ready\n\n      this.player.addListener('ready', ({\n        device_id\n      }) => {\n        this.handlePlayerStatus(device_id);\n        console.log('Ready with Device ID', device_id);\n      }); // Not Ready\n\n      this.player.addListener('not_ready', ({\n        device_id\n      }) => {\n        console.log('Device ID has gone offline', device_id);\n      });\n      this.player.connect();\n    };\n\n    this.state = {\n      deviceId: '',\n      accessToken: '',\n      profilePageUsername: '',\n      serverData: {},\n      muted: true,\n      followers: [],\n      following: [],\n      loggedInUserFollowingProfileUser: false\n    };\n    this.clickFollowButton = this.clickFollowButton.bind(this);\n    this.followUser = this.followUser.bind(this);\n    this.unfollowUser = this.unfollowUser.bind(this);\n    this.redirectToHomePage = this.redirectToHomePage.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = queryString.parse(window.location.search);\n    let profilePageUsernameFromUrl = parsed.username;\n    let postsForProfile = [];\n\n    if (parsed.access_token) {\n      let accessToken = parsed.access_token;\n      getUser(accessToken, profilePageUsernameFromUrl).then(user => {\n        let imgUrl = user.images && user.images.length > 0 ? user.images[0].url : '';\n        this.setState({\n          imgUrl: imgUrl\n        });\n      });\n      loadUserFollowing(profilePageUsernameFromUrl).then(user => {\n        this.setState({\n          followers: user.followers,\n          following: user.following\n        });\n      });\n      getLoggedInUser(accessToken).then(user => {\n        loadPosts().then(posts => {\n          loadLikes().then(likes => {\n            posts.forEach(post => {\n              let likedByProfilePageUser = false;\n              let likeCount = 0;\n\n              if (post.name === profilePageUsernameFromUrl) {\n                likes.forEach(like => {\n                  if (post._id === like.postId) {\n                    likeCount++;\n                  }\n                });\n                post = { ...post,\n                  likedByProfilePageUser: likedByProfilePageUser,\n                  likeCount: likeCount\n                };\n                postsForProfile.push(post);\n              } else {\n                likes.forEach(like => {\n                  if (post._id === like.postId) {\n                    likeCount++;\n\n                    if (like.username === profilePageUsernameFromUrl) {\n                      post = { ...post,\n                        likedByProfilePageUser: true,\n                        likeCount: likeCount\n                      };\n                      postsForProfile.push(post);\n                    }\n                  }\n                });\n              }\n            });\n            let loggedInUserFollowingProfileUser = this.state.followers.includes(user.display_name);\n            this.setState({\n              accessToken: accessToken,\n              serverData: {\n                posts: postsForProfile,\n                user: {\n                  name: user.display_name\n                }\n              },\n              profilePageUsername: profilePageUsernameFromUrl,\n              loggedInUserFollowingProfileUser: loggedInUserFollowingProfileUser\n            });\n          }).then(window.onSpotifyWebPlaybackSDKReady = this.initializePlayer);\n        });\n      });\n    } else {\n      loadPosts().then(posts => {\n        loadLikes().then(likes => {\n          posts.forEach(post => {\n            let likeCount = 0;\n\n            if (post.name === profilePageUsernameFromUrl) {\n              likes.forEach(like => {\n                if (post._id === like.postId) {\n                  likeCount++;\n                }\n              });\n              post = { ...post,\n                likedByProfilePageUser: false,\n                likeCount: likeCount\n              };\n              postsForProfile.push(post);\n            } else {\n              likes.forEach(like => {\n                if (post._id === like.postId) {\n                  likeCount++;\n\n                  if (like.username === profilePageUsernameFromUrl) {\n                    post = { ...post,\n                      likedByProfilePageUser: true,\n                      likeCount: likeCount\n                    };\n                    postsForProfile.push(post);\n                  }\n                }\n              });\n            }\n          });\n          this.setState({\n            serverData: {\n              posts: postsForProfile\n            },\n            profilePageUsername: profilePageUsernameFromUrl\n          });\n        });\n      });\n    }\n  }\n\n  unfollowUser() {\n    unFollowUser(this.state.serverData.user.name, this.state.profilePageUsername);\n    const updatedFollowerList = this.state.followers;\n    const deleteIndex = updatedFollowerList.findIndex(x => x === this.state.serverData.user.name);\n    updatedFollowerList.splice(deleteIndex, 1);\n    this.setState({\n      followers: updatedFollowerList,\n      loggedInUserFollowingProfileUser: false\n    });\n  }\n\n  followUser() {\n    followUser(this.state.serverData.user.name, this.state.profilePageUsername);\n    const updatedFollowerList = this.state.followers;\n    updatedFollowerList.push(this.state.serverData.user.name);\n    this.setState({\n      followers: updatedFollowerList,\n      loggedInUserFollowingProfileUser: true\n    });\n  }\n\n  clickFollowButton() {\n    this.state.followers.includes(this.state.serverData.user.name) ? this.unfollowUser() : this.followUser();\n  }\n\n  redirectToHomePage() {\n    window.location.href = window.location.origin + (this.state.accessToken ? '?access_token=' + this.state.accessToken : '');\n  }\n\n  render() {\n    let allPosts = this.state.serverData.posts ? this.state.serverData.posts : [];\n    let followers = this.state.followers ? this.state.followers : [];\n    let following = this.state.following ? this.state.following : [];\n    let name = this.state.serverData.user ? this.state.serverData.user.name : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        'margin': '.5em'\n      },\n      onClick: this.redirectToHomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, \"Vibe Share\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttonContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"myButtonWhite\",\n      onClick: this.handleLogInButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, this.state.accessToken ? 'Log Out' : 'Log In'))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profilePageContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profilePageUser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profilePageImg\",\n      src: this.state.imgUrl ? this.state.imgUrl : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"profilePageUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, this.state.profilePageUsername), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"followContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, this.state.serverData.user && this.state.serverData.user.name !== this.state.profilePageUsername && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"myButtonBlue\",\n      onClick: this.clickFollowButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 33\n      }\n    }, this.state.loggedInUserFollowingProfileUser ? 'Unfollow' : 'Follow'), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    }, \"Followers: \", followers.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scrollFollowers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }\n    }, followers.map(follower => {\n      follower !== \"\" && /*#__PURE__*/React.createElement(FollowerLink, {\n        name: follower,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 37\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    }, \"Following: \", following.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scrollFollowing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }\n    }, following.map(following => {\n      following !== \"\" && /*#__PURE__*/React.createElement(FollowerLink, {\n        name: following,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 37\n        }\n      });\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profilePagePosts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, allPosts.map(currentPost => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 29\n      }\n    }, currentPost.likedByProfilePageUser && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"userProfileLikes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 72\n      }\n    }, this.state.profilePageUsername, \" liked:\"), /*#__PURE__*/React.createElement(Post, {\n      post: currentPost,\n      deviceId: this.state.deviceId,\n      accessToken: this.state.accessToken,\n      muted: this.state.muted,\n      username: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nexport default UserProfile;\n\nclass FollowerLink extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgUrl: '',\n      name: ''\n    };\n    this.redirectToUserProfile = this.redirectToUserProfile.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = '';\n\n    if (parsed.access_token) {\n      accessToken = parsed.access_token;\n      getUser(accessToken, this.props.name).then(user => {\n        let imgUrl = user.images ? user.images[0].url : '';\n        this.setState({\n          imgUrl: imgUrl\n        });\n      });\n    }\n  }\n\n  redirectToUserProfile() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = '';\n    if (parsed.access_token) accessToken = parsed.access_token;\n    window.location.href = window.location.origin + '/user/?username=' + this.props.name + (accessToken ? '&access_token=' + accessToken : '');\n  }\n\n  render() {\n    let name = this.props.name;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"followerLink\",\n      onClick: this.redirectToUserProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imgUrl ? this.state.imgUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    }, name));\n  }\n\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/pages/UserProfile.js"],"names":["React","Component","queryString","loadPosts","loadLikes","loadUserFollowing","followUser","unFollowUser","getLoggedInUser","getUser","Post","profilePicturePlaceholder","UserProfile","constructor","handlePlayerStatus","device_id","setState","deviceId","initializePlayer","name","state","serverData","user","player","window","Spotify","Player","getOAuthToken","cb","accessToken","addListener","message","console","error","log","connect","profilePageUsername","muted","followers","following","loggedInUserFollowingProfileUser","clickFollowButton","bind","unfollowUser","redirectToHomePage","componentDidMount","parsed","parse","location","search","profilePageUsernameFromUrl","username","postsForProfile","access_token","then","imgUrl","images","length","url","posts","likes","forEach","post","likedByProfilePageUser","likeCount","like","_id","postId","push","includes","display_name","onSpotifyWebPlaybackSDKReady","updatedFollowerList","deleteIndex","findIndex","x","splice","href","origin","render","allPosts","handleLogInButton","map","follower","currentPost","FollowerLink","props","redirectToUserProfile"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport '../style/App.css';\nimport { loadPosts, loadLikes, loadUserFollowing, followUser, unFollowUser } from '../backendCalls'\nimport { getLoggedInUser, getUser } from '../spotifyCalls';\nimport Post from '../components/Post';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\n\nclass UserProfile extends Component {\n    constructor() {\n        super();\n        this.state = {\n            deviceId: '',\n            accessToken: '',\n            profilePageUsername: '',\n            serverData: {},\n            muted: true,\n            followers: [],\n            following: [],\n            loggedInUserFollowingProfileUser: false\n        };\n        this.clickFollowButton = this.clickFollowButton.bind(this);\n        this.followUser = this.followUser.bind(this);\n        this.unfollowUser = this.unfollowUser.bind(this);\n        this.redirectToHomePage = this.redirectToHomePage.bind(this);\n    }\n    handlePlayerStatus = async (device_id) => {\n        this.setState({\n            deviceId: device_id,\n        });\n    };\n    initializePlayer = () => {\n        const name = this.state.serverData.user.name + ' vibes';\n\n        this.player = new window.Spotify.Player({\n            getOAuthToken: cb => {\n                cb(this.state.accessToken);\n            },\n            name\n        });\n\n        this.player.addListener('initialization_error', ({ message }) => { console.error(message); });\n        this.player.addListener('authentication_error', ({ message }) => { console.error(message); });\n        this.player.addListener('account_error', ({ message }) => { console.error(message); });\n        this.player.addListener('playback_error', ({ message }) => { console.error(message); });\n\n        // Playback status updates\n        this.player.addListener('player_state_changed', state => { console.log(state); });\n\n        // Ready\n        this.player.addListener('ready', ({ device_id }) => {\n            this.handlePlayerStatus(device_id);\n            console.log('Ready with Device ID', device_id);\n        });\n\n        // Not Ready\n        this.player.addListener('not_ready', ({ device_id }) => {\n            console.log('Device ID has gone offline', device_id);\n        });\n\n        this.player.connect();\n    };\n    componentDidMount() {\n        let parsed = queryString.parse(window.location.search);\n        let profilePageUsernameFromUrl = parsed.username;\n        let postsForProfile = [];\n        if (parsed.access_token) {\n            let accessToken = parsed.access_token;\n            getUser(accessToken, profilePageUsernameFromUrl).then(user => {\n                let imgUrl = user.images && user.images.length > 0 ?\n                    user.images[0].url : '';\n                this.setState({\n                    imgUrl: imgUrl\n                });\n            });\n            loadUserFollowing(profilePageUsernameFromUrl).then(user => {\n                this.setState({\n                    followers: user.followers,\n                    following: user.following,\n                })\n            })\n\n            getLoggedInUser(accessToken).then(user => {\n                loadPosts().then(posts => {\n                    loadLikes().then(likes => {\n                        posts.forEach(post => {\n                            let likedByProfilePageUser = false;\n                            let likeCount = 0\n                            if (post.name === profilePageUsernameFromUrl) {\n                                likes.forEach(like => {\n                                    if (post._id === like.postId) {\n                                        likeCount++;\n                                    }\n                                });\n                                post = {\n                                    ...post,\n                                    likedByProfilePageUser: likedByProfilePageUser,\n                                    likeCount: likeCount\n                                }\n                                postsForProfile.push(post);\n                            } else {\n                                likes.forEach(like => {\n                                    if (post._id === like.postId) {\n                                        likeCount++;\n                                        if (like.username === profilePageUsernameFromUrl) {\n                                            post = {\n                                                ...post,\n                                                likedByProfilePageUser: true,\n                                                likeCount: likeCount\n                                            }\n                                            postsForProfile.push(post);\n                                        }\n                                    }\n                                });\n                            }\n                        });\n                        let loggedInUserFollowingProfileUser = this.state.followers.includes(user.display_name);\n                        this.setState({\n                            accessToken: accessToken,\n                            serverData: {\n                                posts: postsForProfile,\n                                user: {\n                                    name: user.display_name\n                                }\n                            },\n                            profilePageUsername: profilePageUsernameFromUrl,\n                            loggedInUserFollowingProfileUser: loggedInUserFollowingProfileUser\n                        });\n                    }).then(window.onSpotifyWebPlaybackSDKReady = this.initializePlayer);\n                });\n            });\n        } else {\n            loadPosts().then(posts => {\n                loadLikes().then(likes => {\n                    posts.forEach(post => {\n                        let likeCount = 0\n                        if (post.name === profilePageUsernameFromUrl) {\n                            likes.forEach(like => {\n                                if (post._id === like.postId) {\n                                    likeCount++;\n                                }\n                            });\n                            post = {\n                                ...post,\n                                likedByProfilePageUser: false,\n                                likeCount: likeCount\n                            }\n                            postsForProfile.push(post);\n                        } else {\n                            likes.forEach(like => {\n                                if (post._id === like.postId) {\n                                    likeCount++;\n                                    if (like.username === profilePageUsernameFromUrl) {\n                                        post = {\n                                            ...post,\n                                            likedByProfilePageUser: true,\n                                            likeCount: likeCount\n                                        }\n                                        postsForProfile.push(post);\n                                    }\n                                }\n                            });\n                        }\n                    });\n                    this.setState({\n                        serverData: {\n                            posts: postsForProfile,\n                        },\n                        profilePageUsername: profilePageUsernameFromUrl\n                    });\n                });\n            });\n        }\n    }\n    unfollowUser() {\n        unFollowUser(this.state.serverData.user.name, this.state.profilePageUsername);\n        const updatedFollowerList = this.state.followers;\n        const deleteIndex = updatedFollowerList.findIndex(x => x === this.state.serverData.user.name);\n        updatedFollowerList.splice(deleteIndex, 1);\n        this.setState({\n            followers: updatedFollowerList,\n            loggedInUserFollowingProfileUser: false\n        });\n    }\n    followUser() {\n        followUser(this.state.serverData.user.name, this.state.profilePageUsername);\n        const updatedFollowerList = this.state.followers;\n        updatedFollowerList.push(this.state.serverData.user.name);\n        this.setState({\n            followers: updatedFollowerList,\n            loggedInUserFollowingProfileUser: true\n        });\n    }\n    clickFollowButton() {\n        this.state.followers.includes(this.state.serverData.user.name) ?\n            this.unfollowUser() : this.followUser();\n    }\n    redirectToHomePage() {\n        window.location.href = window.location.origin + (this.state.accessToken ? ('?access_token=' + this.state.accessToken) : '');\n    }\n    render() {\n        let allPosts = this.state.serverData.posts ? this.state.serverData.posts : [];\n        let followers = this.state.followers ? this.state.followers : [];\n        let following = this.state.following ? this.state.following : [];\n        let name = this.state.serverData.user ? this.state.serverData.user.name : '';\n        return (\n            <div className='App'>\n                <div className='header'>\n                    <h1 style={{ 'margin': '.5em' }} onClick={this.redirectToHomePage}>Vibe Share</h1>\n                    <div className='buttonContainer'>\n                        <button className='myButtonWhite' onClick={this.handleLogInButton}>{this.state.accessToken ? 'Log Out' : 'Log In'}</button>\n                    </div>\n                </div>\n                <div className='profilePageContent'>\n                    <div className='profilePageUser'>\n                        <img className='profilePageImg' src={this.state.imgUrl ? this.state.imgUrl : ''} />\n                        <h2 className='profilePageUsername'>{this.state.profilePageUsername}</h2>\n                        <div className='followContainer'>\n                            {this.state.serverData.user && (this.state.serverData.user.name !== this.state.profilePageUsername) &&\n                                <button className='myButtonBlue' onClick={this.clickFollowButton}>{this.state.loggedInUserFollowingProfileUser ? 'Unfollow' : 'Follow'}</button>\n                            }\n                            <h3>Followers: {followers.length}</h3>\n                            <div className='scrollFollowers'>\n                                {followers.map(follower => {\n                                    follower !== \"\" &&\n                                    <FollowerLink name={follower} ></FollowerLink>\n                                }\n                                )}\n                            </div>\n                            <h3>Following: {following.length}</h3>\n                            <div className='scrollFollowing'>\n                                {following.map(following => {\n                                    following !== \"\" &&\n                                    <FollowerLink name={following} ></FollowerLink>\n                                }\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='profilePagePosts'>\n                        {allPosts.map(currentPost =>\n                            <div className='postContainer'>\n                                {currentPost.likedByProfilePageUser && <p className=\"userProfileLikes\">{this.state.profilePageUsername} liked:</p>}\n                                <Post\n                                    post={currentPost}\n                                    deviceId={this.state.deviceId}\n                                    accessToken={this.state.accessToken}\n                                    muted={this.state.muted}\n                                    username={name}\n                                />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default UserProfile;\n\nclass FollowerLink extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imgUrl: '',\n            name: '',\n        };\n        this.redirectToUserProfile = this.redirectToUserProfile.bind(this);\n    }\n    componentDidMount() {\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = ''\n        if (parsed.access_token) {\n            accessToken = parsed.access_token;\n            getUser(accessToken, this.props.name).then(user => {\n                let imgUrl = user.images ?\n                    user.images[0].url : '';\n                this.setState({\n                    imgUrl: imgUrl,\n                });\n            });\n        }\n    }\n    redirectToUserProfile() {\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = ''\n        if (parsed.access_token)\n            accessToken = parsed.access_token;\n\n        window.location.href = window.location.origin + '/user/?username=' + this.props.name + (accessToken ? ('&access_token=' + accessToken) : '');\n    }\n    render() {\n        let name = this.props.name;\n        return (\n            <div className=\"followerLink\" onClick={this.redirectToUserProfile}>\n                <img src={this.state.imgUrl ? this.state.imgUrl : profilePicturePlaceholder}></img>\n                <h3>{name}</h3>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}