{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/components/Post.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause } from '../spotifyCalls';\n\nclass PostInfo extends Component {\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profilePic\",\n      src: profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"postText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }, text)));\n  }\n\n}\n\nclass PostMusic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadTrack = async () => {\n      let parsed = queryString.parse(window.location.search);\n      let accessToken = parsed.access_token;\n      const trackData = await getTrack(accessToken, this.props.songId);\n      const albumCover = trackData.album.images[0].url;\n      this.setState({\n        picLoaded: true,\n        albumUrl: albumCover\n      });\n    };\n\n    this.state = {\n      picLoaded: false,\n      albumUrl: ''\n    };\n  }\n\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n\n    if (!this.state.picLoaded) {\n      this.loadTrack();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postMusic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"albumImg\",\n      src: this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songCredit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"songName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, songName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, songArtist)));\n  }\n\n}\n\nexport default class Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pauseSong = async accessToken => {\n      if (!this.state.wantToPause) {\n        this.setState({\n          wantToPause: true\n        });\n      }\n\n      if (this.state.playing) {\n        await pause(accessToken);\n        this.setState({\n          playing: false,\n          wantToPause: false\n        });\n      }\n    };\n\n    this.playSong = async (deviceId, accessToken, songId, startTime) => {\n      await playAt(deviceId, accessToken, songId, startTime);\n      this.setState({\n        playing: true\n      });\n    };\n\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.state = {\n      playing: false,\n      wantToPause: false\n    };\n  }\n\n  handleMouseHover() {\n    this.playSong(this.props.deviceId, this.props.accessToken, this.props.post.songId, this.props.post.startTime);\n  }\n\n  handleMouseLeave() {\n    this.pauseSong(this.props.accessToken);\n  }\n\n  render() {\n    let post = this.props.post;\n    if (this.state.playing && this.state.wantToPause) this.pauseSong(this.props.accessToken);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PostInfo, {\n      name: post.name,\n      text: post.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PostMusic, {\n      songName: post.songName,\n      songArtist: post.songArtist,\n      songId: post.songId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/components/Post.js"],"names":["React","Component","profilePicturePlaceholder","queryString","getTrack","playAt","pause","PostInfo","render","name","props","text","PostMusic","constructor","loadTrack","parsed","parse","window","location","search","accessToken","access_token","trackData","songId","albumCover","album","images","url","setState","picLoaded","albumUrl","state","songName","songArtist","Post","pauseSong","wantToPause","playing","playSong","deviceId","startTime","handleMouseHover","bind","handleMouseLeave","post"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause } from '../spotifyCalls';\n\nclass PostInfo extends Component {\n    render() {\n        let name = this.props.name;\n        let text = this.props.text;\n        return (\n            <div className=\"postInfo\">\n                <img className=\"profilePic\" src={profilePicturePlaceholder}></img>\n                <div>\n                    <h3 className=\"username\">{name}</h3>\n                    <p className=\"postText\">{text}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass PostMusic extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            picLoaded: false,\n            albumUrl: ''\n        };\n    }\n    loadTrack = async () => {\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = parsed.access_token;\n        const trackData = await getTrack(accessToken, this.props.songId);\n        const albumCover = trackData.album.images[0].url;\n        this.setState({\n            picLoaded: true,\n            albumUrl: albumCover\n        });\n    }\n    render() {\n        let songName = this.props.songName;\n        let songArtist = this.props.songArtist;\n        if (!this.state.picLoaded) {\n            this.loadTrack();\n        }\n        return (\n            <div className=\"postMusic\">\n                <img className=\"albumImg\" src={this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder}></img>\n                <div className=\"songCredit\">\n                    <h4 className=\"songName\">{songName}</h4>\n                    <p className=\"artists\">{songArtist}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class Post extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.state = {\n            playing: false,\n            wantToPause: false\n        };\n    }\n    pauseSong = async (accessToken) => {\n        if (!this.state.wantToPause) {\n            this.setState({\n                wantToPause: true\n            });\n        }\n        if (this.state.playing) {\n            await pause(accessToken);\n            this.setState({\n                playing: false,\n                wantToPause: false\n            });\n        }\n    }\n    playSong = async (deviceId, accessToken, songId, startTime) => {\n        await playAt(deviceId, accessToken, songId, startTime);\n        this.setState({\n            playing: true\n        });\n    }\n    handleMouseHover() {\n        this.playSong(this.props.deviceId, this.props.accessToken, this.props.post.songId, this.props.post.startTime);\n    }\n    handleMouseLeave() {\n        this.pauseSong(this.props.accessToken);\n    }\n    render() {\n        let post = this.props.post;\n        if (this.state.playing && this.state.wantToPause)\n            this.pauseSong(this.props.accessToken);\n        return (\n            <div className=\"post\" onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseLeave}>\n                <PostInfo name={post.name} text={post.text} />\n                <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} />\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}