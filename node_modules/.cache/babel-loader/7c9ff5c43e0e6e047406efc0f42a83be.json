{"ast":null,"code":"import $ from 'jquery';\nexport async function playAt(device_id, token, songId, startTime) {\n  $.ajax({\n    url: \"https://api.spotify.com/v1/me/player/play?device_id=\" + device_id,\n    type: \"PUT\",\n    data: '{\"uris\": [\"' + 'spotify:track:' + songId + '\"], \"position_ms\": ' + startTime + '}',\n    beforeSend: function (xhr) {\n      xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n    },\n    success: function (data) {\n      console.log(data);\n    }\n  });\n}\nexport async function getDevices(token) {\n  return fetch('https://api.spotify.com/v1/me/player/devices', {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(d => d.json());\n}\nexport async function pause(token) {\n  return fetch('https://api.spotify.com/v1/me/player/pause', {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    method: 'PUT'\n  });\n}\nexport async function getTrack(token, trackId) {\n  const url = 'https://api.spotify.com/v1/tracks/' + trackId;\n  return fetch(url, {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(d => d.json());\n}\nexport async function search(token, searchString) {\n  let body = JSON.stringify({\n    q: searchString,\n    type: 'track',\n    limit: 10\n  });\n  return fetch('https://api.spotify.com/v1/search', {\n    body,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    method: 'PUT'\n  });\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/spotifyCalls.js"],"names":["$","playAt","device_id","token","songId","startTime","ajax","url","type","data","beforeSend","xhr","setRequestHeader","success","console","log","getDevices","fetch","headers","method","then","d","json","pause","getTrack","trackId","search","searchString","body","JSON","stringify","q","limit","Authorization"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,OAAO,eAAeC,MAAf,CAAsBC,SAAtB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,SAAhD,EAA2D;AAChEL,EAAAA,CAAC,CAACM,IAAF,CAAO;AACLC,IAAAA,GAAG,EAAE,yDAAyDL,SADzD;AAELM,IAAAA,IAAI,EAAE,KAFD;AAGLC,IAAAA,IAAI,EAAE,gBAAgB,gBAAhB,GAAmCL,MAAnC,GAA4C,qBAA5C,GAAoEC,SAApE,GAAgF,GAHjF;AAILK,IAAAA,UAAU,EAAE,UAAUC,GAAV,EAAe;AAAEA,MAAAA,GAAG,CAACC,gBAAJ,CAAqB,eAArB,EAAsC,YAAYT,KAAlD;AAA2D,KAJnF;AAKLU,IAAAA,OAAO,EAAE,UAAUJ,IAAV,EAAgB;AACvBK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD;AAPI,GAAP;AASD;AAED,OAAO,eAAeO,UAAf,CAA0Bb,KAA1B,EAAiC;AACtC,SAAOc,KAAK,CAAC,8CAAD,EAAiD;AAC3DC,IAAAA,OAAO,EAAE;AACP,uBAAiB,YAAYf,KADtB;AAEP,sBAAgB;AAFT,KADkD;AAK3DgB,IAAAA,MAAM,EAAE;AALmD,GAAjD,CAAL,CAMJC,IANI,CAMCC,CAAC,IAAIA,CAAC,CAACC,IAAF,EANN,CAAP;AAOD;AAED,OAAO,eAAeC,KAAf,CAAqBpB,KAArB,EAA4B;AACjC,SAAOc,KAAK,CAAC,4CAAD,EAA+C;AACzDC,IAAAA,OAAO,EAAE;AACP,uBAAiB,YAAYf,KADtB;AAEP,sBAAgB;AAFT,KADgD;AAKzDgB,IAAAA,MAAM,EAAE;AALiD,GAA/C,CAAZ;AAOD;AAED,OAAO,eAAeK,QAAf,CAAwBrB,KAAxB,EAA+BsB,OAA/B,EAAwC;AAC7C,QAAMlB,GAAG,GAAG,uCAAuCkB,OAAnD;AACA,SAAOR,KAAK,CAACV,GAAD,EAAM;AAChBW,IAAAA,OAAO,EAAE;AACP,uBAAiB,YAAYf,KADtB;AAEP,sBAAgB;AAFT,KADO;AAKhBgB,IAAAA,MAAM,EAAE;AALQ,GAAN,CAAL,CAMJC,IANI,CAMCC,CAAC,IAAIA,CAAC,CAACC,IAAF,EANN,CAAP;AAOD;AAED,OAAO,eAAeI,MAAf,CAAsBvB,KAAtB,EAA6BwB,YAA7B,EAA2C;AAChD,MAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEC,IAAAA,CAAC,EAAEJ,YAAL;AAAmBnB,IAAAA,IAAI,EAAE,OAAzB;AAAkCwB,IAAAA,KAAK,EAAE;AAAzC,GAAf,CAAX;AACA,SAAOf,KAAK,CAAC,mCAAD,EAAsC;AAChDW,IAAAA,IADgD;AAEhDV,IAAAA,OAAO,EAAE;AACPe,MAAAA,aAAa,EAAE,YAAY9B,KADpB;AAEP,sBAAgB;AAFT,KAFuC;AAMhDgB,IAAAA,MAAM,EAAE;AANwC,GAAtC,CAAZ;AAQD","sourcesContent":["import $ from 'jquery';\n\nexport async function playAt(device_id, token, songId, startTime) {\n  $.ajax({\n    url: \"https://api.spotify.com/v1/me/player/play?device_id=\" + device_id,\n    type: \"PUT\",\n    data: '{\"uris\": [\"' + 'spotify:track:' + songId + '\"], \"position_ms\": ' + startTime + '}',\n    beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer ' + token); },\n    success: function (data) {\n      console.log(data);\n    }\n  });\n}\n\nexport async function getDevices(token) {\n  return fetch('https://api.spotify.com/v1/me/player/devices', {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json',\n    },\n    method: 'GET',\n  }).then(d => d.json());\n}\n\nexport async function pause(token) {\n  return fetch('https://api.spotify.com/v1/me/player/pause', {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json',\n    },\n    method: 'PUT',\n  });\n}\n\nexport async function getTrack(token, trackId) {\n  const url = 'https://api.spotify.com/v1/tracks/' + trackId;\n  return fetch(url, {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json',\n    },\n    method: 'GET',\n  }).then(d => d.json());\n}\n\nexport async function search(token, searchString) {\n  let body = JSON.stringify({ q: searchString, type: 'track', limit: 10 });\n  return fetch('https://api.spotify.com/v1/search', {\n    body,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      'Content-Type': 'application/json',\n    },\n    method: 'PUT',\n  });\n}"]},"metadata":{},"sourceType":"module"}