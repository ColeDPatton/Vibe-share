{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/App.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from './img/profilePicturePlaceholder.jpg';\nimport './App.css';\nimport queryString from 'query-string';\nimport $ from 'jquery';\nlet fakeServerData = {\n  user: {\n    device_id: '',\n    name: 'Cole'\n  },\n  posts: [{\n    name: 'Bob',\n    text: 'John spelled feeling wrong lol',\n    songId: '0d28khcov6AiegSCpG5TuT',\n    songName: 'Feel Good Inc.',\n    songArtist: 'Gorrilaz'\n  }, {\n    name: 'John',\n    text: 'Felling Good!',\n    songId: '0d28khcov6AiegSCpG5TuT',\n    songName: 'Feel Good Inc.',\n    songArtist: 'Gorrilaz'\n  }, {\n    name: 'Alex',\n    text: 'I\\'m Alex',\n    songId: '0yBylQ4liLmENeK82vnHOb',\n    songName: 'Dont Ask Cuz I Dont Know',\n    songArtist: 'Jon Bellion'\n  }, {\n    name: 'Emily',\n    text: 'HI!',\n    songId: '6ZzYETKetIfNUsZUb23jgG',\n    songName: 'Day 1',\n    songArtist: 'Honne'\n  }]\n}; // function Header() {\n//   return (\n//     <div className=\"header\">\n//       <h1>{this.state.serverData.user && this.state.serverData.user.name}</h1>\n//     </div>\n//   );\n// }\n\nclass PostInfo extends Component {\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profilePic\",\n      src: profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"postText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, text)));\n  }\n\n}\n\nclass PostMusic extends Component {\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n    let songId = this.props.songId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postMusic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"albumImg\",\n      src: profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"songName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, songName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, songArtist));\n  }\n\n}\n\nclass Post extends Component {\n  render() {\n    let post = this.props.post;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PostInfo, {\n      name: post.name,\n      text: post.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PostMusic, {\n      songName: post.songName,\n      songArtist: post.songArtist,\n      songId: post.songId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nasync function playAt(device_id, token) {} // $.ajax({\n//   url: \"https://api.spotify.com/v1/me/player/play?device_id=\" + device_id,\n//   type: \"PUT\",\n//   data: '{\"uris\": [\"' + 'spotify:track:0d28khcov6AiegSCpG5TuT' + '\"], \"position_ms\": ' + '100000' + '}',\n//   beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer ' + token); },\n//   success: function (data) {\n//     console.log(data);\n//   }\n// });\n// render() {\n//   this.playAt(100000);\n//   return (\n//       <div>\n//           <h3 id=\"username\">Test User</h3>\n//           <p id=\"post\">Wow! something something somethnig</p>\n//       </div>\n//   );\n// }\n\n\nasync function getDevices(token) {// return fetch('https://api.spotify.com/v1/me/player/devices', {\n  //   headers: {\n  //     'Authorization': 'Bearer ' + token,\n  //     'Content-Type': 'application/json',\n  //   },\n  //   method: 'GET',\n  // }).then(d => d.json());\n}\n\nasync function play(accessToken) {\n  console.log(\"here\");\n  const devices = await getDevices(accessToken);\n  console.log(\"devices? \" + devices);\n  let device_id = devices.devices[0].id;\n  await playAt(device_id, accessToken);\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.initializePlayer = () => {\n      let parsed = queryString.parse(window.location.search);\n      let accessToken = parsed.access_token;\n      const name = 'cole';\n      this.updateState({\n        isInitializing: true\n      }); // @ts-ignore\n\n      this.player = new window.Spotify.Player({\n        getOAuthToken: cb => {\n          cb(accessToken);\n        },\n        name\n      });\n      this.player.addListener('ready', this.handlePlayerStatus);\n      this.player.addListener('not_ready', this.handlePlayerStatus);\n      this.player.addListener('player_state_changed', this.handlePlayerStateChanges); // this.player.addListener('initialization_error', (error: IWebPlaybackError) =>\n      //   this.handlePlayerErrors('initialization_error', error.message),\n      // );\n      // this.player.addListener('authentication_error', (error: IWebPlaybackError) =>\n      //   this.handlePlayerErrors('authentication_error', error.message),\n      // );\n      // this.player.addListener('account_error', (error: IWebPlaybackError) =>\n      //   this.handlePlayerErrors('account_error', error.message),\n      // );\n      // this.player.addListener('playback_error', (error: IWebPlaybackError) =>\n      //   this.handlePlayerErrors('playback_error', error.message),\n      // );\n\n      this.player.connect();\n    };\n\n    this.state = {\n      serverData: {}\n    };\n  }\n\n  componentDidMount() {\n    window.onSpotifyWebPlaybackSDKReady = this.initializePlayer; // this.setState({\n    //   serverData: fakeServerData\n    // });\n    // setTimeout(\n    //   fetch('https://api.spotify.com/v1/me/player/devices', {\n    //     headers: { 'Authorization': 'Bearer ' + accessToken }\n    //   }).then(response => response.json())\n    //     .then(data => console.log(data)), 100000\n    // );\n    // .then(data => this.setState({serverData: {user: {device_id: data.devices[0].id}}}))\n  }\n\n  render() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    let allPosts = this.state.serverData.user && this.state.serverData.posts ? this.state.serverData.posts : [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, this.state.serverData.user && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, this.state.serverData.user.name), allPosts.map(currentPost => /*#__PURE__*/React.createElement(Post, {\n      post: currentPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 42\n      }\n    })), play(accessToken)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/colepatton/vibin/src/App.js"],"names":["React","Component","profilePicturePlaceholder","queryString","$","fakeServerData","user","device_id","name","posts","text","songId","songName","songArtist","PostInfo","render","props","PostMusic","Post","post","playAt","token","getDevices","play","accessToken","console","log","devices","id","App","constructor","initializePlayer","parsed","parse","window","location","search","access_token","updateState","isInitializing","player","Spotify","Player","getOAuthToken","cb","addListener","handlePlayerStatus","handlePlayerStateChanges","connect","state","serverData","componentDidMount","onSpotifyWebPlaybackSDKReady","allPosts","map","currentPost"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from './img/profilePicturePlaceholder.jpg';\nimport './App.css';\nimport queryString from 'query-string';\nimport $ from 'jquery';\n\nlet fakeServerData = {\n  user: {\n    device_id: '',\n    name: 'Cole'\n  },\n  posts:\n    [{\n      name: 'Bob',\n      text: 'John spelled feeling wrong lol',\n      songId: '0d28khcov6AiegSCpG5TuT',\n      songName: 'Feel Good Inc.',\n      songArtist: 'Gorrilaz'\n    },\n    {\n      name: 'John',\n      text: 'Felling Good!',\n      songId: '0d28khcov6AiegSCpG5TuT',\n      songName: 'Feel Good Inc.',\n      songArtist: 'Gorrilaz'\n    },\n    {\n      name: 'Alex',\n      text: 'I\\'m Alex',\n      songId: '0yBylQ4liLmENeK82vnHOb',\n      songName: 'Dont Ask Cuz I Dont Know',\n      songArtist: 'Jon Bellion'\n    },\n    {\n      name: 'Emily',\n      text: 'HI!',\n      songId: '6ZzYETKetIfNUsZUb23jgG',\n      songName: 'Day 1',\n      songArtist: 'Honne'\n    }]\n}\n\n// function Header() {\n//   return (\n//     <div className=\"header\">\n//       <h1>{this.state.serverData.user && this.state.serverData.user.name}</h1>\n//     </div>\n//   );\n// }\n\nclass PostInfo extends Component {\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    return (\n      <div className=\"postInfo\">\n        <img className=\"profilePic\" src={profilePicturePlaceholder}></img>\n        <div>\n          <h3 className=\"username\">{name}</h3>\n          <p className=\"postText\">{text}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass PostMusic extends Component {\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n    let songId = this.props.songId;\n    return (\n      <div className=\"postMusic\">\n        <img className=\"albumImg\" src={profilePicturePlaceholder}></img>\n        <h4 className=\"songName\">{songName}</h4>\n        <p className=\"artists\">{songArtist}</p>\n      </div>\n    );\n  }\n}\n\nclass Post extends Component {\n  render() {\n    let post = this.props.post;\n    return (\n      <div className=\"post\">\n        <PostInfo name={post.name} text={post.text} />\n        <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} />\n      </div>\n    );\n  }\n}\nasync function playAt(device_id, token) {\n  // $.ajax({\n  //   url: \"https://api.spotify.com/v1/me/player/play?device_id=\" + device_id,\n  //   type: \"PUT\",\n  //   data: '{\"uris\": [\"' + 'spotify:track:0d28khcov6AiegSCpG5TuT' + '\"], \"position_ms\": ' + '100000' + '}',\n  //   beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer ' + token); },\n  //   success: function (data) {\n  //     console.log(data);\n  //   }\n  // });\n}\n// render() {\n//   this.playAt(100000);\n//   return (\n//       <div>\n//           <h3 id=\"username\">Test User</h3>\n//           <p id=\"post\">Wow! something something somethnig</p>\n//       </div>\n//   );\n// }\n\nasync function getDevices(token) {\n  // return fetch('https://api.spotify.com/v1/me/player/devices', {\n  //   headers: {\n  //     'Authorization': 'Bearer ' + token,\n  //     'Content-Type': 'application/json',\n  //   },\n  //   method: 'GET',\n  // }).then(d => d.json());\n}\n\nasync function play(accessToken) {\n  console.log(\"here\");\n  const devices = await getDevices(accessToken);\n  console.log(\"devices? \" + devices);\n  let device_id = devices.devices[0].id;\n  await playAt(device_id, accessToken);\n}\n\nclass App extends Component {\n  \n  initializePlayer = () => {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    const name = 'cole';\n\n    this.updateState({ isInitializing: true });\n\n    // @ts-ignore\n    this.player = new window.Spotify.Player({\n      getOAuthToken: cb => {\n        cb(accessToken);\n      },\n      name\n    });\n\n    this.player.addListener('ready', this.handlePlayerStatus);\n    this.player.addListener('not_ready', this.handlePlayerStatus);\n    this.player.addListener('player_state_changed', this.handlePlayerStateChanges);\n    // this.player.addListener('initialization_error', (error: IWebPlaybackError) =>\n    //   this.handlePlayerErrors('initialization_error', error.message),\n    // );\n    // this.player.addListener('authentication_error', (error: IWebPlaybackError) =>\n    //   this.handlePlayerErrors('authentication_error', error.message),\n    // );\n    // this.player.addListener('account_error', (error: IWebPlaybackError) =>\n    //   this.handlePlayerErrors('account_error', error.message),\n    // );\n    // this.player.addListener('playback_error', (error: IWebPlaybackError) =>\n    //   this.handlePlayerErrors('playback_error', error.message),\n    // );\n\n    this.player.connect();\n  };\n  constructor() {\n    super();\n    this.state = { serverData: {} };\n  }\n  componentDidMount() {\n    window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    // this.setState({\n    //   serverData: fakeServerData\n    // });\n    // setTimeout(\n    //   fetch('https://api.spotify.com/v1/me/player/devices', {\n    //     headers: { 'Authorization': 'Bearer ' + accessToken }\n    //   }).then(response => response.json())\n    //     .then(data => console.log(data)), 100000\n    // );\n    // .then(data => this.setState({serverData: {user: {device_id: data.devices[0].id}}}))\n  }\n  render() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    let allPosts =\n      (this.state.serverData.user && this.state.serverData.posts) ?\n        this.state.serverData.posts : [];\n    return (\n      <div className=\"App\">\n        {\n          this.state.serverData.user &&\n          <div>\n            <h1>{this.state.serverData.user.name}</h1>\n            {allPosts.map(currentPost => <Post post={currentPost} />)}\n            {\n              play(accessToken)\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}