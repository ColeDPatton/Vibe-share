{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/components/App.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport $ from 'jquery';\nimport Post from './Post';\nimport NewPost from './NewPost';\nimport { loadPosts } from '../backendCalls';\nimport { getTrack, playAt, pause, search, getCurrentPlaybackInfo } from '../spotifyCalls';\nlet fakeServerData = {\n  user: {\n    device_id: '',\n    name: 'Cole'\n  },\n  posts: [{\n    name: 'Bob',\n    text: 'John spelled feeling wrong lol',\n    songId: '0d28khcov6AiegSCpG5TuT',\n    songName: 'Feel Good Inc.',\n    songArtist: 'Gorrilaz',\n    startTime: '122500'\n  }, {\n    name: 'John',\n    text: 'Felling Good!',\n    songId: '0d28khcov6AiegSCpG5TuT',\n    songName: 'Feel Good Inc.',\n    songArtist: 'Gorrilaz',\n    startTime: '100000'\n  }, {\n    name: 'Alex',\n    text: 'I\\'m Alex',\n    songId: '0yBylQ4liLmENeK82vnHOb',\n    songName: 'Dont Ask Cuz I Dont Know',\n    songArtist: 'Jon Bellion',\n    startTime: '100000'\n  }, {\n    name: 'Emily',\n    text: 'HI!',\n    songId: '6ZzYETKetIfNUsZUb23jgG',\n    songName: 'Day 1',\n    songArtist: 'Honne',\n    startTime: '100000'\n  }]\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handlePlayerStatus = async device_id => {\n      this.setState({\n        deviceId: device_id\n      });\n    };\n\n    this.initializePlayer = () => {\n      let parsed = queryString.parse(window.location.search);\n      let accessToken = parsed.access_token;\n      this.setState({\n        accessToken: accessToken\n      });\n      const name = 'vibin';\n      this.player = new window.Spotify.Player({\n        getOAuthToken: cb => {\n          cb(accessToken);\n        },\n        name\n      });\n      this.player.addListener('initialization_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('authentication_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('account_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('playback_error', ({\n        message\n      }) => {\n        console.error(message);\n      }); // Playback status updates\n\n      this.player.addListener('player_state_changed', state => {\n        console.log(state);\n      }); // Ready\n\n      this.player.addListener('ready', ({\n        device_id\n      }) => {\n        this.handlePlayerStatus(device_id);\n        console.log('Ready with Device ID', device_id);\n      }); // Not Ready\n\n      this.player.addListener('not_ready', ({\n        device_id\n      }) => {\n        console.log('Device ID has gone offline', device_id);\n      });\n      this.player.connect();\n    };\n\n    this.pauseSong = async startTime => {\n      pause(this.state.accessToken);\n      this.stopTimer(startTime);\n    };\n\n    this.playSong = async (songId, startTime, endTime) => {\n      playAt(this.state.deviceId, this.state.accessToken, this.state.activeSong, this.state.startTime);\n      clearInterval(this.timer);\n      this.timer = '';\n      this.startTimer(startTime, endTime);\n    };\n\n    this.startTimer = async (startTime, endTime) => {\n      this.setState({\n        time: startTime,\n        start: Date.now() - startTime\n      });\n\n      if (!this.timer) {\n        this.timer = setInterval(() => {\n          this.setState({\n            time: Math.floor(Date.now() - this.state.start)\n          });\n\n          if (this.state.time > endTime) {\n            this.pauseSong(this.state.accessToken);\n          }\n        }, 1000);\n      }\n    };\n\n    this.stopTimer = async startTime => {\n      console.log('Stop timer');\n      this.setState({\n        time: startTime\n      });\n      clearInterval(this.timer);\n      this.timer = '';\n    };\n\n    this.setActiveSong = (songId, startTime, endTime) => {\n      this.setState({\n        activeSong: songId,\n        playSong: true,\n        startTime: startTime,\n        endTime: endTime\n      });\n    };\n\n    this.removeActiveSong = () => {\n      this.setState({\n        activeSong: '',\n        playSong: false\n      });\n    };\n\n    this.state = {\n      serverData: {},\n      deviceId: '',\n      accessToken: '',\n      newPost: false,\n      time: 0,\n      start: 0,\n      startTime: 0,\n      endTime: 0,\n      activeSong: '',\n      playSong: false,\n      playing: false\n    };\n    this.clickOuterNewPost = this.clickOuterNewPost.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n  }\n\n  componentDidMount() {\n    window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    loadPosts().then(post => this.setState({\n      serverData: {\n        posts: post,\n        user: {\n          name: 'Cole'\n        }\n      }\n    }));\n  }\n\n  clickOuterNewPost() {\n    const showPost = this.state.newPost;\n    this.setState({\n      newPost: !showPost\n    });\n  }\n\n  render() {\n    if (this.state.playSong && !this.state.playing) {\n      console.log('play here');\n      this.playSong(this.state.deviceId, this.state.accessToken, this.state.activeSong, this.state.startTime);\n      this.setState({\n        playing: true\n      });\n    } else if (!this.state.playSong && this.state.playing) {\n      console.log('pause');\n      this.pauseSong(this.state.startTime);\n      this.setState({\n        playing: false\n      }); // getCurrentPlaybackInfo(this.state.accessToken).then((res) => {\n      //   console.log(res);\n      //   if (res.isPlaying)\n      //     this.pauseSong(this.state.startTime);\n      // })\n    }\n\n    let allPosts = this.state.serverData.user && this.state.serverData.posts ? this.state.serverData.posts : [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, this.state.newPost && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"outerNewPost\",\n      onMouseDown: this.clickOuterNewPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(NewPost, {\n      deviceId: this.state.deviceId,\n      accessToken: this.state.accessToken,\n      onMouseDown: () => {},\n      userName: this.state.serverData.user.name,\n      playSong: this.playSong,\n      pauseSong: this.pauseSong,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    })), this.state.serverData.user && this.state.deviceId && /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.newPost ? \"blurPosts\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, this.state.serverData.user.name), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        const showPost = this.state.newPost;\n        this.setState({\n          newPost: !showPost\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, this.state.newPost ? \"Cancel\" : \"New Post\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, allPosts.map(currentPost => /*#__PURE__*/React.createElement(Post, {\n      post: currentPost,\n      deviceId: this.state.deviceId,\n      accessToken: this.state.accessToken,\n      setActiveSong: this.setActiveSong,\n      removeActiveSong: this.removeActiveSong,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/colepatton/vibin/src/components/App.js"],"names":["React","Component","profilePicturePlaceholder","queryString","$","Post","NewPost","loadPosts","getTrack","playAt","pause","search","getCurrentPlaybackInfo","fakeServerData","user","device_id","name","posts","text","songId","songName","songArtist","startTime","App","constructor","handlePlayerStatus","setState","deviceId","initializePlayer","parsed","parse","window","location","accessToken","access_token","player","Spotify","Player","getOAuthToken","cb","addListener","message","console","error","state","log","connect","pauseSong","stopTimer","playSong","endTime","activeSong","clearInterval","timer","startTimer","time","start","Date","now","setInterval","Math","floor","setActiveSong","removeActiveSong","serverData","newPost","playing","clickOuterNewPost","bind","componentDidMount","onSpotifyWebPlaybackSDKReady","then","post","showPost","render","allPosts","map","currentPost"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport $ from 'jquery';\nimport Post from './Post';\nimport NewPost from './NewPost';\nimport { loadPosts } from '../backendCalls';\nimport { getTrack, playAt, pause, search, getCurrentPlaybackInfo } from '../spotifyCalls';\n\nlet fakeServerData = {\n  user: {\n    device_id: '',\n    name: 'Cole'\n  },\n  posts:\n    [{\n      name: 'Bob',\n      text: 'John spelled feeling wrong lol',\n      songId: '0d28khcov6AiegSCpG5TuT',\n      songName: 'Feel Good Inc.',\n      songArtist: 'Gorrilaz',\n      startTime: '122500'\n    },\n    {\n      name: 'John',\n      text: 'Felling Good!',\n      songId: '0d28khcov6AiegSCpG5TuT',\n      songName: 'Feel Good Inc.',\n      songArtist: 'Gorrilaz',\n      startTime: '100000'\n    },\n    {\n      name: 'Alex',\n      text: 'I\\'m Alex',\n      songId: '0yBylQ4liLmENeK82vnHOb',\n      songName: 'Dont Ask Cuz I Dont Know',\n      songArtist: 'Jon Bellion',\n      startTime: '100000'\n    },\n    {\n      name: 'Emily',\n      text: 'HI!',\n      songId: '6ZzYETKetIfNUsZUb23jgG',\n      songName: 'Day 1',\n      songArtist: 'Honne',\n      startTime: '100000'\n    }]\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverData: {},\n      deviceId: '',\n      accessToken: '',\n      newPost: false,\n      time: 0,\n      start: 0,\n      startTime: 0,\n      endTime: 0,\n      activeSong: '',\n      playSong: false,\n      playing: false,\n    };\n    this.clickOuterNewPost = this.clickOuterNewPost.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n  }\n\n  handlePlayerStatus = async (device_id) => {\n    this.setState({\n      deviceId: device_id,\n    });\n  };\n\n  // play = async (accessToken) => {\n  //   const devices = await getDevices(accessToken);\n  //   if (devices.devices.length > 0) {\n  //     let device_id = devices.devices[0].id;\n  //     await playAt(device_id, accessToken);\n  //   }\n  // }\n\n  initializePlayer = () => {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    this.setState({\n      accessToken: accessToken\n    });\n    const name = 'vibin';\n\n    this.player = new window.Spotify.Player({\n      getOAuthToken: cb => {\n        cb(accessToken);\n      },\n      name\n    });\n\n    this.player.addListener('initialization_error', ({ message }) => { console.error(message); });\n    this.player.addListener('authentication_error', ({ message }) => { console.error(message); });\n    this.player.addListener('account_error', ({ message }) => { console.error(message); });\n    this.player.addListener('playback_error', ({ message }) => { console.error(message); });\n\n    // Playback status updates\n    this.player.addListener('player_state_changed', state => { console.log(state); });\n\n    // Ready\n    this.player.addListener('ready', ({ device_id }) => {\n      this.handlePlayerStatus(device_id);\n      console.log('Ready with Device ID', device_id);\n    });\n\n    // Not Ready\n    this.player.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    this.player.connect();\n  };\n\n  componentDidMount() {\n    window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    loadPosts().then(post => this.setState({\n      serverData: {\n        posts: post,\n        user: {\n          name: 'Cole'\n        }\n      }\n    }));\n  }\n\n  clickOuterNewPost() {\n    const showPost = this.state.newPost;\n    this.setState({\n      newPost: !showPost\n    });\n  }\n\n  pauseSong = async (startTime) => {\n    pause(this.state.accessToken)\n    this.stopTimer(startTime);\n  }\n  playSong = async (songId, startTime, endTime) => {\n    playAt(this.state.deviceId, this.state.accessToken, this.state.activeSong, this.state.startTime);\n    clearInterval(this.timer);\n    this.timer = '';\n    this.startTimer(startTime, endTime);\n  }\n  startTimer = async (startTime, endTime) => {\n    this.setState({\n      time: startTime,\n      start: Date.now() - startTime\n    });\n    if (!this.timer) {\n      this.timer = setInterval(() => {\n        this.setState({\n          time: Math.floor(Date.now() - this.state.start),\n        });\n        if (this.state.time > endTime) {\n          this.pauseSong(this.state.accessToken);\n        }\n      }, 1000);\n    }\n  }\n  stopTimer = async (startTime) => {\n    console.log('Stop timer');\n    this.setState({\n      time: startTime,\n    });\n    clearInterval(this.timer);\n    this.timer = '';\n  }\n  setActiveSong = (songId, startTime, endTime) => {\n    this.setState({\n      activeSong: songId,\n      playSong: true,\n      startTime: startTime,\n      endTime: endTime\n    });\n  }\n  removeActiveSong = () => {\n    this.setState({\n      activeSong: '',\n      playSong: false\n    });\n  }\n  render() {\n    if (this.state.playSong && !this.state.playing) {\n      console.log('play here');\n      this.playSong(this.state.deviceId, this.state.accessToken, this.state.activeSong, this.state.startTime);\n      this.setState({\n        playing: true\n      });\n    } else if (!this.state.playSong && this.state.playing) {\n      console.log('pause');\n      this.pauseSong(this.state.startTime);\n      this.setState({\n        playing: false\n      });\n      // getCurrentPlaybackInfo(this.state.accessToken).then((res) => {\n      //   console.log(res);\n      //   if (res.isPlaying)\n      //     this.pauseSong(this.state.startTime);\n      // })\n    }\n    let allPosts =\n      (this.state.serverData.user && this.state.serverData.posts) ?\n        this.state.serverData.posts : [];\n\n    return (\n      <div className=\"App\">\n        {this.state.newPost &&\n          <div>\n            <div className=\"outerNewPost\" onMouseDown={this.clickOuterNewPost}></div>\n            <NewPost\n              deviceId={this.state.deviceId}\n              accessToken={this.state.accessToken}\n              onMouseDown={() => { }}\n              userName={this.state.serverData.user.name}\n              playSong={this.playSong}\n              pauseSong={this.pauseSong}\n            />\n          </div>\n        }\n        {\n          (this.state.serverData.user && this.state.deviceId) &&\n          <div className={this.state.newPost ? \"blurPosts\" : \"\"}>\n            <h1>{this.state.serverData.user.name}</h1>\n            <button onClick={() => {\n              const showPost = this.state.newPost;\n              this.setState({\n                newPost: !showPost\n              });\n            }}>{this.state.newPost ? \"Cancel\" : \"New Post\"}</button>\n            <div className=\"posts\">\n              {allPosts.map(currentPost =>\n                <Post\n                  post={currentPost}\n                  deviceId={this.state.deviceId}\n                  accessToken={this.state.accessToken}\n                  setActiveSong={this.setActiveSong}\n                  removeActiveSong={this.removeActiveSong}\n                />)}\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}