{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/components/Post.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause, getUser } from '../spotifyCalls';\nimport { useHistory, Link } from 'react-router-dom';\nimport { loadLikes, likePost, deleteLike } from '../backendCalls';\n\nclass PostInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgUrl: ''\n    };\n    this.redirectToUserProfile = this.redirectToUserProfile.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.accessToken) {\n      console.log('imgUrl');\n      console.log('imgUrl');\n      console.log('imgUrl');\n      getUser(this.props.accessToken).then(user => {\n        let imgUrl = user.images.length > 0 ? user.images[0].url : '';\n        console.log('imgUrl');\n        console.log(imgUrl);\n        this.setState({\n          imgUrl: imgUrl\n        });\n      });\n    }\n  }\n\n  redirectToUserProfile() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = '';\n    if (parsed.access_token) accessToken = parsed.access_token;\n    window.location.href = window.location.origin + '/user/?username=' + this.props.name + (accessToken ? '&access_token=' + accessToken : '');\n  }\n\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profilePic\",\n      src: this.state.imgUrl ? this.state.imgUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"username\",\n      onClick: this.redirectToUserProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"postText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, text)));\n  }\n\n}\n\nclass PostMusic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.routeToSpotify = () => {\n      const history = useHistory();\n      history.push('https://open.spotify.com/track/' + this.props.songId);\n    };\n\n    this.loadTrack = async () => {\n      const trackData = await getTrack(this.props.accessToken, this.props.songId);\n      const albumCover = trackData.album.images[0].url;\n      this.setState({\n        picLoaded: true,\n        albumUrl: albumCover,\n        songName: this.props.songName\n      });\n    };\n\n    this.state = {\n      picLoaded: false,\n      albumUrl: '',\n      songName: ''\n    };\n    this.routeToSpotify = this.routeToSpotify.bind(this);\n  }\n\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n\n    if (this.props.loggedIn && this.state.songName != this.props.songName || this.props.loggedIn && !this.state.picLoaded) {\n      this.loadTrack();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postMusic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"albumImg\",\n      onClick: event => window.location.href = 'https://open.spotify.com/track/' + this.props.songId,\n      src: this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songCredit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"songName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, songName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, songArtist)));\n  }\n\n}\n\nexport default class Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pauseSong = async startTime => {\n      pause(this.props.accessToken);\n      this.stopTimer(startTime);\n    };\n\n    this.playSong = async (songId, startTime, endTime) => {\n      playAt(this.props.deviceId, this.props.accessToken, songId, startTime);\n      clearInterval(this.timer);\n      this.timer = '';\n      this.startTimer(startTime, endTime);\n    };\n\n    this.startTimer = async (startTime, endTime) => {\n      this.setState({\n        time: startTime,\n        start: Date.now() - startTime\n      });\n\n      if (!this.timer) {\n        this.timer = setInterval(() => {\n          this.setState({\n            time: Math.floor(Date.now() - this.state.start)\n          });\n\n          if (this.state.time > endTime) {\n            this.pauseSong(startTime);\n          }\n        }, 1000);\n      }\n    };\n\n    this.stopTimer = async startTime => {\n      this.setState({\n        time: startTime\n      });\n      clearInterval(this.timer);\n      this.timer = '';\n    };\n\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.clickedLikePost = this.clickedLikePost.bind(this);\n    this.state = {\n      playing: false,\n      time: 0,\n      start: 0,\n      accessToken: '',\n      likeCount: '',\n      liked: false,\n      muted: false\n    };\n  }\n\n  componentDidMount() {\n    let liked = false;\n    loadLikes().then(likes => {\n      likes.forEach(like => {\n        if (like.postId === this.props.post._id && like.username === this.props.username) {\n          liked = true;\n        }\n      });\n    }).then(() => {\n      this.setState({\n        accessToken: this.props.accessToken,\n        likeCount: this.props.post.likeCount,\n        liked: liked,\n        muted: this.props.muted\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.accessToken != prevProps.accessToken) this.setState({\n      accessToken: this.props.accessToken\n    });\n    if (this.props.muted != prevProps.muted) this.setState({\n      muted: this.props.muted\n    });\n  }\n\n  handleMouseHover() {\n    if (!this.state.muted) this.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n  }\n\n  handleMouseLeave() {\n    if (!this.state.muted) setTimeout(() => {\n      this.pauseSong(this.props.post.startTime);\n    }, 100);\n  }\n\n  clickedLikePost() {\n    if (!this.state.liked) {\n      likePost(this.props.username, this.props.post._id);\n      this.setState({\n        likeCount: this.state.likeCount + 1,\n        liked: true\n      });\n    } else {\n      deleteLike(this.props.username, this.props.post._id);\n      this.setState({\n        likeCount: this.state.likeCount - 1,\n        liked: false\n      });\n    }\n  }\n\n  render() {\n    let post = this.props.post;\n\n    if (this.state.accessToken) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post\",\n        onMouseEnter: this.handleMouseHover,\n        onMouseLeave: this.handleMouseLeave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"postInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PostInfo, {\n        accessToken: this.props.accessToken,\n        name: post.name,\n        text: post.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(PostMusic, {\n        songName: post.songName,\n        songArtist: post.songArtist,\n        songId: post.songId,\n        loggedIn: true,\n        accessToken: this.props.accessToken,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"likeButtonContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"likeButton myButtonBlue\",\n        onClick: this.clickedLikePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }\n      }, this.state.liked ? 'Liked' : 'Like'), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }, this.state.likeCount)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"postInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PostInfo, {\n        name: post.name,\n        text: post.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(PostMusic, {\n        songName: post.songName,\n        songArtist: post.songArtist,\n        songId: post.songId,\n        loggedIn: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"likeButtonContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"likeButton myButtonBlue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }\n      }, this.state.likeCount)));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/components/Post.js"],"names":["React","Component","profilePicturePlaceholder","queryString","getTrack","playAt","pause","getUser","useHistory","Link","loadLikes","likePost","deleteLike","PostInfo","constructor","props","state","imgUrl","redirectToUserProfile","bind","componentDidMount","accessToken","console","log","then","user","images","length","url","setState","parsed","parse","window","location","search","access_token","href","origin","name","render","text","PostMusic","routeToSpotify","history","push","songId","loadTrack","trackData","albumCover","album","picLoaded","albumUrl","songName","songArtist","loggedIn","event","Post","pauseSong","startTime","stopTimer","playSong","endTime","deviceId","clearInterval","timer","startTimer","time","start","Date","now","setInterval","Math","floor","handleMouseHover","handleMouseLeave","clickedLikePost","playing","likeCount","liked","muted","likes","forEach","like","postId","post","_id","username","componentDidUpdate","prevProps","stopTime","setTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause, getUser } from '../spotifyCalls';\nimport { useHistory, Link } from 'react-router-dom';\nimport { loadLikes, likePost, deleteLike } from '../backendCalls';\n\nclass PostInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imgUrl: ''\n        }\n        this.redirectToUserProfile = this.redirectToUserProfile.bind(this);\n    }\n    componentDidMount() {\n        if (this.props.accessToken) {\n            console.log('imgUrl');\n            console.log('imgUrl');\n            console.log('imgUrl');\n\n            getUser(this.props.accessToken).then(user => {\n                let imgUrl = user.images.length > 0 ?\n                user.images[0].url : '';\n                console.log('imgUrl');\n                console.log(imgUrl);\n                this.setState({\n                    imgUrl: imgUrl\n                })\n            })\n        }\n    }\n    redirectToUserProfile() {\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = ''\n        if (parsed.access_token)\n            accessToken = parsed.access_token;\n\n        window.location.href = window.location.origin + '/user/?username=' + this.props.name + (accessToken ? ('&access_token=' + accessToken) : '');\n    }\n    render() {\n        let name = this.props.name;\n        let text = this.props.text;\n        return (\n            <div className=\"postInfo\">\n                <img className=\"profilePic\" src={this.state.imgUrl ? this.state.imgUrl : profilePicturePlaceholder}></img>\n                <div>\n                    <h3 className=\"username\" onClick={this.redirectToUserProfile}>{name}</h3>\n                    <p className=\"postText\">{text}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass PostMusic extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            picLoaded: false,\n            albumUrl: '',\n            songName: ''\n        };\n        this.routeToSpotify = this.routeToSpotify.bind(this);\n    }\n    routeToSpotify = () => {\n        const history = useHistory();\n        history.push('https://open.spotify.com/track/' + this.props.songId);\n    }\n    loadTrack = async () => {\n        const trackData = await getTrack(this.props.accessToken, this.props.songId);\n        const albumCover = trackData.album.images[0].url;\n        this.setState({\n            picLoaded: true,\n            albumUrl: albumCover,\n            songName: this.props.songName\n        });\n    }\n    render() {\n        let songName = this.props.songName;\n        let songArtist = this.props.songArtist;\n        if ((this.props.loggedIn && (this.state.songName != this.props.songName)) || (this.props.loggedIn && !this.state.picLoaded)) {\n            this.loadTrack();\n        }\n        return (\n            <div className=\"postMusic\">\n                <img className=\"albumImg\"\n                    onClick={event => window.location.href = 'https://open.spotify.com/track/' + this.props.songId}\n                    src={this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder}>\n                </img>\n                <div className=\"songCredit\">\n                    <h4 className=\"songName\">{songName}</h4>\n                    <p className=\"artists\">{songArtist}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class Post extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.clickedLikePost = this.clickedLikePost.bind(this);\n        this.state = {\n            playing: false,\n            time: 0,\n            start: 0,\n            accessToken: '',\n            likeCount: '',\n            liked: false,\n            muted: false\n        };\n    }\n    componentDidMount() {\n        let liked = false;\n        loadLikes().then(likes => {\n            likes.forEach(like => {\n                if (like.postId === this.props.post._id && like.username === this.props.username) {\n                    liked = true;\n                }\n            });\n        }).then(() => {\n            this.setState({\n                accessToken: this.props.accessToken,\n                likeCount: this.props.post.likeCount,\n                liked: liked,\n                muted: this.props.muted\n            });\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.accessToken != prevProps.accessToken)\n            this.setState({ accessToken: this.props.accessToken });\n        if (this.props.muted != prevProps.muted)\n            this.setState({ muted: this.props.muted });\n    }\n    pauseSong = async (startTime) => {\n        pause(this.props.accessToken)\n        this.stopTimer(startTime);\n    }\n    playSong = async (songId, startTime, endTime) => {\n        playAt(this.props.deviceId, this.props.accessToken, songId, startTime);\n        clearInterval(this.timer);\n        this.timer = '';\n        this.startTimer(startTime, endTime);\n    }\n    startTimer = async (startTime, endTime) => {\n        this.setState({\n            time: startTime,\n            start: Date.now() - startTime\n        });\n        if (!this.timer) {\n            this.timer = setInterval(() => {\n                this.setState({\n                    time: Math.floor(Date.now() - this.state.start),\n                });\n                if (this.state.time > endTime) {\n                    this.pauseSong(startTime);\n                }\n            }, 1000);\n        }\n    }\n    stopTimer = async (startTime) => {\n        this.setState({\n            time: startTime,\n        });\n        clearInterval(this.timer);\n        this.timer = '';\n    }\n    handleMouseHover() {\n        if (!this.state.muted)\n            this.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n    }\n    handleMouseLeave() {\n        if (!this.state.muted)\n            setTimeout((() => {\n                this.pauseSong(this.props.post.startTime);\n            }), 100);\n    }\n    clickedLikePost() {\n        if (!this.state.liked) {\n            likePost(this.props.username, this.props.post._id);\n            this.setState({ likeCount: (this.state.likeCount + 1), liked: true });\n        } else {\n            deleteLike(this.props.username, this.props.post._id);\n            this.setState({ likeCount: (this.state.likeCount - 1), liked: false });\n        }\n    }\n    render() {\n        let post = this.props.post;\n        if (this.state.accessToken) {\n            return (\n                <div className=\"post\" onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseLeave}>\n                    <div className=\"postInner\">\n                        <PostInfo accessToken={this.props.accessToken} name={post.name} text={post.text} />\n                        <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} loggedIn={true} accessToken={this.props.accessToken} />\n                    </div>\n                    <div className='likeButtonContainer'>\n                        <button className='likeButton myButtonBlue' onClick={this.clickedLikePost}>\n                            {this.state.liked ? 'Liked' : 'Like'}\n                        </button>\n                        <p>{this.state.likeCount}</p>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"post\">\n                    <div className='postInner'>\n                        <PostInfo name={post.name} text={post.text} />\n                        <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} loggedIn={false} />\n                    </div>\n                    <div className='likeButtonContainer'>\n                        <button className='likeButton myButtonBlue'>Like</button>\n                        <p>{this.state.likeCount}</p>\n                    </div>\n                </div>\n            );\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}