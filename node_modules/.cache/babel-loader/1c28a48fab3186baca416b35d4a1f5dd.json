{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/components/NewPost.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause, search } from '../spotifyCalls';\nimport { withStyles, makeStyles, duration } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nexport default class NewPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateResults = async filterString => {\n      const results = await search(this.props.accessToken, filterString);\n      this.setState({\n        searching: false,\n        searchResults: results.tracks.items\n      });\n    };\n\n    this.switchForm = () => {\n      const nextPage = this.state.formPage === 1 ? 2 : 1;\n      console.log(this.state.startTime);\n      console.log(this.state.endTime);\n      this.setState({\n        defaultTime: [this.state.startTime, this.state.endTime],\n        formPage: nextPage\n      });\n    };\n\n    this.pauseSong = async accessToken => {\n      await pause(accessToken);\n      this.stopTimer(); // console.log(\"pause\");\n    };\n\n    this.playSong = async (deviceId, accessToken, songId) => {\n      await playAt(deviceId, accessToken, songId, this.state.startTime);\n      this.stopTimer();\n      this.startTimer();\n    };\n\n    this.handleSliderChange = (event, value) => {\n      this.setState({\n        startTime: value[0] * 1000,\n        endTime: value[1] * 1000,\n        time: this.state.playing ? this.state.time : value[0] * 1000\n      });\n    };\n\n    this.state = {\n      text: '',\n      startTime: 23000,\n      endTime: 64000,\n      defaultTime: [23000, 64000],\n      time: 23000,\n      start: 0,\n      playing: false,\n      searching: false,\n      filterString: '',\n      searchResults: [],\n      formPage: 1,\n      selectedSong: {}\n    };\n    this.selectSong = this.selectSong.bind(this);\n    this.handleSliderChange = this.handleSliderChange.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n  }\n\n  selectSong(song) {\n    console.log(song);\n    this.setState({\n      searching: false,\n      searchResults: [],\n      filterString: \"\",\n      selectedSong: {\n        name: song.name,\n        artist: song.album.artists[0].name,\n        art: song.album.images[0].url,\n        id: song.id,\n        duration: song.duration_ms\n      }\n    });\n  }\n\n  startTimer() {\n    this.setState({\n      playing: true,\n      time: this.state.startTime,\n      start: Date.now() - this.state.time\n    });\n\n    if (!this.timer) {\n      this.timer = setInterval(() => {\n        this.setState({\n          time: Math.floor(Date.now() - this.state.start)\n        });\n\n        if (this.state.time > this.state.endTime) {\n          this.pauseSong(this.props.accessToken);\n        }\n      }, 1000);\n    }\n  }\n\n  stopTimer() {\n    this.setState({\n      playing: false,\n      time: this.state.startTime\n    });\n    clearInterval(this.timer);\n    this.timer = '';\n  }\n\n  formatTime() {\n    let time = Math.floor(this.state.time / 1000);\n    let minutes = Math.floor(time / 60);\n    let seconds = time - minutes * 60;\n    return minutes + (seconds <= 9 ? \":0\" : \":\") + seconds;\n  }\n\n  submitPost() {\n    console.log(\"post\");\n  }\n\n  render() {\n    if (this.state.filterString === \"\" && this.state.searching) {\n      this.setState({\n        searching: false,\n        searchResults: []\n      });\n    } else if (this.state.searching) {\n      this.updateResults(this.state.filterString);\n    }\n\n    if (this.state.formPage === 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newPost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newPostTop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }, \"Cole\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cancelX\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"newPostText\",\n        type: \"text\",\n        placeholder: \"Share your feelings with the world...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newPostBottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.switchForm();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }, \"Add Song\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newPost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newPostTop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }, this.props.userName), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cancelX\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, \"Search for a song: \"), /*#__PURE__*/React.createElement(Filter, {\n        onTextChange: text => {\n          this.setState({\n            searching: true,\n            filterString: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      })), this.state.searchResults.length > 0 ? this.state.searchResults.map(currentSong => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchResult\",\n        onClick: () => this.selectSong(currentSong),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"searchResultImg\",\n        src: currentSong.album.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"searchResultSong\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 41\n        }\n      }, currentSong.name), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"searchResultArtist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 41\n        }\n      }, currentSong.album.artists[0].name)))) : this.state.selectedSong.name && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"selectedSong\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"searchResultImg\",\n        src: this.state.selectedSong.art,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"searchResultSong\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 37\n        }\n      }, this.state.selectedSong.name), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"searchResultArtist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 37\n        }\n      }, this.state.selectedSong.artist)), /*#__PURE__*/React.createElement(AirbnbSlider, {\n        max: Math.ceil(this.state.selectedSong.duration / 1000),\n        defaultValue: (this.state.defaultTime[0] / 1000, this.state.defaultTime[1] / 1000),\n        valueLabelDisplay: \"auto\",\n        \"aria-labelledby\": \"range-slider\",\n        valueLabelFormat: (value, index) => {\n          let minutes = Math.floor(value / 60);\n          let seconds = value - minutes * 60;\n          return minutes + (seconds <= 9 ? \":0\" : \":\") + seconds;\n        },\n        onChange: this.handleSliderChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"songTime\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 33\n        }\n      }, this.formatTime()), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.playSong(this.props.deviceId, this.props.accessToken, this.state.selectedSong.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 33\n        }\n      }, \"Play Clip\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.pauseSong(this.props.accessToken);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 33\n        }\n      }, \"Pause\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newPostBottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.switchForm();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }, \"Go back\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.submitPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }\n      }, \"Post\")));\n    }\n  }\n\n}\nconst AirbnbSlider = withStyles({\n  root: {\n    color: '#3a8589',\n    height: 3,\n    padding: '13px 0',\n    width: '80%'\n  },\n  thumb: {\n    height: 27,\n    width: 27,\n    backgroundColor: '#fff',\n    border: '1px solid currentColor',\n    marginTop: -12,\n    marginLeft: -13,\n    boxShadow: '#ebebeb 0 2px 2px',\n    '&:focus, &:hover, &$active': {\n      boxShadow: '#ccc 0 2px 3px 1px'\n    },\n    '& .bar': {\n      // display: inline-block !important;\n      height: 9,\n      width: 1,\n      backgroundColor: 'currentColor',\n      marginLeft: 1,\n      marginRight: 1\n    }\n  },\n  active: {},\n  track: {\n    height: 3\n  },\n  rail: {\n    color: '#d8d8d8',\n    opacity: 1,\n    height: 3\n  }\n})(Slider);\n\nclass Filter extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onKeyUp: event => this.props.onTextChange(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/components/NewPost.js"],"names":["React","Component","profilePicturePlaceholder","queryString","getTrack","playAt","pause","search","withStyles","makeStyles","duration","Slider","NewPost","constructor","props","updateResults","filterString","results","accessToken","setState","searching","searchResults","tracks","items","switchForm","nextPage","state","formPage","console","log","startTime","endTime","defaultTime","pauseSong","stopTimer","playSong","deviceId","songId","startTimer","handleSliderChange","event","value","time","playing","text","start","selectedSong","selectSong","bind","song","name","artist","album","artists","art","images","url","id","duration_ms","Date","now","timer","setInterval","Math","floor","clearInterval","formatTime","minutes","seconds","submitPost","render","userName","length","map","currentSong","ceil","index","AirbnbSlider","root","color","height","padding","width","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","marginRight","active","track","rail","opacity","Filter","onTextChange","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause, search } from '../spotifyCalls';\nimport { withStyles, makeStyles, duration } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nexport default class NewPost extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: '',\n            startTime: 23000,\n            endTime: 64000,\n            defaultTime: [23000,64000],\n            time: 23000,\n            start: 0,\n            playing: false,\n            searching: false,\n            filterString: '',\n            searchResults: [],\n            formPage: 1,\n            selectedSong: {}\n        };\n        this.selectSong = this.selectSong.bind(this);\n        this.handleSliderChange = this.handleSliderChange.bind(this);\n        this.startTimer = this.startTimer.bind(this);\n        this.stopTimer = this.stopTimer.bind(this);\n    }\n\n    updateResults = async (filterString) => {\n        const results = await search(this.props.accessToken, filterString);\n        this.setState({ searching: false, searchResults: results.tracks.items });\n    }\n    switchForm = () => {\n        const nextPage = this.state.formPage === 1 ? 2 : 1;\n        console.log(this.state.startTime);\n        console.log(this.state.endTime);\n        \n        this.setState({\n            defaultTime: [this.state.startTime, this.state.endTime],\n            formPage: nextPage\n        });\n    }\n    selectSong(song) {\n        console.log(song);\n        this.setState({\n            searching: false,\n            searchResults: [],\n            filterString: \"\",\n            selectedSong: {\n                name: song.name,\n                artist: song.album.artists[0].name,\n                art: song.album.images[0].url,\n                id: song.id,\n                duration: song.duration_ms\n            }\n        });\n    }\n    pauseSong = async (accessToken) => {\n        await pause(accessToken);\n        this.stopTimer();\n        // console.log(\"pause\");\n    }\n    playSong = async (deviceId, accessToken, songId) => {\n        await playAt(deviceId, accessToken, songId, this.state.startTime);\n        this.stopTimer();\n        this.startTimer();\n    }\n    handleSliderChange = (event, value) => {\n        this.setState({\n            startTime: (value[0] * 1000),\n            endTime: (value[1] * 1000),\n            time: this.state.playing ? this.state.time : (value[0] * 1000)\n        });\n    }\n    startTimer() {\n        this.setState({\n            playing: true,\n            time: this.state.startTime,\n            start: Date.now() - this.state.time\n        });\n        if (!this.timer) {\n            this.timer = setInterval(() => {\n                this.setState({\n                    time: Math.floor(Date.now() - this.state.start)\n                });\n                if (this.state.time > this.state.endTime) {\n                    this.pauseSong(this.props.accessToken);\n                }\n            }, 1000);\n        }\n    }\n    stopTimer() {\n        this.setState({\n            playing: false,\n            time: this.state.startTime\n        });\n        clearInterval(this.timer);\n        this.timer = '';\n    }\n    formatTime() {\n        let time = Math.floor(this.state.time / 1000);\n        let minutes = Math.floor(time / 60);\n        let seconds = time - (minutes * 60);\n        return minutes + (seconds <= 9 ? \":0\" : \":\") + seconds;\n    }\n    submitPost() {\n        console.log(\"post\");\n    }\n    render() {\n        if (this.state.filterString === \"\" && this.state.searching) {\n            this.setState({ searching: false, searchResults: [] });\n        } else if (this.state.searching) {\n            this.updateResults(this.state.filterString);\n        }\n\n        if (this.state.formPage === 1) {\n            return (\n                <div className=\"newPost\">\n                    <div className=\"newPostTop\">\n                        <h1 className=\"username\">Cole</h1>\n                        <div className=\"cancelX\">\n                            <div className=\"line1\"></div>\n                            <div className=\"line2\"></div>\n                        </div>\n                    </div>\n                    <textarea className=\"newPostText\" type=\"text\" placeholder=\"Share your feelings with the world...\"></textarea>\n                    <div className=\"newPostBottom\">\n                        <button onClick={() => {\n                            this.switchForm();\n                        }}>Add Song</button>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"newPost\">\n                    <div className=\"newPostTop\">\n                        <h1 className=\"username\">{this.props.userName}</h1>\n                        <div className=\"cancelX\">\n                            <div className=\"line1\"></div>\n                            <div className=\"line2\"></div>\n                        </div>\n                    </div>\n                    <div className=\"searchBar\">\n                        <h4>Search for a song: </h4>\n                        <Filter onTextChange={text => {\n                            this.setState({ searching: true, filterString: text });\n                        }} />\n                    </div>\n                    {\n                        this.state.searchResults.length > 0 ?\n                            this.state.searchResults.map(currentSong =>\n                                <div className=\"searchResult\" onClick={() => this.selectSong(currentSong)}>\n                                    <img className=\"searchResultImg\" src={currentSong.album.images[0].url} />\n                                    <div>\n                                        <h3 className=\"searchResultSong\">{currentSong.name}</h3>\n                                        <h5 className=\"searchResultArtist\">{currentSong.album.artists[0].name}</h5>\n                                    </div>\n                                </div>\n                            ) :\n                            this.state.selectedSong.name &&\n                            <div className=\"selectedSong\">\n                                <img className=\"searchResultImg\" src={this.state.selectedSong.art} />\n                                <div>\n                                    <h3 className=\"searchResultSong\">{this.state.selectedSong.name}</h3>\n                                    <h5 className=\"searchResultArtist\">{this.state.selectedSong.artist}</h5>\n                                </div>\n                                <AirbnbSlider\n                                    max={Math.ceil(this.state.selectedSong.duration / 1000)}\n                                    defaultValue={this.state.defaultTime[0] / 1000, this.state.defaultTime[1] / 1000}\n                                    valueLabelDisplay=\"auto\"\n                                    aria-labelledby=\"range-slider\"\n                                    valueLabelFormat={(value, index) => {\n                                        let minutes = Math.floor(value / 60);\n                                        let seconds = value - (minutes * 60);\n                                        return minutes + (seconds <= 9 ? \":0\" : \":\") + seconds;\n                                    }}\n                                    onChange={this.handleSliderChange}\n                                />\n                                <h5 className=\"songTime\">{this.formatTime()}</h5>\n                                <button onClick={() => {\n                                    this.playSong(this.props.deviceId, this.props.accessToken, this.state.selectedSong.id);\n                                }}>Play Clip</button>\n                                <button onClick={() => {\n                                    this.pauseSong(this.props.accessToken);\n                                }}>Pause</button>\n                            </div>\n                    }\n                    <div className=\"newPostBottom\">\n                        <button onClick={() => {\n                            this.switchForm();\n                        }}>Go back</button>\n                        <button onClick={this.submitPost}>Post</button>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nconst AirbnbSlider = withStyles({\n    root: {\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n        width: '80%'\n    },\n    thumb: {\n        height: 27,\n        width: 27,\n        backgroundColor: '#fff',\n        border: '1px solid currentColor',\n        marginTop: -12,\n        marginLeft: -13,\n        boxShadow: '#ebebeb 0 2px 2px',\n        '&:focus, &:hover, &$active': {\n            boxShadow: '#ccc 0 2px 3px 1px',\n        },\n        '& .bar': {\n            // display: inline-block !important;\n            height: 9,\n            width: 1,\n            backgroundColor: 'currentColor',\n            marginLeft: 1,\n            marginRight: 1,\n        },\n    },\n    active: {},\n    track: {\n        height: 3,\n    },\n    rail: {\n        color: '#d8d8d8',\n        opacity: 1,\n        height: 3,\n    },\n})(Slider);\n\n\nclass Filter extends Component {\n    render() {\n        return (\n            <div className=\"filter\">\n                <input type=\"text\" onKeyUp={event => this.props.onTextChange(event.target.value)} />\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}