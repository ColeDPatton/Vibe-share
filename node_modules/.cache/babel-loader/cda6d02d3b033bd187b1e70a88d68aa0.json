{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/components/App.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport $ from 'jquery';\nimport Post from './Post';\nimport NewPost from './NewPost';\nimport { loadPosts } from '../backendCalls';\nlet fakeServerData = {\n  user: {\n    device_id: '',\n    name: 'Cole'\n  },\n  posts: [{\n    name: 'Bob',\n    text: 'John spelled feeling wrong lol',\n    songId: '0d28khcov6AiegSCpG5TuT',\n    songName: 'Feel Good Inc.',\n    songArtist: 'Gorrilaz',\n    startTime: '122500'\n  }, {\n    name: 'John',\n    text: 'Felling Good!',\n    songId: '0d28khcov6AiegSCpG5TuT',\n    songName: 'Feel Good Inc.',\n    songArtist: 'Gorrilaz',\n    startTime: '100000'\n  }, {\n    name: 'Alex',\n    text: 'I\\'m Alex',\n    songId: '0yBylQ4liLmENeK82vnHOb',\n    songName: 'Dont Ask Cuz I Dont Know',\n    songArtist: 'Jon Bellion',\n    startTime: '100000'\n  }, {\n    name: 'Emily',\n    text: 'HI!',\n    songId: '6ZzYETKetIfNUsZUb23jgG',\n    songName: 'Day 1',\n    songArtist: 'Honne',\n    startTime: '100000'\n  }]\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handlePlayerStatus = async device_id => {\n      this.setState({\n        deviceId: device_id\n      });\n    };\n\n    this.initializePlayer = () => {\n      let parsed = queryString.parse(window.location.search);\n      let accessToken = parsed.access_token;\n      const name = 'cole';\n      this.player = new window.Spotify.Player({\n        getOAuthToken: cb => {\n          cb(accessToken);\n        },\n        name\n      });\n      this.player.addListener('initialization_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('authentication_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('account_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('playback_error', ({\n        message\n      }) => {\n        console.error(message);\n      }); // Playback status updates\n\n      this.player.addListener('player_state_changed', state => {\n        console.log(state);\n      }); // Ready\n\n      this.player.addListener('ready', ({\n        device_id\n      }) => {\n        this.handlePlayerStatus(device_id);\n        console.log('Ready with Device ID', device_id);\n      }); // Not Ready\n\n      this.player.addListener('not_ready', ({\n        device_id\n      }) => {\n        console.log('Device ID has gone offline', device_id);\n      });\n      this.player.connect();\n    };\n\n    this.state = {\n      serverData: {},\n      deviceId: '',\n      newPost: false\n    };\n    this.clickOuterNewPost = this.clickOuterNewPost.bind(this);\n  }\n\n  componentDidMount() {\n    window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    loadPosts().then(post => this.setState({\n      serverData: {\n        posts: post,\n        user: {\n          name: 'Colee'\n        }\n      }\n    }));\n    this.setState({});\n  }\n\n  clickOuterNewPost() {\n    const showPost = this.state.newPost;\n    this.setState({\n      newPost: !showPost\n    });\n  }\n\n  render() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    let allPosts = this.state.serverData.user && this.state.serverData.posts ? this.state.serverData.posts : []; // this.play(accessToken)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, this.state.newPost && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"outerNewPost\",\n      onMouseDown: this.clickOuterNewPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(NewPost, {\n      deviceId: this.state.deviceId,\n      accessToken: accessToken,\n      onMouseDown: () => {},\n      userName: this.state.serverData.user.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    })), this.state.serverData.user && this.state.deviceId && /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.newPost ? \"blurPosts\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, this.state.serverData.user.name), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        const showPost = this.state.newPost;\n        this.setState({\n          newPost: !showPost\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, this.state.newPost ? \"Cancel\" : \"New Post\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, allPosts.map(currentPost => /*#__PURE__*/React.createElement(Post, {\n      post: currentPost,\n      deviceId: this.state.deviceId,\n      accessToken: accessToken,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 44\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/colepatton/vibin/src/components/App.js"],"names":["React","Component","profilePicturePlaceholder","queryString","$","Post","NewPost","loadPosts","fakeServerData","user","device_id","name","posts","text","songId","songName","songArtist","startTime","App","constructor","handlePlayerStatus","setState","deviceId","initializePlayer","parsed","parse","window","location","search","accessToken","access_token","player","Spotify","Player","getOAuthToken","cb","addListener","message","console","error","state","log","connect","serverData","newPost","clickOuterNewPost","bind","componentDidMount","onSpotifyWebPlaybackSDKReady","then","post","showPost","render","allPosts","map","currentPost"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport $ from 'jquery';\nimport Post from './Post';\nimport NewPost from './NewPost';\nimport { loadPosts } from '../backendCalls';\n\nlet fakeServerData = {\n  user: {\n    device_id: '',\n    name: 'Cole'\n  },\n  posts:\n    [{\n      name: 'Bob',\n      text: 'John spelled feeling wrong lol',\n      songId: '0d28khcov6AiegSCpG5TuT',\n      songName: 'Feel Good Inc.',\n      songArtist: 'Gorrilaz',\n      startTime: '122500'\n    },\n    {\n      name: 'John',\n      text: 'Felling Good!',\n      songId: '0d28khcov6AiegSCpG5TuT',\n      songName: 'Feel Good Inc.',\n      songArtist: 'Gorrilaz',\n      startTime: '100000'\n    },\n    {\n      name: 'Alex',\n      text: 'I\\'m Alex',\n      songId: '0yBylQ4liLmENeK82vnHOb',\n      songName: 'Dont Ask Cuz I Dont Know',\n      songArtist: 'Jon Bellion',\n      startTime: '100000'\n    },\n    {\n      name: 'Emily',\n      text: 'HI!',\n      songId: '6ZzYETKetIfNUsZUb23jgG',\n      songName: 'Day 1',\n      songArtist: 'Honne',\n      startTime: '100000'\n    }]\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverData: {},\n      deviceId: '',\n      newPost: false\n    };\n    this.clickOuterNewPost = this.clickOuterNewPost.bind(this);\n\n  }\n  handlePlayerStatus = async (device_id) => {\n    this.setState({\n      deviceId: device_id,\n    });\n  };\n\n  // play = async (accessToken) => {\n  //   const devices = await getDevices(accessToken);\n  //   if (devices.devices.length > 0) {\n  //     let device_id = devices.devices[0].id;\n  //     await playAt(device_id, accessToken);\n  //   }\n  // }\n\n  initializePlayer = () => {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    const name = 'cole';\n\n    this.player = new window.Spotify.Player({\n      getOAuthToken: cb => {\n        cb(accessToken);\n      },\n      name\n    });\n\n    this.player.addListener('initialization_error', ({ message }) => { console.error(message); });\n    this.player.addListener('authentication_error', ({ message }) => { console.error(message); });\n    this.player.addListener('account_error', ({ message }) => { console.error(message); });\n    this.player.addListener('playback_error', ({ message }) => { console.error(message); });\n\n    // Playback status updates\n    this.player.addListener('player_state_changed', state => { console.log(state); });\n\n    // Ready\n    this.player.addListener('ready', ({ device_id }) => {\n      this.handlePlayerStatus(device_id);\n      console.log('Ready with Device ID', device_id);\n    });\n\n    // Not Ready\n    this.player.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    this.player.connect();\n  };\n\n  componentDidMount() {\n    window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    loadPosts().then(post => this.setState({\n      serverData: {\n        posts: post,\n        user: {\n          name: 'Colee'\n        }\n      }\n    }));\n    this.setState({\n    });\n  }\n\n  clickOuterNewPost() {\n    const showPost = this.state.newPost;\n    this.setState({\n      newPost: !showPost\n    });\n  }\n\n  render() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n\n    let allPosts =\n      (this.state.serverData.user && this.state.serverData.posts) ?\n        this.state.serverData.posts : [];\n    // this.play(accessToken)\n\n    return (\n      <div className=\"App\">\n        {this.state.newPost &&\n          <div>\n            <div className=\"outerNewPost\" onMouseDown={this.clickOuterNewPost}></div>\n            <NewPost deviceId={this.state.deviceId} accessToken={accessToken} onMouseDown={() => { }} userName={this.state.serverData.user.name} />\n          </div>\n        }\n        {\n          (this.state.serverData.user && this.state.deviceId) &&\n          <div className={this.state.newPost ? \"blurPosts\" : \"\"}>\n            <h1>{this.state.serverData.user.name}</h1>\n            <button onClick={() => {\n              const showPost = this.state.newPost;\n              this.setState({\n                newPost: !showPost\n              });\n            }}>{this.state.newPost ? \"Cancel\" : \"New Post\"}</button>\n            <div className=\"posts\">\n              {allPosts.map(currentPost => <Post post={currentPost} deviceId={this.state.deviceId} accessToken={accessToken} />)}\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}