{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/components/Post.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause } from '../spotifyCalls';\nimport { useHistory, Link } from 'react-router-dom';\nimport { loadLikes, likePost, deleteLike } from '../backendCalls';\n\nclass PostInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.redirectToUserProfile = this.redirectToUserProfile.bind(this);\n  }\n\n  redirectToUserProfile() {\n    window.location.href = window.location.href + '?username=' + this.props.name;\n  }\n\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profilePic\",\n      src: profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"username\",\n      onClick: this.redirectToUserProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"postText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, text)));\n  }\n\n}\n\nclass PostMusic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.routeToSpotify = () => {\n      const history = useHistory();\n      history.push('https://open.spotify.com/track/' + this.props.songId);\n    };\n\n    this.loadTrack = async () => {\n      const trackData = await getTrack(this.props.accessToken, this.props.songId);\n      const albumCover = trackData.album.images[0].url;\n      this.setState({\n        picLoaded: true,\n        albumUrl: albumCover,\n        songName: this.props.songName\n      });\n    };\n\n    this.state = {\n      picLoaded: false,\n      albumUrl: '',\n      songName: ''\n    };\n    this.routeToSpotify = this.routeToSpotify.bind(this);\n  }\n\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n\n    if (this.props.loggedIn && this.state.songName != this.props.songName || this.props.loggedIn && !this.state.picLoaded) {\n      this.loadTrack();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postMusic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"albumImg\",\n      onClick: event => window.location.href = 'https://open.spotify.com/track/' + this.props.songId,\n      src: this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songCredit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"songName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, songName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, songArtist)));\n  }\n\n}\n\nexport default class Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pauseSong = async startTime => {\n      pause(this.props.accessToken);\n      this.stopTimer(startTime);\n    };\n\n    this.playSong = async (songId, startTime, endTime) => {\n      playAt(this.props.deviceId, this.props.accessToken, songId, startTime);\n      clearInterval(this.timer);\n      this.timer = '';\n      this.startTimer(startTime, endTime);\n    };\n\n    this.startTimer = async (startTime, endTime) => {\n      this.setState({\n        time: startTime,\n        start: Date.now() - startTime\n      });\n\n      if (!this.timer) {\n        this.timer = setInterval(() => {\n          this.setState({\n            time: Math.floor(Date.now() - this.state.start)\n          });\n\n          if (this.state.time > endTime) {\n            this.pauseSong(startTime);\n          }\n        }, 1000);\n      }\n    };\n\n    this.stopTimer = async startTime => {\n      this.setState({\n        time: startTime\n      });\n      clearInterval(this.timer);\n      this.timer = '';\n    };\n\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.clickedLikePost = this.clickedLikePost.bind(this);\n    this.state = {\n      playing: false,\n      time: 0,\n      start: 0,\n      accessToken: '',\n      likeCount: '',\n      likedPost: false,\n      muted: false\n    };\n  }\n\n  componentDidMount() {\n    let liked = false;\n    loadLikes().then(likes => {\n      likes.forEach(like => {\n        if (like.postId === this.props.post._id && like.username === this.props.post.name) liked = true;\n      });\n    }).then(() => {\n      this.setState({\n        accessToken: this.props.accessToken,\n        likeCount: this.props.post.likeCount,\n        liked: liked\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.accessToken != prevProps.accessToken) this.setState({\n      accessToken: this.props.accessToken\n    });\n    if (this.props.muted != prevProps.muted) this.setState({\n      muted: this.props.muted\n    });\n  }\n\n  handleMouseHover() {\n    if (!this.state.muted) this.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n  }\n\n  handleMouseLeave() {\n    if (!this.state.muted) setTimeout(() => {\n      this.pauseSong(this.props.post.startTime);\n    }, 100);\n  }\n\n  clickedLikePost() {\n    if (!this.state.liked) {\n      likePost(this.props.post.name, this.props.post._id);\n      this.setState({\n        likeCount: this.state.likeCount + 1,\n        liked: true\n      });\n    } else {\n      deleteLike(this.props.post.name, this.props.post._id);\n      this.setState({\n        likeCount: this.state.likeCount - 1,\n        liked: false\n      });\n    }\n  }\n\n  render() {\n    let post = this.props.post;\n\n    if (this.state.accessToken) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post\",\n        onMouseEnter: this.handleMouseHover,\n        onMouseLeave: this.handleMouseLeave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"postInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PostInfo, {\n        name: post.name,\n        text: post.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(PostMusic, {\n        songName: post.songName,\n        songArtist: post.songArtist,\n        songId: post.songId,\n        loggedIn: true,\n        accessToken: this.props.accessToken,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"likeButtonContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"likeButton myButtonBlue\",\n        onClick: this.clickedLikePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }\n      }, this.state.liked ? 'Liked' : 'Like'), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }\n      }, this.state.likeCount)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"postInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PostInfo, {\n        name: post.name,\n        text: post.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(PostMusic, {\n        songName: post.songName,\n        songArtist: post.songArtist,\n        songId: post.songId,\n        loggedIn: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"likeButtonContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"likeButton myButtonBlue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }\n      }, this.state.likeCount)));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/components/Post.js"],"names":["React","Component","profilePicturePlaceholder","queryString","getTrack","playAt","pause","useHistory","Link","loadLikes","likePost","deleteLike","PostInfo","constructor","props","redirectToUserProfile","bind","window","location","href","name","render","text","PostMusic","routeToSpotify","history","push","songId","loadTrack","trackData","accessToken","albumCover","album","images","url","setState","picLoaded","albumUrl","songName","state","songArtist","loggedIn","event","Post","pauseSong","startTime","stopTimer","playSong","endTime","deviceId","clearInterval","timer","startTimer","time","start","Date","now","setInterval","Math","floor","handleMouseHover","handleMouseLeave","clickedLikePost","playing","likeCount","likedPost","muted","componentDidMount","liked","then","likes","forEach","like","postId","post","_id","username","componentDidUpdate","prevProps","stopTime","setTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause } from '../spotifyCalls';\nimport { useHistory, Link } from 'react-router-dom';\nimport { loadLikes, likePost, deleteLike } from '../backendCalls';\n\nclass PostInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.redirectToUserProfile = this.redirectToUserProfile.bind(this);\n    }\n    redirectToUserProfile() {\n        window.location.href = window.location.href + '?username=' + this.props.name;\n    }\n    render() {\n        let name = this.props.name;\n        let text = this.props.text;\n        return (\n            <div className=\"postInfo\">\n                <img className=\"profilePic\" src={profilePicturePlaceholder}></img>\n                <div>\n                    <h3 className=\"username\" onClick={this.redirectToUserProfile}>{name}</h3>\n                    <p className=\"postText\">{text}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass PostMusic extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            picLoaded: false,\n            albumUrl: '',\n            songName: ''\n        };\n        this.routeToSpotify = this.routeToSpotify.bind(this);\n    }\n    routeToSpotify = () => {\n        const history = useHistory();\n        history.push('https://open.spotify.com/track/' + this.props.songId);\n    }\n    loadTrack = async () => {\n        const trackData = await getTrack(this.props.accessToken, this.props.songId);\n        const albumCover = trackData.album.images[0].url;\n        this.setState({\n            picLoaded: true,\n            albumUrl: albumCover,\n            songName: this.props.songName\n        });\n    }\n    render() {\n        let songName = this.props.songName;\n        let songArtist = this.props.songArtist;\n        if ((this.props.loggedIn && (this.state.songName != this.props.songName)) || (this.props.loggedIn && !this.state.picLoaded)) {\n            this.loadTrack();\n        }\n        return (\n            <div className=\"postMusic\">\n                <img className=\"albumImg\"\n                    onClick={event => window.location.href = 'https://open.spotify.com/track/' + this.props.songId}\n                    src={this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder}>\n                </img>\n                <div className=\"songCredit\">\n                    <h4 className=\"songName\">{songName}</h4>\n                    <p className=\"artists\">{songArtist}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class Post extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.clickedLikePost = this.clickedLikePost.bind(this);\n        this.state = {\n            playing: false,\n            time: 0,\n            start: 0,\n            accessToken: '',\n            likeCount: '',\n            likedPost: false,\n            muted: false\n        };\n    }\n    componentDidMount() {\n        let liked = false;\n        loadLikes().then(likes => {\n            likes.forEach(like => {\n                if (like.postId === this.props.post._id && like.username === this.props.post.name)\n                    liked = true;\n            });\n        }).then(() => {\n            this.setState({\n                accessToken: this.props.accessToken,\n                likeCount: this.props.post.likeCount,\n                liked: liked\n            });\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.accessToken != prevProps.accessToken)\n            this.setState({ accessToken: this.props.accessToken });\n        if (this.props.muted != prevProps.muted)\n            this.setState({ muted: this.props.muted });\n    }\n    pauseSong = async (startTime) => {\n        pause(this.props.accessToken)\n        this.stopTimer(startTime);\n    }\n    playSong = async (songId, startTime, endTime) => {\n        playAt(this.props.deviceId, this.props.accessToken, songId, startTime);\n        clearInterval(this.timer);\n        this.timer = '';\n        this.startTimer(startTime, endTime);\n    }\n    startTimer = async (startTime, endTime) => {\n        this.setState({\n            time: startTime,\n            start: Date.now() - startTime\n        });\n        if (!this.timer) {\n            this.timer = setInterval(() => {\n                this.setState({\n                    time: Math.floor(Date.now() - this.state.start),\n                });\n                if (this.state.time > endTime) {\n                    this.pauseSong(startTime);\n                }\n            }, 1000);\n        }\n    }\n    stopTimer = async (startTime) => {\n        this.setState({\n            time: startTime,\n        });\n        clearInterval(this.timer);\n        this.timer = '';\n    }\n    handleMouseHover() {\n        if (!this.state.muted)\n            this.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n    }\n    handleMouseLeave() {\n        if (!this.state.muted)\n            setTimeout((() => {\n                this.pauseSong(this.props.post.startTime);\n            }), 100);\n    }\n    clickedLikePost() {\n        if (!this.state.liked) {\n            likePost(this.props.post.name, this.props.post._id);\n            this.setState({ likeCount: (this.state.likeCount + 1), liked: true });\n        } else {\n            deleteLike(this.props.post.name, this.props.post._id);\n            this.setState({ likeCount: (this.state.likeCount - 1), liked: false });\n        }\n    }\n    render() {\n        let post = this.props.post;\n        if (this.state.accessToken) {\n            return (\n                <div className=\"post\" onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseLeave}>\n                    <div className=\"postInner\">\n                        <PostInfo name={post.name} text={post.text} />\n                        <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} loggedIn={true} accessToken={this.props.accessToken} />\n                    </div>\n                    <div className='likeButtonContainer'>\n                        <button className='likeButton myButtonBlue' onClick={this.clickedLikePost}>\n                            {this.state.liked ? 'Liked' : 'Like'}\n                        </button>\n                        <p>{this.state.likeCount}</p>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"post\">\n                    <div className='postInner'>\n                        <PostInfo name={post.name} text={post.text} />\n                        <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} loggedIn={false} />\n                    </div>\n                    <div className='likeButtonContainer'>\n                        <button className='likeButton myButtonBlue'>Like</button>\n                        <p>{this.state.likeCount}</p>\n                    </div>\n                </div>\n            );\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}