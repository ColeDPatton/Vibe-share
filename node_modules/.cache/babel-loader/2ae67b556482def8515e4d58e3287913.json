{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/pages/UserProfile.js\";\nimport React, { Component } from 'react';\nimport queryString from 'query-string';\nimport '../style/App.css';\nimport { loadPosts, loadUserFollowing, newUser } from '../backendCalls';\n\nclass UserProfile extends Component {\n  constructor() {\n    super();\n\n    this.initializePlayer = () => {\n      const name = this.state.serverData.user.name + ' vibes';\n      this.player = new window.Spotify.Player({\n        getOAuthToken: cb => {\n          cb(this.state.accessToken);\n        },\n        name\n      });\n      this.player.addListener('initialization_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('authentication_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('account_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('playback_error', ({\n        message\n      }) => {\n        console.error(message);\n      }); // Playback status updates\n\n      this.player.addListener('player_state_changed', state => {\n        console.log(state);\n      }); // Ready\n\n      this.player.addListener('ready', ({\n        device_id\n      }) => {\n        this.handlePlayerStatus(device_id);\n        console.log('Ready with Device ID', device_id);\n      }); // Not Ready\n\n      this.player.addListener('not_ready', ({\n        device_id\n      }) => {\n        console.log('Device ID has gone offline', device_id);\n      });\n      this.player.connect();\n    };\n\n    this.state = {\n      deviceId: '',\n      accessToken: '',\n      userProfile: '',\n      serverData: {},\n      muted: false\n    };\n    this.getFollowing = this.getFollowing.bind(this);\n    this.newUserButton = this.newUserButton.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = queryString.parse(window.location.search);\n\n    if (parsed.access_token) {\n      let accessToken = parsed.access_token;\n      getUser(accessToken).then(user => {\n        loadPosts().then(posts => {\n          let postsWithLikeCount = [];\n          loadLikes().then(likes => {\n            posts.forEach(post => {\n              let likeCount = 0;\n              likes.forEach(like => {\n                if (post._id === like.postId) {\n                  likeCount++;\n                }\n              });\n              post = { ...post,\n                likeCount: likeCount\n              };\n              postsWithLikeCount.push(post);\n            });\n            this.setState({\n              accessToken: accessToken,\n              serverData: {\n                posts: postsWithLikeCount,\n                user: {\n                  name: user.display_name\n                }\n              }\n            });\n          }).then(window.onSpotifyWebPlaybackSDKReady = this.initializePlayer);\n        });\n      });\n    } else {\n      loadPosts().then(posts => {\n        let postsWithLikeCount = [];\n        loadLikes().then(likes => {\n          posts.forEach(post => {\n            let likeCount = 0;\n            likes.forEach(like => {\n              if (post._id === like.postId) {\n                likeCount++;\n              }\n            });\n            post = { ...post,\n              likeCount: likeCount\n            };\n            postsWithLikeCount.push(post);\n          });\n          this.setState({\n            serverData: {\n              posts: postsWithLikeCount\n            }\n          });\n        });\n      });\n    }\n  }\n\n  getFollowing() {\n    loadUserFollowing(this.state.username);\n  }\n\n  newUserButton() {\n    newUser(this.state.username);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"Vibe Share\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttonContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"myButtonWhite\",\n      onClick: this.handleLogInButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, this.state.accessToken ? 'Log Out' : 'Log In'))), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        marginTop: '5em'\n      },\n      className: \"myButtonWhite\",\n      onClick: this.getFollowing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"button\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        marginTop: '5em'\n      },\n      className: \"myButtonWhite\",\n      onClick: this.newUserButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \"newUser\"));\n  }\n\n}\n\nexport default UserProfile;","map":{"version":3,"sources":["/Users/colepatton/vibin/src/pages/UserProfile.js"],"names":["React","Component","queryString","loadPosts","loadUserFollowing","newUser","UserProfile","constructor","initializePlayer","name","state","serverData","user","player","window","Spotify","Player","getOAuthToken","cb","accessToken","addListener","message","console","error","log","device_id","handlePlayerStatus","connect","deviceId","userProfile","muted","getFollowing","bind","newUserButton","componentDidMount","parsed","parse","location","search","access_token","getUser","then","posts","postsWithLikeCount","loadLikes","likes","forEach","post","likeCount","like","_id","postId","push","setState","display_name","onSpotifyWebPlaybackSDKReady","username","render","handleLogInButton","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport '../style/App.css';\nimport { loadPosts, loadUserFollowing, newUser } from '../backendCalls'\n\nclass UserProfile extends Component {\n    constructor() {\n        super();\n        this.state = {\n            deviceId: '',\n            accessToken: '',\n            userProfile: '',\n            serverData: {},\n            muted: false\n        };\n        this.getFollowing = this.getFollowing.bind(this);\n        this.newUserButton = this.newUserButton.bind(this);\n    }\n    initializePlayer = () => {\n        const name = this.state.serverData.user.name + ' vibes';\n\n        this.player = new window.Spotify.Player({\n            getOAuthToken: cb => {\n                cb(this.state.accessToken);\n            },\n            name\n        });\n\n        this.player.addListener('initialization_error', ({ message }) => { console.error(message); });\n        this.player.addListener('authentication_error', ({ message }) => { console.error(message); });\n        this.player.addListener('account_error', ({ message }) => { console.error(message); });\n        this.player.addListener('playback_error', ({ message }) => { console.error(message); });\n\n        // Playback status updates\n        this.player.addListener('player_state_changed', state => { console.log(state); });\n\n        // Ready\n        this.player.addListener('ready', ({ device_id }) => {\n            this.handlePlayerStatus(device_id);\n            console.log('Ready with Device ID', device_id);\n        });\n\n        // Not Ready\n        this.player.addListener('not_ready', ({ device_id }) => {\n            console.log('Device ID has gone offline', device_id);\n        });\n\n        this.player.connect();\n    };\n    componentDidMount() {\n        let parsed = queryString.parse(window.location.search);\n        if (parsed.access_token) {\n            let accessToken = parsed.access_token;\n            getUser(accessToken).then(user => {\n                loadPosts().then(posts => {\n                    let postsWithLikeCount = [];\n                    loadLikes().then(likes => {\n                        posts.forEach(post => {\n                            let likeCount = 0;\n                            likes.forEach(like => {\n                                if (post._id === like.postId) {\n                                    likeCount++;\n                                }\n                            });\n                            post = {\n                                ...post,\n                                likeCount: likeCount\n                            }\n                            postsWithLikeCount.push(post);\n                        });\n                        this.setState({\n                            accessToken: accessToken,\n                            serverData: {\n                                posts: postsWithLikeCount,\n                                user: {\n                                    name: user.display_name\n                                }\n                            }\n                        });\n                    }).then(window.onSpotifyWebPlaybackSDKReady = this.initializePlayer);\n                });\n            });\n        } else {\n            loadPosts().then(posts => {\n                let postsWithLikeCount = [];\n                loadLikes().then(likes => {\n                    posts.forEach(post => {\n                        let likeCount = 0\n                        likes.forEach(like => {\n                            if (post._id === like.postId) {\n                                likeCount++;\n                            }\n                        })\n                        post = {\n                            ...post,\n                            likeCount: likeCount\n                        }\n                        postsWithLikeCount.push(post);\n                    })\n                    this.setState({\n                        serverData: {\n                            posts: postsWithLikeCount,\n                        }\n                    })\n                })\n            })\n        }\n    }\n    getFollowing() {\n        loadUserFollowing(this.state.username);\n    }\n    newUserButton() {\n        newUser(this.state.username);\n    }\n    render() {\n        return (\n            <div>\n                <div className='header'>\n                    <div>\n                        <h1>Vibe Share</h1>\n                    </div>\n                    <div className='buttonContainer'>\n                        <button className='myButtonWhite' onClick={this.handleLogInButton}>{this.state.accessToken ? 'Log Out' : 'Log In'}</button>\n                    </div>\n                </div>\n                <button style={{ marginTop: '5em' }} className='myButtonWhite' onClick={this.getFollowing}>button</button>\n                <button style={{ marginTop: '5em' }} className='myButtonWhite' onClick={this.newUserButton}>newUser</button>\n            </div>\n        )\n    }\n}\n\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}