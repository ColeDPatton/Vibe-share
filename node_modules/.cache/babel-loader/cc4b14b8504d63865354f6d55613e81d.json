{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/App.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from './img/profilePicturePlaceholder.jpg';\nimport './App.css';\nimport queryString from 'query-string';\nimport $ from 'jquery';\nlet fakeServerData = {\n  user: {\n    device_id: '',\n    name: 'Cole'\n  },\n  posts: [{\n    name: 'Bob',\n    text: 'John spelled feeling wrong lol',\n    songId: '0d28khcov6AiegSCpG5TuT',\n    songName: 'Feel Good Inc.',\n    songArtist: 'Gorrilaz'\n  }, {\n    name: 'John',\n    text: 'Felling Good!',\n    songId: '0d28khcov6AiegSCpG5TuT',\n    songName: 'Feel Good Inc.',\n    songArtist: 'Gorrilaz'\n  }, {\n    name: 'Alex',\n    text: 'I\\'m Alex',\n    songId: '0yBylQ4liLmENeK82vnHOb',\n    songName: 'Dont Ask Cuz I Dont Know',\n    songArtist: 'Jon Bellion'\n  }, {\n    name: 'Emily',\n    text: 'HI!',\n    songId: '6ZzYETKetIfNUsZUb23jgG',\n    songName: 'Day 1',\n    songArtist: 'Honne'\n  }]\n};\n\nclass PostInfo extends Component {\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profilePic\",\n      src: profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"postText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, text)));\n  }\n\n}\n\nclass PostMusic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadTrack = async () => {\n      let parsed = queryString.parse(window.location.search);\n      let accessToken = parsed.access_token;\n      const trackData = await getTrack(accessToken, this.props.songId);\n      console.log('trackData: ');\n      console.log(trackData); // const albumCover = trackData.album.images[0].url;\n      // this.setState({\n      //   picLoaded: true,\n      //   albumUrl: albumCover\n      // });\n    };\n\n    this.state = {\n      picLoaded: false,\n      albumUrl: ''\n    };\n  }\n\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n\n    if (!this.state.picLoaded) {\n      this.loadTrack();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postMusic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"albumImg\",\n      src: this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"songName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, songName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, songArtist));\n  }\n\n}\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.state = {\n      playing: false\n    };\n  }\n\n  handleMouseHover() {\n    console.log(\"HOVER\");\n    this.setState({\n      playing: true\n    });\n  }\n\n  handleMouseLeave() {\n    console.log(\"Leave\");\n    this.setState({\n      playing: false\n    });\n  }\n\n  render() {\n    let post = this.props.post;\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n\n    if (this.state.playing) {\n      playAt(this.props.deviceId, accessToken, this.props.post.songId);\n    } else {\n      pause(accessToken);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PostInfo, {\n      name: post.name,\n      text: post.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PostMusic, {\n      songName: post.songName,\n      songArtist: post.songArtist,\n      songId: post.songId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nasync function playAt(device_id, token, songId) {\n  $.ajax({\n    url: \"https://api.spotify.com/v1/me/player/play?device_id=\" + device_id,\n    type: \"PUT\",\n    data: '{\"uris\": [\"' + 'spotify:track:' + songId + '\"], \"position_ms\": ' + '100000' + '}',\n    beforeSend: function (xhr) {\n      xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n    },\n    success: function (data) {\n      console.log(data);\n    }\n  });\n}\n\nasync function getDevices(token) {\n  return fetch('https://api.spotify.com/v1/me/player/devices', {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(d => d.json());\n}\n\nasync function pause(token) {\n  return fetch('https://api.spotify.com/v1/me/player/pause', {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    method: 'PUT'\n  });\n}\n\nasync function getTrack(token, trackId) {\n  const url = 'https://api.spotify.com/v1/tracks/' + trackId;\n  return fetch(url, {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(d => d.json());\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handlePlayerStatus = async device_id => {\n      this.setState({\n        deviceId: device_id\n      });\n    };\n\n    this.play = async accessToken => {\n      const devices = await getDevices(accessToken);\n\n      if (devices.devices.length > 0) {\n        let device_id = devices.devices[0].id;\n        await playAt(device_id, accessToken);\n      }\n    };\n\n    this.initializePlayer = () => {\n      let parsed = queryString.parse(window.location.search);\n      let accessToken = parsed.access_token;\n      const name = 'cole';\n      this.player = new window.Spotify.Player({\n        getOAuthToken: cb => {\n          cb(accessToken);\n        },\n        name\n      });\n      this.player.addListener('initialization_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('authentication_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('account_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('playback_error', ({\n        message\n      }) => {\n        console.error(message);\n      }); // Playback status updates\n\n      this.player.addListener('player_state_changed', state => {\n        console.log(state);\n      }); // Ready\n\n      this.player.addListener('ready', ({\n        device_id\n      }) => {\n        this.handlePlayerStatus(device_id);\n        console.log('Ready with Device ID', device_id);\n      }); // Not Ready\n\n      this.player.addListener('not_ready', ({\n        device_id\n      }) => {\n        console.log('Device ID has gone offline', device_id);\n      });\n      this.player.connect();\n    };\n\n    this.state = {\n      serverData: {},\n      deviceId: ''\n    };\n  }\n\n  componentDidMount() {\n    window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    this.setState({\n      serverData: fakeServerData\n    });\n  }\n\n  render() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    let allPosts = this.state.serverData.user && this.state.serverData.posts ? this.state.serverData.posts : []; // this.play(accessToken)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }\n    }, this.state.serverData.user && this.state.deviceId && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, this.state.serverData.user.name), allPosts.map(currentPost => /*#__PURE__*/React.createElement(Post, {\n      post: currentPost,\n      deviceId: this.state.deviceId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 42\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/colepatton/vibin/src/App.js"],"names":["React","Component","profilePicturePlaceholder","queryString","$","fakeServerData","user","device_id","name","posts","text","songId","songName","songArtist","PostInfo","render","props","PostMusic","constructor","loadTrack","parsed","parse","window","location","search","accessToken","access_token","trackData","getTrack","console","log","state","picLoaded","albumUrl","Post","handleMouseHover","bind","handleMouseLeave","playing","setState","post","playAt","deviceId","pause","token","ajax","url","type","data","beforeSend","xhr","setRequestHeader","success","getDevices","fetch","headers","method","then","d","json","trackId","App","handlePlayerStatus","play","devices","length","id","initializePlayer","player","Spotify","Player","getOAuthToken","cb","addListener","message","error","connect","serverData","componentDidMount","onSpotifyWebPlaybackSDKReady","allPosts","map","currentPost"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from './img/profilePicturePlaceholder.jpg';\nimport './App.css';\nimport queryString from 'query-string';\nimport $ from 'jquery';\n\nlet fakeServerData = {\n  user: {\n    device_id: '',\n    name: 'Cole'\n  },\n  posts:\n    [{\n      name: 'Bob',\n      text: 'John spelled feeling wrong lol',\n      songId: '0d28khcov6AiegSCpG5TuT',\n      songName: 'Feel Good Inc.',\n      songArtist: 'Gorrilaz'\n    },\n    {\n      name: 'John',\n      text: 'Felling Good!',\n      songId: '0d28khcov6AiegSCpG5TuT',\n      songName: 'Feel Good Inc.',\n      songArtist: 'Gorrilaz'\n    },\n    {\n      name: 'Alex',\n      text: 'I\\'m Alex',\n      songId: '0yBylQ4liLmENeK82vnHOb',\n      songName: 'Dont Ask Cuz I Dont Know',\n      songArtist: 'Jon Bellion'\n    },\n    {\n      name: 'Emily',\n      text: 'HI!',\n      songId: '6ZzYETKetIfNUsZUb23jgG',\n      songName: 'Day 1',\n      songArtist: 'Honne'\n    }]\n}\n\nclass PostInfo extends Component {\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    return (\n      <div className=\"postInfo\">\n        <img className=\"profilePic\" src={profilePicturePlaceholder}></img>\n        <div>\n          <h3 className=\"username\">{name}</h3>\n          <p className=\"postText\">{text}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass PostMusic extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      picLoaded: false,\n      albumUrl: ''\n    };\n  }\n  loadTrack = async () => {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    const trackData = await getTrack(accessToken, this.props.songId);\n    console.log('trackData: ');\n    console.log(trackData);\n\n    // const albumCover = trackData.album.images[0].url;\n    // this.setState({\n    //   picLoaded: true,\n    //   albumUrl: albumCover\n    // });\n  }\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n    if (!this.state.picLoaded) {\n      this.loadTrack();\n    }\n    return (\n      <div className=\"postMusic\">\n        <img className=\"albumImg\" src={this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder}></img>\n        <h4 className=\"songName\">{songName}</h4>\n        <p className=\"artists\">{songArtist}</p>\n      </div>\n    );\n  }\n}\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.state = {\n      playing: false\n    };\n  }\n  handleMouseHover() {\n    console.log(\"HOVER\");\n    this.setState({\n      playing: true\n    });\n  }\n  handleMouseLeave() {\n    console.log(\"Leave\");\n    this.setState({\n      playing: false\n    });\n  }\n  render() {\n    let post = this.props.post;\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    if (this.state.playing) {\n      playAt(this.props.deviceId, accessToken, this.props.post.songId);\n    } else {\n      pause(accessToken);\n    }\n    return (\n      <div className=\"post\" onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseLeave}>\n        <PostInfo name={post.name} text={post.text} />\n        <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} />\n      </div>\n    );\n  }\n}\n\nasync function playAt(device_id, token, songId) {\n  $.ajax({\n    url: \"https://api.spotify.com/v1/me/player/play?device_id=\" + device_id,\n    type: \"PUT\",\n    data: '{\"uris\": [\"' + 'spotify:track:' + songId + '\"], \"position_ms\": ' + '100000' + '}',\n    beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer ' + token); },\n    success: function (data) {\n      console.log(data);\n    }\n  });\n}\n\nasync function getDevices(token) {\n  return fetch('https://api.spotify.com/v1/me/player/devices', {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json',\n    },\n    method: 'GET',\n  }).then(d => d.json());\n}\n\nasync function pause(token) {\n  return fetch('https://api.spotify.com/v1/me/player/pause', {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json',\n    },\n    method: 'PUT',\n  });\n}\n\nasync function getTrack(token, trackId) {\n  const url = 'https://api.spotify.com/v1/tracks/' + trackId;\n  return fetch(url, {\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Content-Type': 'application/json',\n    },\n    method: 'GET',\n  }).then(d => d.json());\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverData: {},\n      deviceId: ''\n    };\n  }\n  handlePlayerStatus = async (device_id) => {\n    this.setState({\n      deviceId: device_id,\n    });\n  };\n\n  play = async (accessToken) => {\n    const devices = await getDevices(accessToken);\n    if (devices.devices.length > 0) {\n      let device_id = devices.devices[0].id;\n      await playAt(device_id, accessToken);\n    }\n  }\n\n  initializePlayer = () => {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    const name = 'cole';\n\n    this.player = new window.Spotify.Player({\n      getOAuthToken: cb => {\n        cb(accessToken);\n      },\n      name\n    });\n\n    this.player.addListener('initialization_error', ({ message }) => { console.error(message); });\n    this.player.addListener('authentication_error', ({ message }) => { console.error(message); });\n    this.player.addListener('account_error', ({ message }) => { console.error(message); });\n    this.player.addListener('playback_error', ({ message }) => { console.error(message); });\n\n    // Playback status updates\n    this.player.addListener('player_state_changed', state => { console.log(state); });\n\n    // Ready\n    this.player.addListener('ready', ({ device_id }) => {\n      this.handlePlayerStatus(device_id);\n      console.log('Ready with Device ID', device_id);\n    });\n\n    // Not Ready\n    this.player.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    this.player.connect();\n  };\n\n  componentDidMount() {\n    window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    this.setState({\n      serverData: fakeServerData\n    });\n  }\n  render() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n\n    let allPosts =\n      (this.state.serverData.user && this.state.serverData.posts) ?\n        this.state.serverData.posts : [];\n    // this.play(accessToken)\n\n    return (\n      <div className=\"App\">\n        {\n          (this.state.serverData.user && this.state.deviceId) &&\n          <div>\n            <h1>{this.state.serverData.user.name}</h1>\n            {allPosts.map(currentPost => <Post post={currentPost} deviceId={this.state.deviceId} />)}\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}