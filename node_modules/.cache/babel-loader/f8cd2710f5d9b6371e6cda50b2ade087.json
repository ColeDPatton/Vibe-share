{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/components/Post.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause, getUser } from '../spotifyCalls';\nimport { useHistory, Link } from 'react-router-dom';\nimport { loadLikes, likePost, deleteLike } from '../backendCalls';\n\nclass PostInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadUserImg = async () => {\n      let parsed = queryString.parse(window.location.search);\n      let accessToken = '';\n\n      if (parsed.access_token) {\n        accessToken = parsed.access_token;\n        getUser(accessToken, this.props.id).then(user => {\n          let imgUrl = user.images && user.images.length > 0 ? user.images[0].url : '';\n          this.setState({\n            imgUrl: imgUrl,\n            name: this.props.name,\n            text: this.props.text\n          });\n        });\n      }\n    };\n\n    this.state = {\n      imgUrl: '',\n      name: ''\n    };\n    this.redirectToUserProfile = this.redirectToUserProfile.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = '';\n\n    if (parsed.access_token) {\n      accessToken = parsed.access_token;\n      getUser(accessToken, this.props.id).then(user => {\n        let imgUrl = user.images && user.images.length > 0 ? user.images[0].url : '';\n        this.setState({\n          imgUrl: imgUrl,\n          name: this.props.name,\n          text: this.props.text\n        });\n      });\n    }\n  }\n\n  redirectToUserProfile() {\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = '';\n    if (parsed.access_token) accessToken = parsed.access_token;\n    window.location.href = window.location.origin + '/user/?username=' + this.props.name + '&userId=' + this.props.id + (accessToken ? '&access_token=' + accessToken : '');\n  }\n\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    if (name !== this.state.name || text !== this.state.text) this.reloadUserImg();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profilePic\",\n      src: this.state.imgUrl ? this.state.imgUrl : profilePicturePlaceholder,\n      onClick: this.redirectToUserProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"username\",\n      onClick: this.redirectToUserProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"postText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, text)));\n  }\n\n}\n\nclass PostMusic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.routeToSpotify = () => {\n      const history = useHistory();\n      history.push('https://open.spotify.com/track/' + this.props.songId);\n    };\n\n    this.loadTrack = async () => {\n      const trackData = await getTrack(this.props.accessToken, this.props.songId);\n      const albumCover = trackData.album.images[0].url;\n      this.setState({\n        picLoaded: true,\n        albumUrl: albumCover,\n        songName: this.props.songName\n      });\n    };\n\n    this.state = {\n      picLoaded: false,\n      albumUrl: '',\n      songName: ''\n    };\n    this.routeToSpotify = this.routeToSpotify.bind(this);\n  }\n\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n\n    if (this.props.loggedIn && this.state.songName != this.props.songName || this.props.loggedIn && !this.state.picLoaded) {\n      this.loadTrack();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postMusic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"albumImg\",\n      onClick: event => window.location.href = 'https://open.spotify.com/track/' + this.props.songId,\n      src: this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songCredit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"songName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, songName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, songArtist)));\n  }\n\n}\n\nexport default class Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pauseSong = async startTime => {\n      pause(this.props.accessToken);\n      this.stopTimer(startTime);\n    };\n\n    this.playSong = async (songId, startTime, endTime) => {\n      alert(\"SHOULD PLAY\");\n      alert(this.props.deviceId);\n      alert(this.props.accessToken);\n      alert(songId);\n      alert(startTime);\n      playAt(this.props.deviceId, this.props.accessToken, songId, startTime);\n      clearInterval(this.timer);\n      this.timer = '';\n      this.startTimer(startTime, endTime);\n    };\n\n    this.startTimer = async (startTime, endTime) => {\n      this.setState({\n        time: startTime,\n        start: Date.now() - startTime\n      });\n\n      if (!this.timer) {\n        this.timer = setInterval(() => {\n          this.setState({\n            time: Math.floor(Date.now() - this.state.start)\n          });\n\n          if (this.state.time > endTime) {\n            this.pauseSong(startTime);\n          }\n        }, 1000);\n      }\n    };\n\n    this.stopTimer = async startTime => {\n      this.setState({\n        time: startTime\n      });\n      clearInterval(this.timer);\n      this.timer = '';\n    };\n\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.clickedLikePost = this.clickedLikePost.bind(this);\n    this.state = {\n      playing: false,\n      time: 0,\n      start: 0,\n      accessToken: '',\n      likeCount: 0,\n      liked: false,\n      muted: false,\n      product: '',\n      name: '',\n      text: ''\n    };\n  }\n\n  componentDidMount() {\n    let liked = false;\n    loadLikes().then(likes => {\n      likes.forEach(like => {\n        if (like.postId === this.props.post._id && like.username === this.props.username) {\n          liked = true;\n        }\n      });\n    }).then(() => {\n      if (this.props.accessToken) {\n        getTrack(this.props.accessToken, this.props.post.songId).then(trackData => {\n          this.setState({\n            accessToken: this.props.accessToken,\n            likeCount: this.props.post.likeCount,\n            liked: liked,\n            muted: this.props.muted,\n            songPreviewUrl: trackData.preview_url,\n            product: this.props.product,\n            name: this.props.post.username,\n            text: this.props.post.text\n          });\n        });\n      } else {\n        this.setState({\n          accessToken: this.props.accessToken,\n          likeCount: this.props.post.likeCount,\n          liked: liked,\n          muted: this.props.muted,\n          songPreviewUrl: '',\n          name: this.props.post.username,\n          text: this.props.post.text\n        });\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.accessToken != prevProps.accessToken) this.setState({\n      accessToken: this.props.accessToken\n    });\n    if (this.props.muted != prevProps.muted) this.setState({\n      muted: this.props.muted\n    });\n\n    if (this.props.post.username !== this.state.name || this.props.post.text !== this.state.text) {\n      let liked = false;\n      loadLikes().then(likes => {\n        likes.forEach(like => {\n          if (like.postId === this.props.post._id && like.username === this.props.username) {\n            liked = true;\n          }\n        });\n      }).then(() => {\n        getTrack(this.props.accessToken, this.props.post.songId).then(trackData => {\n          this.setState({\n            likeCount: this.props.post.likeCount ? this.props.post.likeCount : 0,\n            liked: liked,\n            name: this.props.post.username,\n            text: this.props.post.text\n          });\n        });\n      });\n    }\n  }\n\n  handleMouseHover() {\n    alert(\"so\");\n\n    if (!this.props.muted && this.state.product) {\n      if (this.state.product === 'premium') {\n        alert(\"PLAY song\");\n        this.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n      } else if (this.state.songPreviewUrl) {\n        if (this.state.song) this.state.song.pause();\n        let song = new Audio(this.state.songPreviewUrl);\n        this.setState({\n          song: song\n        });\n        song.play();\n      }\n    }\n  }\n\n  handleMouseLeave() {\n    if (!this.props.muted && this.state.product) {\n      if (this.state.product === 'premium') {\n        setTimeout(() => {\n          this.pauseSong(this.props.post.startTime);\n        }, 100);\n      } else if (this.state.song) {\n        this.state.song.pause();\n      }\n    }\n  }\n\n  clickedLikePost() {\n    if (!this.state.liked) {\n      likePost(this.props.username, this.props.post._id);\n      this.setState({\n        likeCount: this.state.likeCount + 1,\n        liked: true\n      });\n    } else {\n      deleteLike(this.props.username, this.props.post._id);\n      this.setState({\n        likeCount: this.state.likeCount - 1,\n        liked: false\n      });\n    }\n  }\n\n  render() {\n    let post = this.props.post;\n\n    if (this.state.accessToken) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post\",\n        onTouchStart: this.handleMouseHover,\n        onTouchEnd: this.handleMouseLeave,\n        onMouseEnter: this.handleMouseHover,\n        onMouseLeave: this.handleMouseLeave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"postInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PostInfo, {\n        access_tokenn: this.state.accessToken,\n        name: post.username,\n        text: post.text,\n        id: post.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(PostMusic, {\n        songName: post.songName,\n        songArtist: post.songArtist,\n        songId: post.songId,\n        loggedIn: true,\n        accessToken: this.props.accessToken,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"likeButtonContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"likeButton myButtonOrange\",\n        onClick: this.clickedLikePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }\n      }, this.state.liked ? 'Liked' : 'Like'), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }\n      }, this.state.likeCount)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"postInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PostInfo, {\n        name: post.username,\n        text: post.text,\n        id: post.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(PostMusic, {\n        songName: post.songName,\n        songArtist: post.songArtist,\n        songId: post.songId,\n        loggedIn: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"likeButtonContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"likeButton myButtonOrange\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }\n      }, \"Like\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }\n      }, this.state.likeCount)));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/components/Post.js"],"names":["React","Component","profilePicturePlaceholder","queryString","getTrack","playAt","pause","getUser","useHistory","Link","loadLikes","likePost","deleteLike","PostInfo","constructor","props","reloadUserImg","parsed","parse","window","location","search","accessToken","access_token","id","then","user","imgUrl","images","length","url","setState","name","text","state","redirectToUserProfile","bind","componentDidMount","href","origin","render","PostMusic","routeToSpotify","history","push","songId","loadTrack","trackData","albumCover","album","picLoaded","albumUrl","songName","songArtist","loggedIn","event","Post","pauseSong","startTime","stopTimer","playSong","endTime","alert","deviceId","clearInterval","timer","startTimer","time","start","Date","now","setInterval","Math","floor","handleMouseHover","handleMouseLeave","clickedLikePost","playing","likeCount","liked","muted","product","likes","forEach","like","postId","post","_id","username","songPreviewUrl","preview_url","componentDidUpdate","prevProps","stopTime","song","Audio","play","setTimeout","userId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause, getUser } from '../spotifyCalls';\nimport { useHistory, Link } from 'react-router-dom';\nimport { loadLikes, likePost, deleteLike } from '../backendCalls';\n\nclass PostInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imgUrl: '',\n            name: ''\n        };\n        this.redirectToUserProfile = this.redirectToUserProfile.bind(this);\n    }\n    componentDidMount() {\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = ''\n        if (parsed.access_token) {\n            accessToken = parsed.access_token;\n            getUser(accessToken, this.props.id).then(user => {\n                let imgUrl = (user.images && user.images.length > 0) ?\n                    user.images[0].url : '';\n                this.setState({\n                    imgUrl: imgUrl,\n                    name: this.props.name,\n                    text: this.props.text\n                });\n            });\n        }\n    }\n    reloadUserImg = async () => {\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = ''\n        if (parsed.access_token) {\n            accessToken = parsed.access_token;\n            getUser(accessToken, this.props.id).then(user => {\n                let imgUrl = (user.images && user.images.length > 0) ?\n                    user.images[0].url : '';\n                this.setState({\n                    imgUrl: imgUrl,\n                    name: this.props.name,\n                    text: this.props.text\n                });\n            });\n        }\n    }\n    redirectToUserProfile() {\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = ''\n        if (parsed.access_token)\n            accessToken = parsed.access_token;\n\n        window.location.href = window.location.origin + \n        '/user/?username=' + this.props.name +\n        '&userId=' + this.props.id +\n         (accessToken ? ('&access_token=' + accessToken) : '');\n    }\n    render() {\n        let name = this.props.name;\n        let text = this.props.text;\n        if (name !== this.state.name || text !== this.state.text)\n            this.reloadUserImg();\n\n        return (\n            <div className=\"postInfo\">\n                <img className=\"profilePic\" src={this.state.imgUrl ? this.state.imgUrl : profilePicturePlaceholder}\n                    onClick={this.redirectToUserProfile}></img>\n                <div>\n                    <h3 className=\"username\" onClick={this.redirectToUserProfile}>{name}</h3>\n                    <p className=\"postText\">{text}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass PostMusic extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            picLoaded: false,\n            albumUrl: '',\n            songName: ''\n        };\n        this.routeToSpotify = this.routeToSpotify.bind(this);\n    }\n    routeToSpotify = () => {\n        const history = useHistory();\n        history.push('https://open.spotify.com/track/' + this.props.songId);\n    }\n    loadTrack = async () => {\n        const trackData = await getTrack(this.props.accessToken, this.props.songId);\n        const albumCover = trackData.album.images[0].url;\n        this.setState({\n            picLoaded: true,\n            albumUrl: albumCover,\n            songName: this.props.songName\n        });\n    }\n    render() {\n        let songName = this.props.songName;\n        let songArtist = this.props.songArtist;\n        if ((this.props.loggedIn && (this.state.songName != this.props.songName)) || (this.props.loggedIn && !this.state.picLoaded)) {\n            this.loadTrack();\n        }\n        return (\n            <div className=\"postMusic\">\n                <img className=\"albumImg\"\n                    onClick={event => window.location.href = 'https://open.spotify.com/track/' + this.props.songId}\n                    src={this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder}>\n                </img>\n                <div className=\"songCredit\">\n                    <h4 className=\"songName\">{songName}</h4>\n                    <p className=\"artists\">{songArtist}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class Post extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.clickedLikePost = this.clickedLikePost.bind(this);\n        this.state = {\n            playing: false,\n            time: 0,\n            start: 0,\n            accessToken: '',\n            likeCount: 0,\n            liked: false,\n            muted: false,\n            product: '',\n            name: '',\n            text: ''\n        };\n    }\n    componentDidMount() {\n        let liked = false;\n        loadLikes().then(likes => {\n            likes.forEach(like => {\n                if (like.postId === this.props.post._id && like.username === this.props.username) {\n                    liked = true;\n                }\n            });\n        }).then(() => {\n            if (this.props.accessToken) {\n                getTrack(this.props.accessToken, this.props.post.songId).then(trackData => {\n                    this.setState({\n                        accessToken: this.props.accessToken,\n                        likeCount: this.props.post.likeCount,\n                        liked: liked,\n                        muted: this.props.muted,\n                        songPreviewUrl: trackData.preview_url,\n                        product: this.props.product,\n                        name: this.props.post.username,\n                        text: this.props.post.text\n                    });\n                });\n            } else {\n                this.setState({\n                    accessToken: this.props.accessToken,\n                    likeCount: this.props.post.likeCount,\n                    liked: liked,\n                    muted: this.props.muted,\n                    songPreviewUrl: '',\n                    name: this.props.post.username,\n                    text: this.props.post.text\n                });\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.accessToken != prevProps.accessToken)\n            this.setState({ accessToken: this.props.accessToken });\n        if (this.props.muted != prevProps.muted)\n            this.setState({ muted: this.props.muted });\n        if (this.props.post.username !== this.state.name || this.props.post.text !== this.state.text) {\n            let liked = false;\n            loadLikes().then(likes => {\n                likes.forEach(like => {\n                    if (like.postId === this.props.post._id && like.username === this.props.username) {\n                        liked = true;\n                    }\n                });\n            }).then(() => {\n                getTrack(this.props.accessToken, this.props.post.songId).then(trackData => {\n                    this.setState({\n                        likeCount: this.props.post.likeCount ? this.props.post.likeCount : 0,\n                        liked: liked,\n                        name: this.props.post.username,\n                        text: this.props.post.text\n                    });\n                });\n            });\n        }\n    }\n    pauseSong = async (startTime) => {\n        pause(this.props.accessToken)\n        this.stopTimer(startTime);\n    }\n    playSong = async (songId, startTime, endTime) => {\n        alert(\"SHOULD PLAY\");\n        alert(this.props.deviceId);\n        alert(this.props.accessToken);\n        alert(songId);\n        alert(startTime);\n        \n        playAt(this.props.deviceId, this.props.accessToken, songId, startTime);\n        clearInterval(this.timer);\n        this.timer = '';\n        this.startTimer(startTime, endTime);\n    }\n    startTimer = async (startTime, endTime) => {\n        this.setState({\n            time: startTime,\n            start: Date.now() - startTime\n        });\n        if (!this.timer) {\n            this.timer = setInterval(() => {\n                this.setState({\n                    time: Math.floor(Date.now() - this.state.start),\n                });\n                if (this.state.time > endTime) {\n                    this.pauseSong(startTime);\n                }\n            }, 1000);\n        }\n    }\n    stopTimer = async (startTime) => {\n        this.setState({\n            time: startTime,\n        });\n        clearInterval(this.timer);\n        this.timer = '';\n    }\n    handleMouseHover() {\n        alert(\"so\");\n        if (!this.props.muted && this.state.product) {\n            if (this.state.product === 'premium') {\n                alert(\"PLAY song\");\n                this.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n            } else if (this.state.songPreviewUrl){\n                if (this.state.song)\n                    this.state.song.pause();\n                let song = new Audio(this.state.songPreviewUrl);\n                this.setState({\n                    song: song\n                });\n                song.play();\n            }\n        }\n    }\n    handleMouseLeave() {\n        if (!this.props.muted && this.state.product) {\n            if (this.state.product === 'premium') {\n                setTimeout((() => {\n                    this.pauseSong(this.props.post.startTime);\n                }), 100);\n            } else if (this.state.song) {\n                this.state.song.pause();\n            }\n        }\n    }\n    clickedLikePost() {\n        if (!this.state.liked) {\n            likePost(this.props.username, this.props.post._id);\n            this.setState({ likeCount: (this.state.likeCount + 1), liked: true });\n        } else {\n            deleteLike(this.props.username, this.props.post._id);\n            this.setState({ likeCount: (this.state.likeCount - 1), liked: false });\n        }\n    }\n    render() {\n        let post = this.props.post;\n        if (this.state.accessToken) {\n            return (\n                <div className=\"post\" onTouchStart={this.handleMouseHover} onTouchEnd={this.handleMouseLeave}\n                 onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseLeave}>\n                 {/* <div className=\"post\" onClick={this.handleMouseHover}> */}\n                    <div className=\"postInner\">\n                        <PostInfo access_tokenn={this.state.accessToken} name={post.username} text={post.text} id={post.userId}/>\n                        <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} loggedIn={true} accessToken={this.props.accessToken} />\n                    </div>\n                    <div className='likeButtonContainer'>\n                        <button className='likeButton myButtonOrange' onClick={this.clickedLikePost}>\n                            {this.state.liked ? 'Liked' : 'Like'}\n                        </button>\n                        <p>{this.state.likeCount}</p>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"post\">\n                    <div className='postInner'>\n                        <PostInfo name={post.username} text={post.text} id={post.userId} />\n                        <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} loggedIn={false} />\n                    </div>\n                    <div className='likeButtonContainer'>\n                        <button className='likeButton myButtonOrange'>Like</button>\n                        <p>{this.state.likeCount}</p>\n                    </div>\n                </div>\n            );\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}