{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/components/Post.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause } from '../spotifyCalls';\n\nclass PostInfo extends Component {\n  render() {\n    let name = this.props.name;\n    let text = this.props.text;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profilePic\",\n      src: profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"postText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }, text)));\n  }\n\n}\n\nclass PostMusic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadTrack = async () => {\n      let parsed = queryString.parse(window.location.search);\n      let accessToken = parsed.access_token;\n      const trackData = await getTrack(accessToken, this.props.songId);\n      const albumCover = trackData.album.images[0].url;\n      this.setState({\n        picLoaded: true,\n        albumUrl: albumCover\n      });\n    };\n\n    this.state = {\n      picLoaded: false,\n      albumUrl: ''\n    };\n  }\n\n  render() {\n    let songName = this.props.songName;\n    let songArtist = this.props.songArtist;\n\n    if (!this.state.picLoaded) {\n      this.loadTrack();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postMusic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"albumImg\",\n      src: this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songCredit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"songName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, songName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"artists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, songArtist)));\n  }\n\n}\n\nexport default class Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pauseSong = async startTime => {\n      pause(this.props.accessToken);\n      this.stopTimer(startTime);\n    };\n\n    this.playSong = async (songId, startTime, endTime) => {\n      playAt(this.props.deviceId, this.props.accessToken, this.state.activeSong, this.state.startTime);\n      clearInterval(this.timer);\n      this.timer = '';\n      this.startTimer(startTime, endTime);\n    };\n\n    this.startTimer = async (startTime, endTime) => {\n      this.setState({\n        time: startTime,\n        start: Date.now() - startTime\n      });\n\n      if (!this.timer) {\n        this.timer = setInterval(() => {\n          if (this.state.time > endTime) {\n            this.setState({\n              time: Math.floor(Date.now() - this.state.start),\n              playSong: false\n            });\n          } else {\n            this.setState({\n              time: Math.floor(Date.now() - this.state.start)\n            });\n          }\n        }, 1000);\n      }\n    };\n\n    this.stopTimer = async startTime => {\n      console.log('Stop timer');\n      this.setState({\n        time: startTime\n      });\n      clearInterval(this.timer);\n      this.timer = '';\n    };\n\n    this.setActiveSong = (songId, startTime, endTime) => {\n      console.log(\"here 1\");\n      this.setState({\n        activeSong: songId,\n        playSong: true,\n        startTime: startTime,\n        endTime: endTime\n      });\n    };\n\n    this.removeActiveSong = () => {\n      console.log(\"here 2\");\n      this.setState({\n        activeSong: '',\n        playSong: false\n      });\n    };\n\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.state = {\n      playing: false,\n      startTime: 0,\n      endTime: 0,\n      time: 0,\n      start: 0\n    };\n  }\n\n  handleMouseHover() {\n    // console.log(\"ENTER\");\n    // await this.props.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n    this.props.setActiveSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n  }\n\n  handleMouseLeave() {\n    // console.log(\"LEAVEEEEE\");\n    // await this.props.pauseSong(this.props.post.startTime);\n    this.props.removeActiveSong();\n  }\n\n  render() {\n    let post = this.props.post;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PostInfo, {\n      name: post.name,\n      text: post.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PostMusic, {\n      songName: post.songName,\n      songArtist: post.songArtist,\n      songId: post.songId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/components/Post.js"],"names":["React","Component","profilePicturePlaceholder","queryString","getTrack","playAt","pause","PostInfo","render","name","props","text","PostMusic","constructor","loadTrack","parsed","parse","window","location","search","accessToken","access_token","trackData","songId","albumCover","album","images","url","setState","picLoaded","albumUrl","state","songName","songArtist","Post","pauseSong","startTime","stopTimer","playSong","endTime","deviceId","activeSong","clearInterval","timer","startTimer","time","start","Date","now","setInterval","Math","floor","console","log","setActiveSong","removeActiveSong","handleMouseHover","bind","handleMouseLeave","playing","post","stopTime"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport { getTrack, playAt, pause } from '../spotifyCalls';\n\nclass PostInfo extends Component {\n    render() {\n        let name = this.props.name;\n        let text = this.props.text;\n        return (\n            <div className=\"postInfo\">\n                <img className=\"profilePic\" src={profilePicturePlaceholder}></img>\n                <div>\n                    <h3 className=\"username\">{name}</h3>\n                    <p className=\"postText\">{text}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass PostMusic extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            picLoaded: false,\n            albumUrl: ''\n        };\n    }\n    loadTrack = async () => {\n        let parsed = queryString.parse(window.location.search);\n        let accessToken = parsed.access_token;\n        const trackData = await getTrack(accessToken, this.props.songId);\n        const albumCover = trackData.album.images[0].url;\n        this.setState({\n            picLoaded: true,\n            albumUrl: albumCover\n        });\n    }\n    render() {\n        let songName = this.props.songName;\n        let songArtist = this.props.songArtist;\n        if (!this.state.picLoaded) {\n            this.loadTrack();\n        }\n        return (\n            <div className=\"postMusic\">\n                <img className=\"albumImg\" src={this.state.picLoaded ? this.state.albumUrl : profilePicturePlaceholder}></img>\n                <div className=\"songCredit\">\n                    <h4 className=\"songName\">{songName}</h4>\n                    <p className=\"artists\">{songArtist}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class Post extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.state = {\n            playing: false,\n            startTime: 0,\n            endTime: 0,\n            time: 0, \n            start: 0\n        };\n    }\n    pauseSong = async (startTime) => {\n        pause(this.props.accessToken)\n        this.stopTimer(startTime);\n    }\n    playSong = async (songId, startTime, endTime) => {\n        playAt(this.props.deviceId, this.props.accessToken, this.state.activeSong, this.state.startTime);\n        clearInterval(this.timer);\n        this.timer = '';\n        this.startTimer(startTime, endTime);\n    }\n    startTimer = async (startTime, endTime) => {\n        this.setState({\n            time: startTime,\n            start: Date.now() - startTime\n        });\n        if (!this.timer) {\n            this.timer = setInterval(() => {\n                if (this.state.time > endTime) {\n                    this.setState({\n                        time: Math.floor(Date.now() - this.state.start),\n                        playSong: false\n                    });\n                } else {\n                    this.setState({\n                        time: Math.floor(Date.now() - this.state.start)\n                    });\n                }\n            }, 1000);\n        }\n    }\n    stopTimer = async (startTime) => {\n        console.log('Stop timer');\n        this.setState({\n            time: startTime,\n        });\n        clearInterval(this.timer);\n        this.timer = '';\n    }\n    setActiveSong = (songId, startTime, endTime) => {\n        console.log(\"here 1\");\n        this.setState({\n            activeSong: songId,\n            playSong: true,\n            startTime: startTime,\n            endTime: endTime\n        });\n    }\n    removeActiveSong = () => {\n        console.log(\"here 2\");\n        this.setState({\n            activeSong: '',\n            playSong: false\n        });\n    }\n    handleMouseHover() {\n        // console.log(\"ENTER\");\n        // await this.props.playSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n        this.props.setActiveSong(this.props.post.songId, this.props.post.startTime, this.props.post.stopTime);\n    }\n    handleMouseLeave() {\n        // console.log(\"LEAVEEEEE\");\n        // await this.props.pauseSong(this.props.post.startTime);\n        this.props.removeActiveSong();\n    }\n    render() {\n        let post = this.props.post;\n\n        return (\n            <div className=\"post\" onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseLeave}>\n                <PostInfo name={post.name} text={post.text} />\n                <PostMusic songName={post.songName} songArtist={post.songArtist} songId={post.songId} />\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}