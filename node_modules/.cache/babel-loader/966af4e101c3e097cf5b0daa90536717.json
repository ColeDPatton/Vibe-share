{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/vibin/src/components/App.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport Post from './Post';\nimport NewPost from './NewPost';\nimport { loadPosts, submitPost, loadLikes, likePost, deleteLike } from '../backendCalls';\nimport { getUser } from '../spotifyCalls';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handlePlayerStatus = async device_id => {\n      this.setState({\n        deviceId: device_id\n      });\n    };\n\n    this.initializePlayer = () => {\n      const name = this.state.serverData.user.name + ' vibes';\n      this.player = new window.Spotify.Player({\n        getOAuthToken: cb => {\n          cb(this.state.accessToken);\n        },\n        name\n      });\n      this.player.addListener('initialization_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('authentication_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('account_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('playback_error', ({\n        message\n      }) => {\n        console.error(message);\n      }); // Playback status updates\n\n      this.player.addListener('player_state_changed', state => {\n        console.log(state);\n      }); // Ready\n\n      this.player.addListener('ready', ({\n        device_id\n      }) => {\n        this.handlePlayerStatus(device_id);\n        console.log('Ready with Device ID', device_id);\n      }); // Not Ready\n\n      this.player.addListener('not_ready', ({\n        device_id\n      }) => {\n        console.log('Device ID has gone offline', device_id);\n      });\n      this.player.connect();\n    };\n\n    this.state = {\n      serverData: {},\n      deviceId: '',\n      accessToken: '',\n      newPost: false\n    };\n    this.clickOuterNewPost = this.clickOuterNewPost.bind(this);\n    this.submitNewPost = this.submitNewPost.bind(this);\n    this.handleLogInButton = this.handleLogInButton.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = queryString.parse(window.location.search);\n\n    if (parsed.access_token) {\n      let accessToken = parsed.access_token;\n      let username = '';\n      getUser(accessToken).then(user => {\n        username = user.display_name;\n        window.username = username;\n        loadPosts().then(posts => {\n          let postsWithLikeCount = [];\n          loadLikes().then(likes => {\n            posts.forEach(post => {\n              let likeCount = 0;\n              likes.forEach(like => {\n                if (post._id === like.postId) {\n                  likeCount++;\n                }\n              });\n              post = { ...post,\n                likeCount: likeCount\n              };\n              postsWithLikeCount.push(post);\n            });\n            this.setState({\n              accessToken: accessToken,\n              serverData: {\n                posts: postsWithLikeCount,\n                user: {\n                  name: username\n                }\n              }\n            });\n          }).then(window.onSpotifyWebPlaybackSDKReady = this.initializePlayer);\n        });\n      });\n    } else {\n      loadPosts().then(posts => {\n        let postsWithLikeCount = [];\n        loadLikes().then(likes => {\n          posts.forEach(post => {\n            let likeCount = 0;\n            likes.forEach(like => {\n              if (post._id === like.postId) {\n                likeCount++;\n              }\n            });\n            post = { ...post,\n              likeCount: likeCount\n            };\n            postsWithLikeCount.push(post);\n          });\n          this.setState({\n            serverData: {\n              posts: postsWithLikeCount\n            }\n          });\n        });\n      });\n    }\n  }\n\n  async submitNewPost(text, songId, songName, songArtist, startTime, stopTime) {\n    const user = this.state.serverData.user.name;\n    const newPost = await submitPost(user, text, songId, songName, songArtist, startTime, stopTime);\n    const updatedPosts = this.state.serverData.posts;\n    updatedPosts.unshift(newPost);\n    this.setState({\n      serverData: {\n        posts: updatedPosts,\n        user: this.state.serverData.user\n      },\n      newPost: false\n    });\n  }\n\n  clickOuterNewPost() {\n    const showPost = this.state.newPost;\n    this.setState({\n      newPost: !showPost\n    });\n  }\n\n  handleLogInButton() {\n    if (!this.state.accessToken) {\n      window.location.href = window.location.href === 'http://localhost:3000/' ? 'http://localhost:8000/login' : 'https://vibin-backend.herokuapp.com/login';\n    }\n  }\n\n  render() {\n    let allPosts = this.state.serverData.posts ? this.state.serverData.posts : [];\n    let name = this.state.serverData.user ? this.state.serverData.user.name : 'Not logged in';\n    let loaded = this.state.serverData.posts;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, \"Vibe Share\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"usernameTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttonContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, loaded && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"myButtonWhite\",\n      onClick: () => {\n        const showPost = this.state.newPost;\n        this.setState({\n          newPost: !showPost\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, this.state.newPost ? \"Cancel\" : \"New Post\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"myButtonWhite\",\n      onClick: this.handleLogInButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, this.state.accessToken ? 'Log Out' : 'Log In'))), this.state.newPost && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"outerNewPost\",\n      onMouseDown: this.clickOuterNewPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(NewPost, {\n      deviceId: this.state.deviceId,\n      accessToken: this.state.accessToken,\n      onMouseDown: () => {},\n      userName: name,\n      submitNewPost: this.submitNewPost,\n      handleLogInButton: this.handleLogInButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    })), !this.state.accessToken && /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        'margin': '6em 0 -4em 5.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, \"Log in to share posts and listen to peoples vibes!\"), this.state.accessToken ? /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.newPost ? \"blurPosts\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }), allPosts.map(currentPost => /*#__PURE__*/React.createElement(Post, {\n      post: currentPost,\n      deviceId: this.state.deviceId,\n      accessToken: this.state.accessToken,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }\n    })))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notSignedIn posts\" + (this.state.newPost ? \" blurPosts\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, allPosts.map(currentPost => /*#__PURE__*/React.createElement(Post, {\n      post: currentPost,\n      deviceId: null,\n      accessToken: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/colepatton/vibin/src/components/App.js"],"names":["React","Component","profilePicturePlaceholder","queryString","Post","NewPost","loadPosts","submitPost","loadLikes","likePost","deleteLike","getUser","App","constructor","handlePlayerStatus","device_id","setState","deviceId","initializePlayer","name","state","serverData","user","player","window","Spotify","Player","getOAuthToken","cb","accessToken","addListener","message","console","error","log","connect","newPost","clickOuterNewPost","bind","submitNewPost","handleLogInButton","componentDidMount","parsed","parse","location","search","access_token","username","then","display_name","posts","postsWithLikeCount","likes","forEach","post","likeCount","like","_id","postId","push","onSpotifyWebPlaybackSDKReady","text","songId","songName","songArtist","startTime","stopTime","updatedPosts","unshift","showPost","href","render","allPosts","loaded","map","currentPost"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport Post from './Post';\nimport NewPost from './NewPost';\nimport { loadPosts, submitPost, loadLikes, likePost, deleteLike } from '../backendCalls';\nimport { getUser } from '../spotifyCalls';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverData: {},\n      deviceId: '',\n      accessToken: '',\n      newPost: false\n    };\n    this.clickOuterNewPost = this.clickOuterNewPost.bind(this);\n    this.submitNewPost = this.submitNewPost.bind(this);\n    this.handleLogInButton = this.handleLogInButton.bind(this);\n  }\n\n  handlePlayerStatus = async (device_id) => {\n    this.setState({\n      deviceId: device_id,\n    });\n  };\n\n  initializePlayer = () => {\n    const name = this.state.serverData.user.name + ' vibes';\n\n    this.player = new window.Spotify.Player({\n      getOAuthToken: cb => {\n        cb(this.state.accessToken);\n      },\n      name\n    });\n\n    this.player.addListener('initialization_error', ({ message }) => { console.error(message); });\n    this.player.addListener('authentication_error', ({ message }) => { console.error(message); });\n    this.player.addListener('account_error', ({ message }) => { console.error(message); });\n    this.player.addListener('playback_error', ({ message }) => { console.error(message); });\n\n    // Playback status updates\n    this.player.addListener('player_state_changed', state => { console.log(state); });\n\n    // Ready\n    this.player.addListener('ready', ({ device_id }) => {\n      this.handlePlayerStatus(device_id);\n      console.log('Ready with Device ID', device_id);\n    });\n\n    // Not Ready\n    this.player.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    this.player.connect();\n  };\n\n  componentDidMount() {\n    let parsed = queryString.parse(window.location.search);\n    if (parsed.access_token) {\n      let accessToken = parsed.access_token;\n      let username = '';\n      getUser(accessToken).then(user => {\n        username = user.display_name;\n        window.username = username;\n        loadPosts().then(posts => {\n          let postsWithLikeCount = [];\n          loadLikes().then(likes => {\n            posts.forEach(post => {\n              let likeCount = 0;\n              likes.forEach(like => {\n                if (post._id === like.postId) {\n                  likeCount++;\n                }\n              });\n              post = {\n                ...post,\n                likeCount: likeCount\n              }\n              postsWithLikeCount.push(post);\n            });\n            this.setState({\n              accessToken: accessToken,\n              serverData: {\n                posts: postsWithLikeCount,\n                user: {\n                  name: username\n                }\n              }\n            });\n          }).then(window.onSpotifyWebPlaybackSDKReady = this.initializePlayer);\n        });\n      });\n    } else {\n      loadPosts().then(posts => {\n        let postsWithLikeCount = [];\n        loadLikes().then(likes => {\n          posts.forEach(post => {\n            let likeCount = 0\n            likes.forEach(like => {\n              if (post._id === like.postId) {\n                likeCount++;\n              }\n            })\n            post = {\n              ...post,\n              likeCount: likeCount\n            }\n            postsWithLikeCount.push(post);\n          })\n          this.setState({\n            serverData: {\n              posts: postsWithLikeCount,\n            }\n          })\n        })\n      })\n    }\n  }\n\n  async submitNewPost(text, songId, songName, songArtist, startTime, stopTime) {\n    const user = this.state.serverData.user.name;\n    const newPost = await submitPost(\n      user,\n      text,\n      songId,\n      songName,\n      songArtist,\n      startTime,\n      stopTime\n    );\n    const updatedPosts = this.state.serverData.posts;\n    updatedPosts.unshift(newPost);\n    this.setState({\n      serverData: {\n        posts: updatedPosts,\n        user: this.state.serverData.user\n      },\n      newPost: false\n    });\n\n  }\n\n  clickOuterNewPost() {\n    const showPost = this.state.newPost;\n    this.setState({\n      newPost: !showPost\n    });\n  }\n\n  handleLogInButton() {\n    if (!this.state.accessToken) {\n      window.location.href = (window.location.href === 'http://localhost:3000/') ?\n        'http://localhost:8000/login' : 'https://vibin-backend.herokuapp.com/login'\n    }\n  }\n\n  render() {\n    let allPosts = this.state.serverData.posts ? this.state.serverData.posts : [];\n    let name = this.state.serverData.user ? this.state.serverData.user.name : 'Not logged in';\n    let loaded = this.state.serverData.posts;\n\n    return (\n      <div className=\"App\">\n        <div className='header'>\n          <div>\n            <h1>Vibe Share</h1>\n            <h3 className='usernameTitle'>{name}</h3>\n          </div>\n          <div className='buttonContainer'>\n            {loaded &&\n              <button className='myButtonWhite' onClick={() => {\n                const showPost = this.state.newPost;\n                this.setState({\n                  newPost: !showPost\n                });\n              }}>{this.state.newPost ? \"Cancel\" : \"New Post\"}</button>\n            }\n            <button className='myButtonWhite' onClick={this.handleLogInButton}>{this.state.accessToken ? 'Log Out' : 'Log In'}</button>\n          </div>\n        </div>\n        {this.state.newPost &&\n          <div>\n            <div className=\"outerNewPost\" onMouseDown={this.clickOuterNewPost}></div>\n            <NewPost\n              deviceId={this.state.deviceId}\n              accessToken={this.state.accessToken}\n              onMouseDown={() => { }}\n              userName={name}\n              submitNewPost={this.submitNewPost}\n              handleLogInButton={this.handleLogInButton}\n            />\n          </div>\n        }\n        {\n          (!this.state.accessToken) &&\n          <h3 style={{ 'margin': '6em 0 -4em 5.5em' }}>Log in to share posts and listen to peoples vibes!</h3>\n        }\n\n        {\n          this.state.accessToken\n            ?\n            <div className={this.state.newPost ? \"blurPosts\" : \"\"}>\n              <div className=\"posts\">\n              <button></button>\n                {allPosts.map(currentPost =>\n                  <Post\n                    post={currentPost}\n                    deviceId={this.state.deviceId}\n                    accessToken={this.state.accessToken}\n                  />)}\n              </div>\n            </div>\n            :\n            <div className={\"notSignedIn posts\" + (this.state.newPost ? \" blurPosts\" : \"\")}>\n              {allPosts.map(currentPost =>\n                <Post\n                  post={currentPost}\n                  deviceId={null}\n                  accessToken={null}\n                />)}\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}