{"ast":null,"code":"var _jsxFileName = \"/Users/colepatton/Vibe-share/src/pages/HomePage.js\";\nimport React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport Post from '../components/Post';\nimport NewPost from '../components/NewPost';\nimport Header from '../components/Header';\nimport { Filter } from '../components/NewPost';\nimport { FollowerLink } from '../pages/UserProfile';\nimport { loadPosts, submitPost, loadLikes, loadUserFollowing, newUser } from '../backendCalls';\nimport { getLoggedInUser } from '../spotifyCalls';\n\nclass HomePage extends Component {\n  constructor() {\n    super();\n\n    this.handlePlayerStatus = async device_id => {\n      this.setState({\n        deviceId: device_id\n      });\n    };\n\n    this.initializePlayer = () => {\n      const name = this.state.serverData.user.name + ' vibes';\n      this.player = new window.Spotify.Player({\n        getOAuthToken: cb => {\n          cb(this.state.accessToken);\n        },\n        name\n      });\n      this.player.addListener('initialization_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('authentication_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('account_error', ({\n        message\n      }) => {\n        console.error(message);\n      });\n      this.player.addListener('playback_error', ({\n        message\n      }) => {\n        console.error(message);\n      }); // Playback status updates\n\n      this.player.addListener('player_state_changed', state => {\n        console.log(state);\n      }); // Ready\n\n      this.player.addListener('ready', ({\n        device_id\n      }) => {\n        this.handlePlayerStatus(device_id);\n        console.log('Ready with Device ID', device_id);\n      }); // Not Ready\n\n      this.player.addListener('not_ready', ({\n        device_id\n      }) => {\n        console.log('Device ID has gone offline', device_id);\n      });\n      this.player.connect();\n    };\n\n    this.state = {\n      serverData: {},\n      deviceId: '',\n      accessToken: '',\n      newPost: false,\n      muted: true,\n      searching: false,\n      searchResults: []\n    };\n    this.clickNewPost = this.clickNewPost.bind(this);\n    this.clickOuterNewPost = this.clickOuterNewPost.bind(this);\n    this.submitNewPost = this.submitNewPost.bind(this);\n    this.handleMuteButton = this.handleMuteButton.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = queryString.parse(window.location.search);\n\n    if (parsed.access_token) {\n      let accessToken = parsed.access_token;\n      getLoggedInUser(accessToken).then(user => {\n        let imgUrl = user.images && user.images.length > 0 ? user.images[0].url : '';\n        loadUserFollowing(user.display_name).then(userFollowing => {\n          if (!Object.keys(userFollowing).length) {\n            newUser(user.id, user.display_name);\n          }\n        });\n        loadPosts().then(posts => {\n          let postsWithLikeCount = [];\n          loadLikes().then(likes => {\n            posts.forEach(post => {\n              let likeCount = 0;\n              likes.forEach(like => {\n                if (post._id === like.postId) {\n                  likeCount++;\n                }\n              });\n              post = { ...post,\n                likeCount: likeCount\n              };\n              postsWithLikeCount.push(post);\n            });\n            this.setState({\n              accessToken: accessToken,\n              serverData: {\n                posts: postsWithLikeCount,\n                user: {\n                  name: user.display_name,\n                  product: user.product,\n                  id: user.id,\n                  imgUrl: imgUrl\n                }\n              }\n            });\n          }).then(window.onSpotifyWebPlaybackSDKReady = this.initializePlayer);\n        });\n      });\n    } else {\n      loadPosts().then(posts => {\n        let postsWithLikeCount = [];\n        loadLikes().then(likes => {\n          posts.forEach(post => {\n            let likeCount = 0;\n            likes.forEach(like => {\n              if (post._id === like.postId) {\n                likeCount++;\n              }\n            });\n            post = { ...post,\n              likeCount: likeCount\n            };\n            postsWithLikeCount.push(post);\n          });\n          this.setState({\n            serverData: {\n              posts: postsWithLikeCount\n            }\n          });\n        });\n      });\n    }\n  }\n\n  async submitNewPost(text, songId, songName, songArtist, songArt, startTime, stopTime) {\n    const profilePic = this.state.serverData.user.imgUrl;\n    const username = this.state.serverData.user.name;\n    const userId = this.state.serverData.user.id;\n    const newPost = await submitPost(profilePic, username, userId, text, songId, songName, songArtist, songArt, startTime, stopTime);\n    const updatedPosts = this.state.serverData.posts;\n    updatedPosts.unshift(newPost);\n    this.setState({\n      serverData: {\n        posts: updatedPosts,\n        user: this.state.serverData.user\n      },\n      newPost: false\n    });\n  }\n\n  clickOuterNewPost() {\n    const showPost = this.state.newPost;\n    this.setState({\n      newPost: !showPost\n    });\n  }\n\n  handleMuteButton() {\n    this.setState({\n      muted: !this.state.muted\n    });\n  }\n\n  clickNewPost() {\n    const showPost = this.state.newPost;\n    this.setState({\n      newPost: !showPost\n    });\n  }\n\n  render() {\n    let allPosts = this.state.serverData.posts ? this.state.serverData.posts : [];\n    let name = this.state.serverData.user ? this.state.serverData.user.name : 'Not logged in';\n    let userId = this.state.serverData.user ? this.state.serverData.user.id : '';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      username: name,\n      userId: userId,\n      newPost: this.state.newPost,\n      clickNewPost: this.clickNewPost,\n      handleMuteButton: this.handleMuteButton,\n      muted: this.state.muted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }), this.state.newPost && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"outerNewPost\",\n      onMouseDown: this.clickOuterNewPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(NewPost, {\n      deviceId: this.state.deviceId,\n      accessToken: this.state.accessToken,\n      onMouseDown: () => {},\n      userName: name,\n      submitNewPost: this.submitNewPost,\n      handleLogInButton: this.handleLogInButton,\n      product: this.state.serverData.user.product,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        margin: '0 1em 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, \"Search: \"), /*#__PURE__*/React.createElement(Filter, {\n      onTextChange: text => {\n        this.setState({\n          searching: true,\n          filterString: text\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    })), this.state.searchResults.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: 'userSearchResults',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, this.state.searchResults.map(searchedUser => /*#__PURE__*/React.createElement(FollowerLink, {\n      follow: searchedUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    })), this.state.searchResults.map(searchedUser => /*#__PURE__*/React.createElement(FollowerLink, {\n      follow: searchedUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    })))), !this.state.accessToken && /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        'margin': '9em 0px -7em 10%',\n        'padding': '.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }, allPosts.length === 0 ? \"Waiting for backend to wake up. Refresh the page after 30 seconds if nothing loads\" : \"Log in with your Spotify account to share posts and listen to peoples vibes!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'blurScreen ' + (this.state.newPost ? 'showBlurScreen' : 'hideBlurScreen'),\n      onClick: this.clickOuterNewPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }), this.state.accessToken ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, allPosts.map(currentPost => /*#__PURE__*/React.createElement(Post, {\n      post: currentPost,\n      deviceId: this.state.deviceId,\n      accessToken: this.state.accessToken,\n      muted: this.state.muted,\n      username: name,\n      product: this.state.serverData.user.product,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notSignedIn posts\" + (this.state.newPost ? \" blurPosts\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, allPosts.map(currentPost => /*#__PURE__*/React.createElement(Post, {\n      post: currentPost,\n      deviceId: null,\n      accessToken: null,\n      muted: this.state.muted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/colepatton/Vibe-share/src/pages/HomePage.js"],"names":["React","Component","profilePicturePlaceholder","queryString","Post","NewPost","Header","Filter","FollowerLink","loadPosts","submitPost","loadLikes","loadUserFollowing","newUser","getLoggedInUser","HomePage","constructor","handlePlayerStatus","device_id","setState","deviceId","initializePlayer","name","state","serverData","user","player","window","Spotify","Player","getOAuthToken","cb","accessToken","addListener","message","console","error","log","connect","newPost","muted","searching","searchResults","clickNewPost","bind","clickOuterNewPost","submitNewPost","handleMuteButton","componentDidMount","parsed","parse","location","search","access_token","then","imgUrl","images","length","url","display_name","userFollowing","Object","keys","id","posts","postsWithLikeCount","likes","forEach","post","likeCount","like","_id","postId","push","product","onSpotifyWebPlaybackSDKReady","text","songId","songName","songArtist","songArt","startTime","stopTime","profilePic","username","userId","updatedPosts","unshift","showPost","render","allPosts","handleLogInButton","display","alignItems","margin","filterString","map","searchedUser","currentPost"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport profilePicturePlaceholder from '../img/profilePicturePlaceholder.jpg';\nimport '../style/App.css';\nimport queryString from 'query-string';\nimport Post from '../components/Post';\nimport NewPost from '../components/NewPost';\nimport Header from '../components/Header';\nimport { Filter } from '../components/NewPost'\nimport { FollowerLink } from '../pages/UserProfile'\nimport { loadPosts, submitPost, loadLikes, loadUserFollowing, newUser } from '../backendCalls';\nimport { getLoggedInUser } from '../spotifyCalls';\n\nclass HomePage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      serverData: {},\n      deviceId: '',\n      accessToken: '',\n      newPost: false,\n      muted: true,\n      searching: false,\n      searchResults: []\n    };\n    this.clickNewPost = this.clickNewPost.bind(this);\n    this.clickOuterNewPost = this.clickOuterNewPost.bind(this);\n    this.submitNewPost = this.submitNewPost.bind(this);\n    this.handleMuteButton = this.handleMuteButton.bind(this);\n  }\n\n  handlePlayerStatus = async (device_id) => {\n    this.setState({\n      deviceId: device_id,\n    });\n  };\n\n  initializePlayer = () => {\n    const name = this.state.serverData.user.name + ' vibes';\n\n    this.player = new window.Spotify.Player({\n      getOAuthToken: cb => {\n        cb(this.state.accessToken);\n      },\n      name\n    });\n\n    this.player.addListener('initialization_error', ({ message }) => { console.error(message); });\n    this.player.addListener('authentication_error', ({ message }) => { console.error(message); });\n    this.player.addListener('account_error', ({ message }) => { console.error(message); });\n    this.player.addListener('playback_error', ({ message }) => { console.error(message); });\n\n    // Playback status updates\n    this.player.addListener('player_state_changed', state => { console.log(state); });\n\n    // Ready\n    this.player.addListener('ready', ({ device_id }) => {\n      this.handlePlayerStatus(device_id);\n      console.log('Ready with Device ID', device_id);\n    });\n\n    // Not Ready\n    this.player.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    this.player.connect();\n  };\n\n  componentDidMount() {\n    let parsed = queryString.parse(window.location.search);\n    if (parsed.access_token) {\n      let accessToken = parsed.access_token;\n\n      getLoggedInUser(accessToken).then(user => {\n        let imgUrl = user.images && user.images.length > 0 ?\n          user.images[0].url : '';\n\n        loadUserFollowing(user.display_name).then(userFollowing => {\n          if (!Object.keys(userFollowing).length) {\n            newUser(user.id, user.display_name);\n          }\n        });\n        loadPosts().then(posts => {\n          let postsWithLikeCount = [];\n          loadLikes().then(likes => {\n            posts.forEach(post => {\n              let likeCount = 0;\n              likes.forEach(like => {\n                if (post._id === like.postId) {\n                  likeCount++;\n                }\n              });\n              post = {\n                ...post,\n                likeCount: likeCount\n              }\n              postsWithLikeCount.push(post);\n            });\n            this.setState({\n              accessToken: accessToken,\n              serverData: {\n                posts: postsWithLikeCount,\n                user: {\n                  name: user.display_name,\n                  product: user.product,\n                  id: user.id,\n                  imgUrl: imgUrl\n                }\n              }\n            });\n          }).then(window.onSpotifyWebPlaybackSDKReady = this.initializePlayer);\n        });\n      });\n    } else {\n      loadPosts().then(posts => {\n        let postsWithLikeCount = [];\n        loadLikes().then(likes => {\n          posts.forEach(post => {\n            let likeCount = 0\n            likes.forEach(like => {\n              if (post._id === like.postId) {\n                likeCount++;\n              }\n            })\n            post = {\n              ...post,\n              likeCount: likeCount\n            }\n            postsWithLikeCount.push(post);\n          })\n          this.setState({\n            serverData: {\n              posts: postsWithLikeCount,\n            }\n          })\n        })\n      })\n    }\n  }\n\n  async submitNewPost(text, songId, songName, songArtist, songArt, startTime, stopTime) {\n    const profilePic = this.state.serverData.user.imgUrl;\n    const username = this.state.serverData.user.name;\n    const userId = this.state.serverData.user.id;\n    const newPost = await submitPost(\n      profilePic,\n      username,\n      userId,\n      text,\n      songId,\n      songName,\n      songArtist,\n      songArt,\n      startTime,\n      stopTime\n    );\n    const updatedPosts = this.state.serverData.posts;\n    updatedPosts.unshift(newPost);\n    this.setState({\n      serverData: {\n        posts: updatedPosts,\n        user: this.state.serverData.user\n      },\n      newPost: false\n    });\n  }\n\n  clickOuterNewPost() {\n    const showPost = this.state.newPost;\n    this.setState({\n      newPost: !showPost\n    });\n  }\n  handleMuteButton() {\n    this.setState({ muted: !this.state.muted });\n  }\n  clickNewPost() {\n    const showPost = this.state.newPost;\n    this.setState({\n      newPost: !showPost\n    });\n  }\n  render() {\n    let allPosts = this.state.serverData.posts ? this.state.serverData.posts : [];\n    let name = this.state.serverData.user ? this.state.serverData.user.name : 'Not logged in';\n    let userId = this.state.serverData.user ? this.state.serverData.user.id : '';\n\n    return (\n      <div className=\"App\">\n        <Header\n          username={name}\n          userId={userId}\n          newPost={this.state.newPost}\n          clickNewPost={this.clickNewPost}\n          handleMuteButton={this.handleMuteButton}\n          muted={this.state.muted}\n        />\n        {this.state.newPost &&\n          <div>\n            <div className=\"outerNewPost\" onMouseDown={this.clickOuterNewPost} />\n            <NewPost\n              deviceId={this.state.deviceId}\n              accessToken={this.state.accessToken}\n              onMouseDown={() => { }}\n              userName={name}\n              submitNewPost={this.submitNewPost}\n              handleLogInButton={this.handleLogInButton}\n              product={this.state.serverData.user.product}\n            />\n          </div>\n        }\n        <div className=\"searchContainer\">\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <h4 style={{ margin: '0 1em 0 0' }}>Search: </h4>\n            <Filter onTextChange={text => {\n              this.setState({ searching: true, filterString: text });\n            }} />\n          </div>\n          {this.state.searchResults.length > 0 &&\n            <div className={'userSearchResults'}>\n              {this.state.searchResults.map(searchedUser =>\n                <FollowerLink follow={searchedUser} />\n              )}\n              {this.state.searchResults.map(searchedUser =>\n                <FollowerLink follow={searchedUser} />\n              )}\n            </div>\n          }\n        </div>\n        {\n          (!this.state.accessToken) &&\n          <h3 style={{ 'margin': '9em 0px -7em 10%', 'padding': '.5em' }}>\n            {allPosts.length === 0 ? \"Waiting for backend to wake up. Refresh the page after 30 seconds if nothing loads\" :\n              \"Log in with your Spotify account to share posts and listen to peoples vibes!\"}</h3>\n        }\n        <div className={'blurScreen ' + (this.state.newPost ? 'showBlurScreen' : 'hideBlurScreen')}\n          onClick={this.clickOuterNewPost} />\n        {\n          this.state.accessToken\n            ?\n            <div className=\"posts\">\n              {allPosts.map(currentPost =>\n                <Post\n                  post={currentPost}\n                  deviceId={this.state.deviceId}\n                  accessToken={this.state.accessToken}\n                  muted={this.state.muted}\n                  username={name}\n                  product={this.state.serverData.user.product}\n                />)}\n            </div>\n            :\n            <div className={\"notSignedIn posts\" + (this.state.newPost ? \" blurPosts\" : \"\")}>\n              {allPosts.map(currentPost =>\n                <Post\n                  post={currentPost}\n                  deviceId={null}\n                  accessToken={null}\n                  muted={this.state.muted}\n                />)}\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}