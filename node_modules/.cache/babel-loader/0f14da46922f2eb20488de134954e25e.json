{"ast":null,"code":"const url = window.location.href.includes('localhost') ? 'http://localhost:8000' : 'https://vibin-backend.herokuapp.com';\nexport async function loadPosts() {\n  return fetch(url + '/api/posts', {\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    method: 'GET'\n  }).then(d => d.json());\n}\nexport async function submitPost(name, text, songId, songName, songArtist, startTime, stopTime) {\n  var data = new URLSearchParams();\n  data.append('name', name);\n  data.append('text', text);\n  data.append('songId', songId);\n  data.append('songName', songName);\n  data.append('songArtist', songArtist);\n  data.append('startTime', startTime);\n  data.append('stopTime', stopTime);\n  return fetch(url + '/api/newPost', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: data\n  }).then(d => d.json());\n}\nexport async function loadLikes() {\n  return fetch(url + '/api/likes', {\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    method: 'GET'\n  }).then(d => d.json());\n}\nexport async function likePost(username, postId) {\n  var data = new URLSearchParams();\n  data.append('username', username);\n  data.append('postId', postId);\n  return fetch(url + '/api/likePost', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: data\n  }).then(d => d.json());\n}\nexport async function deleteLike(username, postId) {\n  var data = new URLSearchParams();\n  data.append('username', username);\n  data.append('postId', postId);\n  return fetch(url + '/api/removeLike', {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: data\n  }).then(d => d.json());\n}\nexport async function loadUserFollowing(username) {\n  return fetch(url + '/api/user/?userId=' + username, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    method: 'GET'\n  }).then(d => d.json());\n}\nexport async function newUser(username) {\n  var data = new URLSearchParams();\n  data.append('username', username);\n  data.append('followers', []);\n  data.append('following', []);\n  return fetch(url + '/api/newUser', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: data\n  }).then(d => d.json());\n}\nexport async function followUser(personFollowing, personBeingFollowed) {\n  const personFollowingData = await loadUserFollowing(personFollowing);\n  const personBeingFollowedData = await loadUserFollowing(personBeingFollowed);\n  var newFollowingData = new URLSearchParams();\n  newFollowingData.append('username', personFollowingData.username);\n  newFollowingData.append('newFollowing', personBeingFollowedData.username);\n  var newFollowerData = new URLSearchParams();\n  newFollowerData.append('username', personBeingFollowedData.username);\n  newFollowerData.append('newFollower', personFollowingData.username);\n  fetch(url + '/api/newFollow', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: newFollowingData\n  }).then(d => d.json());\n  fetch(url + '/api/newFollower', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: newFollowerData\n  }).then(d => d.json());\n}\nexport async function unFollowUser(personUnfollowing, personBeingUnfollowed) {\n  const personUnfollowingData = await loadUserFollowing(personUnfollowing);\n  const personBeingUnfollowedData = await loadUserFollowing(personBeingUnfollowed);\n  var unfollowingData = new URLSearchParams();\n  unfollowingData.append('username', personUnfollowingData.username);\n  unfollowingData.append('unfollowing', personBeingUnfollowedData.username);\n  var loseFollowerData = new URLSearchParams();\n  loseFollowerData.append('username', personBeingUnfollowedData.username);\n  loseFollowerData.append('loseFollower', personUnfollowingData.username);\n  fetch(url + '/api/unfollow', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: unfollowingData\n  }).then(d => d.json());\n  fetch(url + '/api/loseFollower', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: loseFollowerData\n  }).then(d => d.json());\n}","map":{"version":3,"sources":["/Users/colepatton/vibin/src/backendCalls.js"],"names":["url","window","location","href","includes","loadPosts","fetch","headers","method","then","d","json","submitPost","name","text","songId","songName","songArtist","startTime","stopTime","data","URLSearchParams","append","body","loadLikes","likePost","username","postId","deleteLike","loadUserFollowing","newUser","followUser","personFollowing","personBeingFollowed","personFollowingData","personBeingFollowedData","newFollowingData","newFollowerData","unFollowUser","personUnfollowing","personBeingUnfollowed","personUnfollowingData","personBeingUnfollowedData","unfollowingData","loseFollowerData"],"mappings":"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","sourcesContent":["const url = window.location.href.includes('localhost') ?\n    'http://localhost:8000' : 'https://vibin-backend.herokuapp.com'\n\nexport async function loadPosts() {\n    return fetch(url + '/api/posts', {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        method: 'GET',\n    }).then(d => d.json());\n}\n\nexport async function submitPost(name, text, songId, songName, songArtist, startTime, stopTime) {\n    var data = new URLSearchParams();\n    data.append('name', name);\n    data.append('text', text);\n    data.append('songId', songId);\n    data.append('songName', songName);\n    data.append('songArtist', songArtist);\n    data.append('startTime', startTime);\n    data.append('stopTime', stopTime);\n    return fetch(url + '/api/newPost', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: data\n    }).then(d => d.json());\n}\n\nexport async function loadLikes() {\n    return fetch(url + '/api/likes', {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        method: 'GET',\n    }).then(d => d.json());\n}\n\nexport async function likePost(username, postId) {\n    var data = new URLSearchParams();\n    data.append('username', username);\n    data.append('postId', postId);\n    return fetch(url + '/api/likePost', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: data\n    }).then(d => d.json());\n}\n\nexport async function deleteLike(username, postId) {\n    var data = new URLSearchParams();\n    data.append('username', username);\n    data.append('postId', postId);\n    return fetch(url + '/api/removeLike', {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: data\n    }).then(d => d.json());\n}\n\nexport async function loadUserFollowing(username) {\n    return fetch(url + '/api/user/?userId=' + username, {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        method: 'GET',\n    }).then(d => d.json());\n}\n\nexport async function newUser(username) {\n    var data = new URLSearchParams();\n    data.append('username', username);\n    data.append('followers', []);\n    data.append('following', []);\n    return fetch(url + '/api/newUser', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: data\n    }).then(d => d.json());\n}\n\nexport async function followUser(personFollowing, personBeingFollowed) {\n    const personFollowingData = await loadUserFollowing(personFollowing);\n    const personBeingFollowedData = await loadUserFollowing(personBeingFollowed);\n\n    var newFollowingData = new URLSearchParams();\n    newFollowingData.append('username', personFollowingData.username);\n    newFollowingData.append('newFollowing', personBeingFollowedData.username);\n\n    var newFollowerData = new URLSearchParams();\n    newFollowerData.append('username', personBeingFollowedData.username);\n    newFollowerData.append('newFollower', personFollowingData.username);\n\n    fetch(url + '/api/newFollow', {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: newFollowingData\n    }).then(d => d.json());\n    fetch(url + '/api/newFollower', {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: newFollowerData\n    }).then(d => d.json());\n}\n\nexport async function unFollowUser(personUnfollowing, personBeingUnfollowed) {\n    const personUnfollowingData = await loadUserFollowing(personUnfollowing);\n    const personBeingUnfollowedData = await loadUserFollowing(personBeingUnfollowed);\n\n    var unfollowingData = new URLSearchParams();\n    unfollowingData.append('username', personUnfollowingData.username);\n    unfollowingData.append('unfollowing', personBeingUnfollowedData.username);\n\n    var loseFollowerData = new URLSearchParams();\n    loseFollowerData.append('username', personBeingUnfollowedData.username);\n    loseFollowerData.append('loseFollower', personUnfollowingData.username);\n\n    fetch(url + '/api/unfollow', {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: unfollowingData\n    }).then(d => d.json());\n    fetch(url + '/api/loseFollower', {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: loseFollowerData\n    }).then(d => d.json());\n}"]},"metadata":{},"sourceType":"module"}